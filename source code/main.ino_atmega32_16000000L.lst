
C:\Users\LENOVO\AppData\Local\arduino\sketches\FC8888A0AE4DB66C374C6B920C4ABD58/main.ino.elf:     file format elf32-avr


Disassembly of section .text:

00000000 <__vectors>:
__vectors():
       0:	0c 94 6a 08 	jmp	0x10d4	; 0x10d4 <__dtors_end>
       4:	0c 94 92 08 	jmp	0x1124	; 0x1124 <__bad_interrupt>
       8:	0c 94 92 08 	jmp	0x1124	; 0x1124 <__bad_interrupt>
       c:	0c 94 92 08 	jmp	0x1124	; 0x1124 <__bad_interrupt>
      10:	0c 94 92 08 	jmp	0x1124	; 0x1124 <__bad_interrupt>
      14:	0c 94 92 08 	jmp	0x1124	; 0x1124 <__bad_interrupt>
      18:	0c 94 92 08 	jmp	0x1124	; 0x1124 <__bad_interrupt>
      1c:	0c 94 92 08 	jmp	0x1124	; 0x1124 <__bad_interrupt>
      20:	0c 94 92 08 	jmp	0x1124	; 0x1124 <__bad_interrupt>
      24:	0c 94 92 08 	jmp	0x1124	; 0x1124 <__bad_interrupt>
      28:	0c 94 92 08 	jmp	0x1124	; 0x1124 <__bad_interrupt>
      2c:	0c 94 12 0d 	jmp	0x1a24	; 0x1a24 <__vector_11>
      30:	0c 94 92 08 	jmp	0x1124	; 0x1124 <__bad_interrupt>
      34:	0c 94 82 0d 	jmp	0x1b04	; 0x1b04 <__vector_13>
      38:	0c 94 5c 0d 	jmp	0x1ab8	; 0x1ab8 <__vector_14>
      3c:	0c 94 92 08 	jmp	0x1124	; 0x1124 <__bad_interrupt>
      40:	0c 94 92 08 	jmp	0x1124	; 0x1124 <__bad_interrupt>
      44:	0c 94 92 08 	jmp	0x1124	; 0x1124 <__bad_interrupt>
      48:	0c 94 92 08 	jmp	0x1124	; 0x1124 <__bad_interrupt>
      4c:	0c 94 92 08 	jmp	0x1124	; 0x1124 <__bad_interrupt>
      50:	0c 94 92 08 	jmp	0x1124	; 0x1124 <__bad_interrupt>
      54:	07 63       	ori	r16, 0x37	; 55
      56:	42 36       	cpi	r20, 0x62	; 98
      58:	b7 9b       	sbis	0x16, 7	; 22
      5a:	d8 a7       	std	Y+40, r29	; 0x28
      5c:	1a 39       	cpi	r17, 0x9A	; 154
      5e:	68 56       	subi	r22, 0x68	; 104
      60:	18 ae       	std	Y+56, r1	; 0x38
      62:	ba ab       	std	Y+50, r27	; 0x32
      64:	55 8c       	ldd	r5, Z+29	; 0x1d
      66:	1d 3c       	cpi	r17, 0xCD	; 205
      68:	b7 cc       	rjmp	.-1682   	; 0xfffff9d8 <__eeprom_end+0xff7ef9d8>
      6a:	57 63       	ori	r21, 0x37	; 55
      6c:	bd 6d       	ori	r27, 0xDD	; 221
      6e:	ed fd       	.word	0xfded	; ????
      70:	75 3e       	cpi	r23, 0xE5	; 229
      72:	f6 17       	cp	r31, r22
      74:	72 31       	cpi	r23, 0x12	; 18
      76:	bf 00       	.word	0x00bf	; ????
      78:	00 00       	nop
      7a:	80 3f       	cpi	r24, 0xF0	; 240
      7c:	08 00       	.word	0x0008	; ????
      7e:	00 00       	nop
      80:	be 92       	st	-X, r11
      82:	24 49       	sbci	r18, 0x94	; 148
      84:	12 3e       	cpi	r17, 0xE2	; 226
      86:	ab aa       	std	Y+51, r10	; 0x33
      88:	aa 2a       	or	r10, r26
      8a:	be cd       	rjmp	.-1156   	; 0xfffffc08 <__eeprom_end+0xff7efc08>
      8c:	cc cc       	rjmp	.-1640   	; 0xfffffa26 <__eeprom_end+0xff7efa26>
      8e:	4c 3e       	cpi	r20, 0xEC	; 236
      90:	00 00       	nop
      92:	00 80       	ld	r0, Z
      94:	be ab       	std	Y+54, r27	; 0x36
      96:	aa aa       	std	Y+50, r10	; 0x32
      98:	aa 3e       	cpi	r26, 0xEA	; 234
      9a:	00 00       	nop
      9c:	00 00       	nop
      9e:	bf 00       	.word	0x00bf	; ????
      a0:	00 00       	nop
      a2:	80 3f       	cpi	r24, 0xF0	; 240
      a4:	00 00       	nop
      a6:	00 00       	nop
      a8:	00 08       	sbc	r0, r0
      aa:	41 78       	andi	r20, 0x81	; 129
      ac:	d3 bb       	out	0x13, r29	; 19
      ae:	43 87       	std	Z+11, r20	; 0x0b
      b0:	d1 13       	cpse	r29, r17
      b2:	3d 19       	sub	r19, r13
      b4:	0e 3c       	cpi	r16, 0xCE	; 206
      b6:	c3 bd       	out	0x23, r28	; 35
      b8:	42 82       	std	Z+2, r4	; 0x02
      ba:	ad 2b       	or	r26, r29
      bc:	3e 68       	ori	r19, 0x8E	; 142
      be:	ec 82       	std	Y+4, r14	; 0x04
      c0:	76 be       	out	0x36, r7	; 54
      c2:	d9 8f       	std	Y+25, r29	; 0x19
      c4:	e1 a9       	ldd	r30, Z+49	; 0x31
      c6:	3e 4c       	sbci	r19, 0xCE	; 206
      c8:	80 ef       	ldi	r24, 0xF0	; 240
      ca:	ff be       	out	0x3f, r15	; 63
      cc:	01 c4       	rjmp	.+2050   	; 0x8d0 <showHelp()::__c+0x10>
      ce:	ff 7f       	andi	r31, 0xFF	; 255
      d0:	3f 00       	.word	0x003f	; ????
      d2:	00 00       	nop
	...

000000d6 <__trampolines_end>:
__trampolines_start():
      d6:	4e 41       	sbci	r20, 0x1E	; 30
      d8:	4e 49       	Address 0x000000d8 is out of bounds.
.word	0xffff	; ????

000000d9 <pstr_inity>:
      d9:	49 4e 49 54 59                                      INITY

000000de <pstr_inf>:
      de:	49 4e 46                                            INF

000000e1 <pwr_m10>:
      e1:	cd cc cc 3d 0a d7 23 3c 17 b7 d1 38 77 cc 2b 32     ...=..#<...8w.+2
      f1:	95 95 e6 24 1f b1 4f 0a                             ...$..O.

000000f9 <pwr_p10>:
      f9:	00 00 20 41 00 00 c8 42 00 40 1c 46 20 bc be 4c     .. A...B.@.F ..L
     109:	ca 1b 0e 5a ae c5 9d 74                             ...Z...t

00000111 <__c.2370>:
     111:	63 64 69 6e 6f 70 73 75 78 58 5b 00                 cdinopsuxX[.

0000011d <printCurrentUser()::__c>:
	...

0000011e <registerUser()::__c>:
     11e:	5b 53 5d 20 55 73 65 72 20 72 65 67 69 73 74 65     [S] User registe
     12e:	72 65 64 20 73 75 63 63 65 73 73 66 75 6c 6c 79     red successfully
     13e:	2e 00                                               ..

00000140 <registerUser()::__c>:
     140:	43 72 65 61 74 65 20 50 61 73 73 77 6f 72 64 3a     Create Password:
     150:	20 00                                                .

00000152 <registerUser()::__c>:
     152:	43 72 65 61 74 65 20 55 73 65 72 6e 61 6d 65 3a     Create Username:
     162:	20 00                                                .

00000164 <loginUser()::__c>:
     164:	5b 53 5d 20 4c 6f 67 69 6e 20 73 75 63 63 65 73     [S] Login succes
     174:	73 66 75 6c 2e 20 57 65 6c 63 6f 6d 65 20 62 61     sful. Welcome ba
     184:	63 6b 21 00                                         ck!.

00000188 <loginUser()::__c>:
     188:	5b 21 5d 20 49 6e 76 61 6c 69 64 20 75 73 65 72     [!] Invalid user
     198:	6e 61 6d 65 20 6f 72 20 70 61 73 73 77 6f 72 64     name or password
     1a8:	2e 00                                               ..

000001aa <elenaUserStartup()::__c>:
     1aa:	5b 58 5d 20 4c 6f 67 69 6e 20 61 62 6f 72 74 65     [X] Login aborte
     1ba:	64 2e 00                                            d..

000001bd <elenaUserStartup()::__c>:
     1bd:	5b 58 5d 20 4c 6f 67 69 6e 20 61 62 6f 72 74 65     [X] Login aborte
     1cd:	64 2e 00                                            d..

000001d0 <elenaUserStartup()::__c>:
     1d0:	5b 3f 5d 20 52 65 74 72 79 20 6c 6f 67 69 6e 3f     [?] Retry login?
     1e0:	20 28 79 2f 6e 29 00                                 (y/n).

000001e7 <elenaUserStartup()::__c>:
     1e7:	5b 69 5d 20 50 6c 65 61 73 65 20 74 72 79 20 61     [i] Please try a
     1f7:	67 61 69 6e 2e 0a 00                                gain...

000001fe <elenaUserStartup()::__c>:
     1fe:	5b 58 5d 20 53 6b 69 70 70 69 6e 67 20 6c 6f 67     [X] Skipping log
     20e:	69 6e 2e 2e 2e 00                                   in....

00000214 <elenaUserStartup()::__c>:
     214:	5b 3f 5d 20 44 6f 20 79 6f 75 20 77 61 6e 74 20     [?] Do you want 
     224:	74 6f 20 6c 6f 67 69 6e 3f 20 28 79 2f 6e 29 00     to login? (y/n).

00000234 <elenaUserStartup()::__c>:
     234:	5b 69 5d 20 4e 6f 20 75 73 65 72 20 66 6f 75 6e     [i] No user foun
     244:	64 2e 20 50 6c 65 61 73 65 20 72 65 67 69 73 74     d. Please regist
     254:	65 72 2e 00                                         er..

00000258 <_ZZ9showIntrovE3__c__18_>:
     258:	20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20                     
     268:	20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20                     
     278:	20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20                     
     288:	20 20 20 20 00                                          .

0000028d <_ZZ9showIntrovE3__c__17_>:
     28d:	5b 69 5d 20 54 79 70 65 20 27 68 65 6c 70 27 20     [i] Type 'help' 
     29d:	74 6f 20 73 65 65 20 61 76 61 69 6c 61 62 6c 65     to see available
     2ad:	20 63 6f 6d 6d 61 6e 64 73 2e 20 20 20 20 20 20      commands.      
     2bd:	20 20 20 20 00                                          .

000002c2 <_ZZ9showIntrovE3__c__16_>:
     2c2:	20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20                     
     2d2:	20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20                     
     2e2:	20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20                     
     2f2:	20 20 20 20 00                                          .

000002f7 <_ZZ9showIntrovE3__c__15_>:
     2f7:	3d 3d 3d 3d 3d 3d 3d 3d 3d 3d 3d 3d 3d 3d 3d 3d     ================
     307:	3d 3d 3d 3d 3d 3d 3d 3d 3d 3d 3d 3d 3d 3d 3d 3d     ================
     317:	3d 3d 3d 3d 3d 3d 3d 3d 3d 3d 3d 3d 3d 3d 3d 3d     ================
     327:	3d 3d 20 20 00                                      ==  .

0000032c <_ZZ9showIntrovE3__c__14_>:
     32c:	20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20                     
     33c:	20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20                     
     34c:	20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20                     
     35c:	20 20 20 20 00                                          .

00000361 <_ZZ9showIntrovE3__c__13_>:
     361:	20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 62                    b
     371:	79 20 45 78 74 65 72 6e 61 6c 69 7a 65 20 53 79     y Externalize Sy
     381:	73 74 65 6d 20 20 20 20 20 20 20 20 20 20 20 20     stem            
     391:	20 20 20 20 00                                          .

00000396 <_ZZ9showIntrovE3__c__12_>:
     396:	20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20                     
     3a6:	42 75 69 6c 64 3a 20 31 32 20 4a 75 6e 65 20 32     Build: 12 June 2
     3b6:	30 32 35 20 20 20 20 20 20 20 20 20 20 20 20 20     025             
     3c6:	20 20 20 20 00                                          .

000003cb <_ZZ9showIntrovE3__c__11_>:
     3cb:	20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20                     
     3db:	20 45 4c 45 4e 41 20 43 4c 49 20 4f 53 20 76 31      ELENA CLI OS v1
     3eb:	2e 30 20 20 20 20 20 20 20 20 20 20 20 20 20 20     .0              
     3fb:	20 20 20 20 00                                          .

00000400 <_ZZ9showIntrovE3__c__10_>:
     400:	20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20                     
     410:	20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20                     
     420:	20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20                     
     430:	20 20 20 20 00                                          .

00000435 <showIntro()::__c>:
     435:	7c 5f 5f 5f 5f 5f 5f 5f 5f 2f 7c 5f 5f 5f 5f 5f     |________/|_____
     445:	5f 5f 5f 2f 7c 5f 5f 5f 5f 5f 5f 5f 5f 2f 7c 5f     ___/|________/|_
     455:	5f 2f 20 20 5f 5f 2f 7c 5f 5f 2f 20 20 7c 5f 5f     _/  __/|__/  |__
     465:	2f 20 20 00                                         /  .

00000469 <showIntro()::__c>:
     469:	7c 20 24 24 24 24 24 24 24 24 7c 20 24 24 24 24     | $$$$$$$$| $$$$
     479:	24 24 24 24 7c 20 24 24 24 24 24 24 24 24 7c 20     $$$$| $$$$$$$$| 
     489:	24 24 20 20 20 24 24 7c 20 24 24 20 20 7c 20 24     $$   $$| $$  | $
     499:	24 20 20 00                                         $  .

0000049d <showIntro()::__c>:
     49d:	7c 20 24 24 20 20 20 20 20 20 7c 20 24 24 20 20     | $$      | $$  
     4ad:	20 20 20 20 7c 20 24 24 20 20 20 20 20 20 7c 20         | $$      | 
     4bd:	24 24 20 20 24 24 24 7c 20 24 24 20 20 7c 20 24     $$  $$$| $$  | $
     4cd:	24 20 20 00                                         $  .

000004d1 <showIntro()::__c>:
     4d1:	7c 20 24 24 5f 5f 2f 20 20 20 7c 20 24 24 20 20     | $$__/   | $$  
     4e1:	20 20 20 20 7c 20 24 24 5f 5f 2f 20 20 20 7c 20         | $$__/   | 
     4f1:	24 24 20 20 24 24 24 24 7c 20 24 24 5f 5f 20 20     $$  $$$$| $$__  
     501:	24 24 20 20 00                                      $$  .

00000506 <showIntro()::__c>:
     506:	7c 20 24 24 24 24 24 20 20 20 7c 20 24 24 20 20     | $$$$$   | $$  
     516:	20 20 20 20 7c 20 24 24 24 24 24 20 20 20 7c 20         | $$$$$   | 
     526:	24 24 20 24 24 20 24 24 7c 20 24 24 24 24 24 24     $$ $$ $$| $$$$$$
     536:	24 24 20 20 00                                      $$  .

0000053b <showIntro()::__c>:
     53b:	7c 20 24 24 20 20 20 20 20 20 7c 20 24 24 20 20     | $$      | $$  
     54b:	20 20 20 20 7c 20 24 24 20 20 20 20 20 20 7c 20         | $$      | 
     55b:	24 24 24 24 7c 20 24 24 7c 20 24 24 20 20 20 24     $$$$| $$| $$   $
     56b:	24 20 20 00                                         $  .

0000056f <showIntro()::__c>:
     56f:	7c 20 24 24 5f 5f 5f 5f 5f 2f 7c 20 24 24 20 20     | $$_____/| $$  
     57f:	20 20 20 20 7c 20 24 24 5f 5f 5f 5f 5f 2f 7c 20         | $$_____/| 
     58f:	24 24 24 20 7c 20 24 24 20 2f 24 24 5f 5f 20 20     $$$ | $$ /$$__  
     59f:	24 24 20 20 00                                      $$  .

000005a4 <showIntro()::__c>:
     5a4:	20 2f 24 24 24 24 24 24 24 24 20 2f 24 24 20 20      /$$$$$$$$ /$$  
     5b4:	20 20 20 20 20 2f 24 24 24 24 24 24 24 24 20 2f          /$$$$$$$$ /
     5c4:	24 24 20 20 20 2f 24 24 20 20 2f 24 24 24 24 24     $$   /$$  /$$$$$
     5d4:	24 20 20 20 00                                      $   .

000005d9 <showIntro()::__c>:
     5d9:	20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20                     
     5e9:	20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20                     
     5f9:	20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20                     
     609:	20 20 20 20 00                                          .

0000060e <showIntro()::__c>:
     60e:	3d 3d 3d 3d 3d 3d 3d 3d 3d 3d 3d 3d 3d 3d 3d 3d     ================
     61e:	3d 3d 3d 3d 3d 3d 3d 3d 3d 3d 3d 3d 3d 3d 3d 3d     ================
     62e:	3d 3d 3d 3d 3d 3d 3d 3d 3d 3d 3d 3d 3d 3d 3d 3d     ================
     63e:	3d 3d 20 20 00                                      ==  .

00000643 <showIntro()::__c>:
     643:	20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20                     
     653:	20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20                     
     663:	20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20                     
     673:	20 20 20 20 00                                          .

00000678 <printPrompt()::__c>:
     678:	3e 20 00                                            > .

0000067b <printPrompt()::__c>:
     67b:	67 75 65 73 74 00                                   guest.

00000681 <_ZZ8showHelpvE3__c__13_>:
     681:	20 e2 94 94 e2 94 80 e2 94 80 e2 94 80 e2 94 80      ...............
     691:	e2 94 80 e2 94 80 e2 94 80 e2 94 80 e2 94 80 e2     ................
     6a1:	94 80 e2 94 80 e2 94 80 e2 94 80 e2 94 80 e2 94     ................
     6b1:	80 e2 94 80 e2 94 80 e2 94 80 e2 94 80 e2 94 80     ................
     6c1:	e2 94 98 00                                         ....

000006c5 <_ZZ8showHelpvE3__c__12_>:
     6c5:	20 e2 94 82 20 67 70 69 6f 2d 72 65 61 64 20 20      ... gpio-read  
     6d5:	20 20 e2 86 92 20 47 50 49 4f 20 52 65 61 64 20       ... GPIO Read 
     6e5:	49 6e 70 75 74 00                                   Input.

000006eb <_ZZ8showHelpvE3__c__11_>:
     6eb:	20 e2 94 82 20 67 70 69 6f 2d 77 72 69 74 65 20      ... gpio-write 
     6fb:	20 20 e2 86 92 20 47 50 49 4f 20 57 72 69 74 65       ... GPIO Write
     70b:	20 4f 75 74 70 75 74 00                              Output.

00000713 <_ZZ8showHelpvE3__c__10_>:
     713:	20 e2 94 82 20 63 61 6c 63 20 20 20 20 20 20 20      ... calc       
     723:	20 20 e2 86 92 20 43 61 6c 63 75 6c 61 74 6f 72       ... Calculator
	...

00000734 <showHelp()::__c>:
     734:	20 e2 94 82 20 73 65 74 2d 74 69 6d 65 28 21 29      ... set-time(!)
     744:	20 20 e2 86 92 20 53 65 74 74 69 6e 67 20 74 69       ... Setting ti
     754:	6d 65 00                                            me.

00000757 <showHelp()::__c>:
     757:	20 e2 94 82 20 74 69 6d 65 28 21 29 20 20 20 20      ... time(!)    
     767:	20 20 e2 86 92 20 44 69 73 70 6c 61 79 20 63 75       ... Display cu
     777:	72 72 65 6e 74 20 74 69 6d 65 00                    rrent time.

00000782 <showHelp()::__c>:
     782:	20 e2 94 82 20 77 68 6f 61 6d 69 20 20 20 20 20      ... whoami     
     792:	20 20 e2 86 92 20 44 69 73 70 6c 61 79 20 6c 6f       ... Display lo
     7a2:	67 67 65 64 20 69 6e 20 75 73 65 72 00              gged in user.

000007af <showHelp()::__c>:
     7af:	20 e2 94 82 20 72 65 62 6f 6f 74 20 20 20 20 20      ... reboot     
     7bf:	20 20 e2 86 92 20 52 65 62 6f 6f 74 20 74 68 65       ... Reboot the
     7cf:	20 73 79 73 74 65 6d 00                              system.

000007d7 <showHelp()::__c>:
     7d7:	20 e2 94 82 20 72 6e 73 2d 61 63 63 20 20 20 20      ... rns-acc    
     7e7:	20 20 e2 86 92 20 52 65 6d 6f 76 65 20 26 20 73       ... Remove & s
     7f7:	65 74 20 6e 65 77 20 61 63 63 6f 75 6e 74 00        et new account.

00000806 <showHelp()::__c>:
     806:	20 e2 94 82 20 73 74 61 74 20 20 20 20 20 20 20      ... stat       
     816:	20 20 e2 86 92 20 53 68 6f 77 20 73 79 73 74 65       ... Show syste
     826:	6d 20 26 20 68 61 72 64 77 61 72 65 20 73 74 61     m & hardware sta
     836:	74 75 73 00                                         tus.

0000083a <showHelp()::__c>:
     83a:	20 e2 94 82 20 6c 6f 67 6f 75 74 20 20 20 20 20      ... logout     
     84a:	20 20 e2 86 92 20 4c 6f 67 6f 75 74 20 66 72 6f       ... Logout fro
     85a:	6d 20 79 6f 75 72 20 61 63 6f 6f 75 6e 74 00        m your acoount.

00000869 <showHelp()::__c>:
     869:	20 e2 94 82 20 6c 6f 67 69 6e 20 20 20 20 20 20      ... login      
     879:	20 20 e2 86 92 20 4c 6f 67 69 6e 20 77 69 74 68       ... Login with
     889:	20 79 6f 75 72 20 75 73 65 72 6e 61 6d 65 00         your username.

00000898 <showHelp()::__c>:
     898:	20 e2 94 82 20 68 65 6c 70 20 20 20 20 20 20 20      ... help       
     8a8:	20 20 e2 86 92 20 53 68 6f 77 20 61 6c 6c 20 63       ... Show all c
     8b8:	6f 6d 6d 61 6e 64 73 00                             ommands.

000008c0 <showHelp()::__c>:
     8c0:	20 e2 94 8c e2 94 80 e2 94 80 e2 94 80 e2 94 80      ...............
     8d0:	e2 94 80 e2 94 80 e2 94 80 e2 94 80 e2 94 80 e2     ................
     8e0:	94 80 e2 94 80 e2 94 80 e2 94 80 e2 94 80 e2 94     ................
     8f0:	80 e2 94 80 e2 94 80 e2 94 80 e2 94 80 e2 94 80     ................
     900:	e2 94 90 00                                         ....

00000904 <showHelp()::__c>:
     904:	5b 69 5d 20 41 76 61 69 6c 61 62 6c 65 20 43 6f     [i] Available Co
     914:	6d 6d 61 6e 64 73 3a 00                             mmands:.

0000091c <cmd_eeprom_wipe()::__c>:
     91c:	5b 53 5d 20 45 45 50 52 4f 4d 20 77 69 70 65 64     [S] EEPROM wiped
     92c:	20 73 75 63 63 65 73 73 66 75 6c 6c 79 2e 00         successfully..

0000093b <cmd_eeprom_wipe()::__c>:
	...

0000093c <cmd_eeprom_wipe()::__c>:
     93c:	5b 44 43 5d 20 45 72 61 73 69 6e 67 20 45 45 50     [DC] Erasing EEP
     94c:	52 4f 4d 2e 2e 2e 00                                ROM....

00000953 <cmd_eeprom_wipe()::__c>:
     953:	5b 58 5d 20 43 61 6e 63 65 6c 6c 65 64 2e 20 45     [X] Cancelled. E
     963:	45 50 52 4f 4d 20 6e 6f 74 20 65 72 61 73 65 64     EPROM not erased
     973:	2e 00                                               ..

00000975 <cmd_eeprom_wipe()::__c>:
     975:	54 79 70 65 20 27 43 4f 4e 46 49 52 4d 27 20 74     Type 'CONFIRM' t
     985:	6f 20 70 72 6f 63 65 65 64 3a 00                    o proceed:.

00000990 <cmd_eeprom_wipe()::__c>:
     990:	5b 69 5d 20 59 6f 75 20 6e 65 65 64 20 74 6f 20     [i] You need to 
     9a0:	6c 6f 67 69 6e 20 66 69 72 73 74 21 20 54 79 70     login first! Typ
     9b0:	65 20 27 6c 6f 67 69 6e 27 20 74 6f 20 6c 6f 67     e 'login' to log
     9c0:	69 6e 2e 00                                         in..

000009c4 <cmd_eeprom_wipe()::__c>:
     9c4:	5b 21 5d 20 57 41 52 4e 49 4e 47 3a 20 54 68 69     [!] WARNING: Thi
     9d4:	73 20 77 69 6c 6c 20 65 72 61 73 65 20 41 4c 4c     s will erase ALL
     9e4:	20 49 4e 54 45 52 4e 41 4c 20 45 45 50 52 4f 4d      INTERNAL EEPROM
     9f4:	20 64 61 74 61 21 00                                 data!.

000009fb <cmd_gpioRead()::__c>:
     9fb:	5b 21 5d 20 46 6f 72 6d 61 74 20 69 6e 76 61 6c     [!] Format inval
     a0b:	69 64 2e 20 54 72 79 3a 20 27 67 70 69 6f 20 70     id. Try: 'gpio p
     a1b:	61 30 27 20 6f 72 20 27 67 70 69 6f 20 61 6c 6c     a0' or 'gpio all
     a2b:	27 2e 00                                            '..

00000a2e <cmd_gpioRead()::__c>:
     a2e:	3a 20 00                                            : .

00000a31 <cmd_gpioRead()::__c>:
     a31:	5b 69 5d 20 50 00                                   [i] P.

00000a37 <cmd_gpioRead()::__c>:
     a37:	20 69 73 20 00                                       is .

00000a3c <cmd_gpioRead()::__c>:
     a3c:	5b 69 5d 20 47 50 49 4f 20 50 00                    [i] GPIO P.

00000a47 <cmd_gpioRead()::__c>:
     a47:	5b 21 5d 20 50 69 6e 20 6e 75 6d 62 65 72 20 6d     [!] Pin number m
     a57:	75 73 74 20 62 65 20 30 2d 37 2e 00                 ust be 0-7..

00000a63 <cmd_gpioRead()::__c>:
     a63:	5b 21 5d 20 50 6f 72 74 20 69 6e 76 61 6c 69 64     [!] Port invalid
     a73:	2e 20 55 73 65 20 50 41 2c 20 50 42 2c 20 50 43     . Use PA, PB, PC
     a83:	2c 20 6f 72 20 50 44 2e 00                          , or PD..

00000a8c <cmd_gpioRead()::__c>:
     a8c:	5b 58 5d 20 45 78 69 74 20 66 72 6f 6d 20 47 50     [X] Exit from GP
     a9c:	49 4f 20 52 65 61 64 20 4d 6f 64 65 2e 00           IO Read Mode..

00000aaa <cmd_gpioRead()::__c>:
     aaa:	67 70 69 6f 5f 72 65 61 64 3e 3e 20 00              gpio_read>> .

00000ab7 <cmd_gpioRead()::__c>:
     ab7:	5b 69 5d 20 45 6e 74 65 72 69 6e 67 20 47 50 49     [i] Entering GPI
     ac7:	4f 20 52 65 61 64 20 4d 6f 64 65 2e 20 54 79 70     O Read Mode. Typ
     ad7:	65 20 27 67 70 69 6f 20 5b 70 69 6e 5d 27 20 6f     e 'gpio [pin]' o
     ae7:	72 20 27 67 70 69 6f 20 61 6c 6c 27 2e 20 54 79     r 'gpio all'. Ty
     af7:	70 65 20 27 65 78 69 74 27 20 74 6f 20 71 75 69     pe 'exit' to qui
     b07:	74 2e 00                                            t..

00000b0a <_ZZ13cmd_gpioWritevE3__c__12_>:
     b0a:	5b 21 5d 20 49 6e 76 61 6c 69 64 20 66 6f 72 6d     [!] Invalid form
     b1a:	61 74 2e 20 55 73 65 20 27 67 70 69 6f 20 70 61     at. Use 'gpio pa
     b2a:	31 20 68 27 20 6f 72 20 27 67 70 69 6f 20 61 6c     1 h' or 'gpio al
     b3a:	6c 20 6c 27 2e 00                                   l l'..

00000b40 <_ZZ13cmd_gpioWritevE3__c__11_>:
     b40:	5b 21 5d 20 53 74 61 74 75 73 20 69 6e 76 61 6c     [!] Status inval
     b50:	69 64 2e 20 55 73 65 20 27 68 27 20 6f 72 20 27     id. Use 'h' or '
     b60:	6c 27 2e 00                                         l'..

00000b64 <_ZZ13cmd_gpioWritevE3__c__10_>:
     b64:	20 73 65 74 20 4c 4f 57 2e 00                        set LOW..

00000b6e <cmd_gpioWrite()::__c>:
     b6e:	5b 53 5d 20 47 50 49 4f 20 50 00                    [S] GPIO P.

00000b79 <cmd_gpioWrite()::__c>:
     b79:	20 73 65 74 20 48 49 47 48 2e 00                     set HIGH..

00000b84 <cmd_gpioWrite()::__c>:
     b84:	5b 53 5d 20 47 50 49 4f 20 50 00                    [S] GPIO P.

00000b8f <cmd_gpioWrite()::__c>:
     b8f:	5b 21 5d 20 43 61 6e 27 74 20 6d 6f 64 69 66 79     [!] Can't modify
     b9f:	20 50 44 30 20 6f 72 20 50 44 31 20 28 75 73 65      PD0 or PD1 (use
     baf:	64 20 66 6f 72 20 53 65 72 69 61 6c 29 2e 00        d for Serial)..

00000bbe <cmd_gpioWrite()::__c>:
     bbe:	5b 21 5d 20 50 69 6e 20 6e 75 6d 62 65 72 20 6d     [!] Pin number m
     bce:	75 73 74 20 62 65 20 30 2d 37 2e 00                 ust be 0-7..

00000bda <cmd_gpioWrite()::__c>:
     bda:	5b 21 5d 20 50 6f 72 74 20 69 6e 76 61 6c 69 64     [!] Port invalid
     bea:	2e 20 55 73 65 20 50 41 2c 20 50 42 2c 20 50 43     . Use PA, PB, PC
     bfa:	2c 20 6f 72 20 50 44 2e 00                          , or PD..

00000c03 <cmd_gpioWrite()::__c>:
     c03:	5b 53 5d 20 41 6c 6c 20 47 50 49 4f 20 73 65 74     [S] All GPIO set
     c13:	20 74 6f 20 00                                       to .

00000c18 <cmd_gpioWrite()::__c>:
     c18:	5b 21 5d 20 53 74 61 74 75 73 20 69 6e 76 61 6c     [!] Status inval
     c28:	69 64 2e 20 55 73 65 20 27 68 27 20 6f 72 20 27     id. Use 'h' or '
     c38:	6c 27 20 66 6f 72 20 67 70 69 6f 20 61 6c 6c 2e     l' for gpio all.
	...

00000c49 <cmd_gpioWrite()::__c>:
     c49:	5b 21 5d 20 45 78 69 74 20 66 72 6f 6d 20 47 50     [!] Exit from GP
     c59:	49 4f 20 4d 6f 64 65 20 28 6f 75 74 29 2e 00        IO Mode (out)..

00000c68 <cmd_gpioWrite()::__c>:
     c68:	67 70 69 6f 5f 77 72 69 74 65 3e 3e 20 00           gpio_write>> .

00000c76 <cmd_gpioWrite()::__c>:
     c76:	5b 69 5d 20 45 6e 74 65 72 69 6e 67 20 47 50 49     [i] Entering GPI
     c86:	4f 20 4d 6f 64 65 20 28 57 72 69 74 65 29 2e 20     O Mode (Write). 
     c96:	54 79 70 65 20 27 67 70 69 6f 20 5b 70 69 6e 5d     Type 'gpio [pin]
     ca6:	20 5b 68 2f 6c 5d 27 2c 20 27 67 70 69 6f 20 61      [h/l]', 'gpio a
     cb6:	6c 6c 20 5b 68 2f 6c 5d 27 2c 20 6f 72 20 27 65     ll [h/l]', or 'e
     cc6:	78 69 74 27 2e 00                                   xit'..

00000ccc <evaluateExpression(char const*)::__c>:
     ccc:	5b 58 5d 20 49 6e 76 61 6c 69 64 20 6f 70 65 72     [X] Invalid oper
     cdc:	61 74 6f 72 3a 20 00                                ator: .

00000ce3 <evaluateExpression(char const*)::__c>:
     ce3:	5b 58 5d 20 44 69 76 69 64 65 20 62 79 20 7a 65     [X] Divide by ze
     cf3:	72 6f 21 00                                         ro!.

00000cf7 <evaluateExpression(char const*)::__c>:
     cf7:	5b 21 5d 20 73 71 72 74 28 29 20 6f 66 20 6e 65     [!] sqrt() of ne
     d07:	67 61 74 69 76 65 20 6e 75 6d 62 65 72 21 00        gative number!.

00000d16 <cmd_calc()::__c>:
     d16:	52 65 73 75 6c 74 3a 20 00                          Result: .

00000d1f <cmd_calc()::__c>:
     d1f:	5b 58 5d 20 45 78 69 74 20 66 72 6f 6d 20 43 61     [X] Exit from Ca
     d2f:	6c 63 75 6c 61 74 6f 72 20 4d 6f 64 65 2e 00        lculator Mode..

00000d3e <cmd_calc()::__c>:
     d3e:	63 61 6c 63 3e 3e 20 00                             calc>> .

00000d46 <cmd_calc()::__c>:
     d46:	43 61 6c 63 75 6c 61 74 6f 72 20 4d 6f 64 65 2e     Calculator Mode.
     d56:	20 54 79 70 65 20 61 20 6d 61 74 68 20 65 78 70      Type a math exp
     d66:	72 65 73 73 69 6f 6e 20 28 65 2e 67 2e 20 38 20     ression (e.g. 8 
     d76:	2b 20 32 20 2a 20 73 71 72 74 32 35 20 2d 20 34     + 2 * sqrt25 - 4
     d86:	20 2f 20 32 20 5e 20 32 29 20 6f 72 20 27 65 78      / 2 ^ 2) or 'ex
     d96:	69 74 27 2e 00                                      it'..

00000d9b <cmd_set_time()::__c>:
     d9b:	45 4c 45 4e 41 3e 20 41 77 77 2c 20 69 27 6d 20     ELENA> Aww, i'm 
     dab:	73 6f 72 72 79 2c 20 74 68 69 73 20 66 65 61 74     sorry, this feat
     dbb:	75 72 65 20 69 73 20 75 6e 64 65 72 20 64 65 76     ure is under dev
     dcb:	65 6c 6f 70 6d 65 6e 74 20 3a 28 00                 elopment :(.

00000dd7 <cmd_time()::__c>:
     dd7:	45 4c 45 4e 41 3e 20 41 77 77 2c 20 69 27 6d 20     ELENA> Aww, i'm 
     de7:	73 6f 72 72 79 2c 20 74 68 69 73 20 66 65 61 74     sorry, this feat
     df7:	75 72 65 20 69 73 20 75 6e 64 65 72 20 64 65 76     ure is under dev
     e07:	65 6c 6f 70 6d 65 6e 74 20 3a 28 20 00              elopment :( .

00000e14 <cmd_resetandset()::__c>:
     e14:	5b 58 5d 20 52 65 67 69 73 74 65 72 20 63 61 6e     [X] Register can
     e24:	63 65 6c 6c 65 64 20 62 65 63 61 75 73 65 20 6c     celled because l
     e34:	6f 67 69 6e 20 66 61 69 6c 65 64 2e 00              ogin failed..

00000e41 <cmd_resetandset()::__c>:
     e41:	5b 53 5d 20 52 65 73 65 74 20 61 63 63 6f 75 6e     [S] Reset accoun
     e51:	74 20 73 75 63 63 65 73 73 2c 20 79 6f 75 20 63     t success, you c
     e61:	61 6e 20 72 65 6c 6f 67 20 74 6f 20 79 6f 75 72     an relog to your
     e71:	20 6e 65 77 20 61 63 63 6f 75 6e 74 21 00            new account!.

00000e7f <cmd_resetandset()::__c>:
     e7f:	5b 21 5d 20 59 6f 75 20 6d 75 73 74 20 6c 6f 67     [!] You must log
     e8f:	69 6e 20 74 6f 20 72 65 73 65 74 20 79 6f 75 72     in to reset your
     e9f:	20 61 63 63 6f 75 6e 74 21 00                        account!.

00000ea9 <_ZZ8cmd_statbE3__c__12_>:
     ea9:	2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d     ----------------
     eb9:	2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d     ----------------
     ec9:	2d 00                                               -.

00000ecb <_ZZ8cmd_statbE3__c__11_>:
     ecb:	5b 54 5d 20 55 70 74 69 6d 65 3a 20 00              [T] Uptime: .

00000ed8 <_ZZ8cmd_statbE3__c__10_>:
     ed8:	20 42 79 74 65 73 00                                 Bytes.

00000edf <cmd_stat(bool)::__c>:
     edf:	20 2f 20 00                                          / .

00000ee3 <cmd_stat(bool)::__c>:
     ee3:	5b 52 5d 20 52 41 4d 20 55 73 65 64 3a 20 00        [R] RAM Used: .

00000ef2 <cmd_stat(bool)::__c>:
     ef2:	20 42 79 74 65 73 00                                 Bytes.

00000ef9 <cmd_stat(bool)::__c>:
     ef9:	20 2f 20 00                                          / .

00000efd <cmd_stat(bool)::__c>:
     efd:	5b 45 5d 20 45 45 50 52 4f 4d 20 55 73 65 64 3a     [E] EEPROM Used:
     f0d:	20 00                                                .

00000f0f <cmd_stat(bool)::__c>:
     f0f:	20 4d 48 7a 00                                       MHz.

00000f14 <cmd_stat(bool)::__c>:
     f14:	5b 43 5d 20 43 50 55 20 46 72 65 71 3a 20 00        [C] CPU Freq: .

00000f23 <cmd_stat(bool)::__c>:
     f23:	41 54 6d 65 67 61 33 32 00                          ATmega32.

00000f2c <cmd_stat(bool)::__c>:
     f2c:	5b 4d 5d 20 4d 43 55 3a 20 00                       [M] MCU: .

00000f36 <cmd_stat(bool)::__c>:
     f36:	5b 55 5d 20 4e 6f 74 20 6c 6f 67 67 65 64 20 69     [U] Not logged i
     f46:	6e 00                                               n.

00000f48 <cmd_stat(bool)::__c>:
     f48:	0a 2d 2d 2d 2d 2d 2d 2d 2d 2d 20 53 79 73 74 65     .--------- Syste
     f58:	6d 20 53 74 61 74 75 73 20 2d 2d 2d 2d 2d 2d 2d     m Status -------
     f68:	2d 2d 00                                            --.

00000f6b <showDangerousHelp()::__c>:
     f6b:	20 e2 94 94 e2 94 80 e2 94 80 e2 94 80 e2 94 80      ...............
     f7b:	e2 94 80 e2 94 80 e2 94 80 e2 94 80 e2 94 80 e2     ................
     f8b:	94 80 e2 94 80 e2 94 80 e2 94 80 e2 94 80 e2 94     ................
     f9b:	80 e2 94 80 e2 94 80 e2 94 80 e2 94 80 e2 94 80     ................
     fab:	e2 94 98 00                                         ....

00000faf <showDangerousHelp()::__c>:
     faf:	20 e2 94 82 20 65 65 70 72 6f 6d 2d 77 69 70 65      ... eeprom-wipe
     fbf:	20 20 e2 86 92 20 57 69 70 65 20 61 6c 6c 20 69       ... Wipe all i
     fcf:	6e 74 65 72 6e 61 6c 20 45 45 50 52 4f 4d 20 64     nternal EEPROM d
     fdf:	61 74 61 20 00                                      ata .

00000fe4 <showDangerousHelp()::__c>:
     fe4:	20 e2 94 8c e2 94 80 e2 94 80 e2 94 80 e2 94 80      ...............
     ff4:	e2 94 80 e2 94 80 e2 94 80 e2 94 80 e2 94 80 e2     ................
    1004:	94 80 e2 94 80 e2 94 80 e2 94 80 e2 94 80 e2 94     ................
    1014:	80 e2 94 80 e2 94 80 e2 94 80 e2 94 80 e2 94 80     ................
    1024:	e2 94 90 00                                         ....

00001028 <showDangerousHelp()::__c>:
    1028:	0a 5b 69 5d 20 41 76 61 69 6c 61 62 6c 65 20 44     .[i] Available D
    1038:	61 6e 67 65 72 6f 75 73 20 43 6f 6d 6d 61 6e 64     angerous Command
    1048:	73 3a 00                                            s:.

0000104b <handleCommand(String)::__c>:
    104b:	27 2e 20 54 72 79 20 27 68 65 6c 70 27 20 74 6f     '. Try 'help' to
    105b:	20 73 65 65 20 61 6c 6c 20 63 6f 6d 6d 61 6e 64      see all command
    106b:	73 2e 00                                            s..

0000106e <handleCommand(String)::__c>:
    106e:	5b 58 5d 20 55 6e 6b 6e 6f 77 6e 20 63 6f 6d 6d     [X] Unknown comm
    107e:	61 6e 64 20 77 69 74 68 20 27 00                    and with '.

00001089 <handleCommand(String)::__c>:
    1089:	45 4c 45 4e 41 3e 20 48 69 2c 20 61 72 65 20 79     ELENA> Hi, are y
    1099:	6f 75 20 63 61 6c 6c 65 64 20 6d 65 3f 20 79 6f     ou called me? yo
    10a9:	75 20 63 61 6e 20 74 79 70 65 20 27 68 65 6c 70     u can type 'help
    10b9:	27 20 74 6f 20 73 65 65 20 6d 79 20 63 6f 6d 6d     ' to see my comm
    10c9:	61 6e 64 73 21 00 00                                ands!..

000010d0 <__ctors_start>:
__ctors_start():
    10d0:	b4 0d       	add	r27, r4

000010d2 <__ctors_end>:
__dtors_start():
    10d2:	3c 15       	cp	r19, r12

000010d4 <__dtors_end>:
__dtors_end():
    10d4:	11 24       	eor	r1, r1
    10d6:	1f be       	out	0x3f, r1	; 63
    10d8:	cf e5       	ldi	r28, 0x5F	; 95
    10da:	d8 e0       	ldi	r29, 0x08	; 8
    10dc:	de bf       	out	0x3e, r29	; 62
    10de:	cd bf       	out	0x3d, r28	; 61

000010e0 <__do_copy_data>:
__do_copy_data():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2409
    10e0:	12 e0       	ldi	r17, 0x02	; 2
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2410
    10e2:	a0 e6       	ldi	r26, 0x60	; 96
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2411
    10e4:	b0 e0       	ldi	r27, 0x00	; 0
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2412
    10e6:	e6 e6       	ldi	r30, 0x66	; 102
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2413
    10e8:	f6 e4       	ldi	r31, 0x46	; 70
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2414
    10ea:	02 c0       	rjmp	.+4      	; 0x10f0 <__do_copy_data+0x10>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2417
    10ec:	05 90       	lpm	r0, Z+
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2422
    10ee:	0d 92       	st	X+, r0
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2424
    10f0:	a2 31       	cpi	r26, 0x12	; 18
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2425
    10f2:	b1 07       	cpc	r27, r17
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2426
    10f4:	d9 f7       	brne	.-10     	; 0x10ec <__do_copy_data+0xc>

000010f6 <__do_clear_bss>:
__do_clear_bss():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2441
    10f6:	22 e0       	ldi	r18, 0x02	; 2
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2442
    10f8:	a2 e1       	ldi	r26, 0x12	; 18
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2443
    10fa:	b2 e0       	ldi	r27, 0x02	; 2
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2444
    10fc:	01 c0       	rjmp	.+2      	; 0x1100 <.do_clear_bss_start>

000010fe <.do_clear_bss_loop>:
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2446
    10fe:	1d 92       	st	X+, r1

00001100 <.do_clear_bss_start>:
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2448
    1100:	a7 3e       	cpi	r26, 0xE7	; 231
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2449
    1102:	b2 07       	cpc	r27, r18
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2450
    1104:	e1 f7       	brne	.-8      	; 0x10fe <.do_clear_bss_loop>

00001106 <__do_global_ctors>:
__do_global_ctors():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2466
    1106:	18 e0       	ldi	r17, 0x08	; 8
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2467
    1108:	c9 e6       	ldi	r28, 0x69	; 105
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2468
    110a:	d8 e0       	ldi	r29, 0x08	; 8
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2472
    110c:	04 c0       	rjmp	.+8      	; 0x1116 <__do_global_ctors+0x10>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2474
    110e:	21 97       	sbiw	r28, 0x01	; 1
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2480
    1110:	fe 01       	movw	r30, r28
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2481
    1112:	0e 94 01 1f 	call	0x3e02	; 0x3e02 <__tablejump2__>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2483
    1116:	c8 36       	cpi	r28, 0x68	; 104
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2484
    1118:	d1 07       	cpc	r29, r17
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2489
    111a:	c9 f7       	brne	.-14     	; 0x110e <__do_global_ctors+0x8>
    111c:	0e 94 ed 0d 	call	0x1bda	; 0x1bda <main>
    1120:	0c 94 26 23 	jmp	0x464c	; 0x464c <__do_global_dtors>

00001124 <__bad_interrupt>:
__vector_1():
    1124:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00001128 <printf_putchar(char, __file*)>:
printf_putchar():
C:\Users\LENOVO\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/Print.cpp:204
}

// Custom implementation of printf borrowed from the teensy core files
static int16_t printf_putchar(char c, FILE *fp)
{
  ((class Print *)(fdev_get_udata(fp)))->write((uint8_t)c);
    1128:	fb 01       	movw	r30, r22
    112a:	a4 85       	ldd	r26, Z+12	; 0x0c
    112c:	b5 85       	ldd	r27, Z+13	; 0x0d
    112e:	ed 91       	ld	r30, X+
    1130:	fc 91       	ld	r31, X
    1132:	11 97       	sbiw	r26, 0x01	; 1
    1134:	01 90       	ld	r0, Z+
    1136:	f0 81       	ld	r31, Z
    1138:	e0 2d       	mov	r30, r0
    113a:	68 2f       	mov	r22, r24
    113c:	cd 01       	movw	r24, r26
    113e:	09 95       	icall
C:\Users\LENOVO\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/Print.cpp:206
  return 0;
}
    1140:	90 e0       	ldi	r25, 0x00	; 0
    1142:	80 e0       	ldi	r24, 0x00	; 0
    1144:	08 95       	ret

00001146 <micros>:
micros():
C:\Users\LENOVO\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/wiring.c:237
  unsigned char f; // temporary storage for millis fraction counter
  unsigned char q = 0; // record whether an overflow is flagged
#endif
  // t will be the number where the timer0 counter stopped
  uint8_t t;
  uint8_t oldSREG = SREG;
    1146:	3f b7       	in	r19, 0x3f	; 63
C:\Users\LENOVO\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/wiring.c:240

  // Stop all interrupts
  cli();
    1148:	f8 94       	cli
C:\Users\LENOVO\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/wiring.c:247
#ifdef CORRECT_EXACT_MICROS
  // combine exact millisec and 8usec counters
  m = timer0_millis;
  f = timer0_fract;
#else
  m = timer0_overflow_count;
    114a:	80 91 3a 02 	lds	r24, 0x023A	; 0x80023a <timer0_overflow_count>
    114e:	90 91 3b 02 	lds	r25, 0x023B	; 0x80023b <timer0_overflow_count+0x1>
    1152:	a0 91 3c 02 	lds	r26, 0x023C	; 0x80023c <timer0_overflow_count+0x2>
    1156:	b0 91 3d 02 	lds	r27, 0x023D	; 0x80023d <timer0_overflow_count+0x3>
C:\Users\LENOVO\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/wiring.c:252
#endif

  // TCNT0 : The Timer Counter Register
#if defined(TCNT0)
  t = TCNT0;
    115a:	22 b7       	in	r18, 0x32	; 50
C:\Users\LENOVO\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/wiring.c:268
    m++;
#else
    q = 1;
#endif
#else
  if ((TIFR & _BV(TOV0)) && (t < 255))
    115c:	08 b6       	in	r0, 0x38	; 56
    115e:	00 fe       	sbrs	r0, 0
    1160:	05 c0       	rjmp	.+10     	; 0x116c <micros+0x26>
    1162:	2f 3f       	cpi	r18, 0xFF	; 255
    1164:	19 f0       	breq	.+6      	; 0x116c <micros+0x26>
C:\Users\LENOVO\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/wiring.c:270
#ifndef CORRECT_EXACT_MICROS
    m++;
    1166:	01 96       	adiw	r24, 0x01	; 1
    1168:	a1 1d       	adc	r26, r1
    116a:	b1 1d       	adc	r27, r1
C:\Users\LENOVO\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/wiring.c:276
#else
    q = 1;
#endif
#endif
  // Restore SREG
  SREG = oldSREG;
    116c:	3f bf       	out	0x3f, r19	; 63
C:\Users\LENOVO\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/wiring.c:292
      ((t * MICROSECONDS_PER_TIMER0_OVERFLOW) >> 8);
  return q ? m + MICROSECONDS_PER_TIMER0_OVERFLOW : m;
#elif 1
  /* All power-of-two Megahertz frequencies enter here, as well as 12.8 MHz.
     We only end up here if right shift before multiplication is exact. */
  return ((m << 8) + t) * (MICROSECONDS_PER_TIMER0_OVERFLOW >> 8);
    116e:	ba 2f       	mov	r27, r26
    1170:	a9 2f       	mov	r26, r25
    1172:	98 2f       	mov	r25, r24
    1174:	88 27       	eor	r24, r24
    1176:	bc 01       	movw	r22, r24
    1178:	cd 01       	movw	r24, r26
    117a:	62 0f       	add	r22, r18
    117c:	71 1d       	adc	r23, r1
    117e:	81 1d       	adc	r24, r1
    1180:	91 1d       	adc	r25, r1
    1182:	42 e0       	ldi	r20, 0x02	; 2
    1184:	66 0f       	add	r22, r22
    1186:	77 1f       	adc	r23, r23
    1188:	88 1f       	adc	r24, r24
    118a:	99 1f       	adc	r25, r25
    118c:	4a 95       	dec	r20
    118e:	d1 f7       	brne	.-12     	; 0x1184 <micros+0x3e>
C:\Users\LENOVO\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/wiring.c:393
  // m & t are multiplied by 4 (since it was already multiplied by 256)
  // t is multiplied by 4
  return ((m << 8) + t) * (64 / clockCyclesPerMicrosecond());
#endif
#endif // 0
}
    1190:	08 95       	ret

00001192 <delay>:
delay():
C:\Users\LENOVO\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/wiring.c:396

void delay(unsigned long ms)
{
    1192:	8f 92       	push	r8
    1194:	9f 92       	push	r9
    1196:	af 92       	push	r10
    1198:	bf 92       	push	r11
    119a:	cf 92       	push	r12
    119c:	df 92       	push	r13
    119e:	ef 92       	push	r14
    11a0:	ff 92       	push	r15
    11a2:	4b 01       	movw	r8, r22
    11a4:	5c 01       	movw	r10, r24
C:\Users\LENOVO\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/wiring.c:397
  unsigned long start = micros();
    11a6:	0e 94 a3 08 	call	0x1146	; 0x1146 <micros>
    11aa:	6b 01       	movw	r12, r22
    11ac:	7c 01       	movw	r14, r24
C:\Users\LENOVO\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/wiring.c:401

  while (ms > 0UL) {
    yield();
    while (ms > 0UL && (micros() - start) >= 1000UL) {
    11ae:	0e 94 a3 08 	call	0x1146	; 0x1146 <micros>
    11b2:	6c 19       	sub	r22, r12
    11b4:	7d 09       	sbc	r23, r13
    11b6:	8e 09       	sbc	r24, r14
    11b8:	9f 09       	sbc	r25, r15
    11ba:	68 3e       	cpi	r22, 0xE8	; 232
    11bc:	73 40       	sbci	r23, 0x03	; 3
    11be:	81 05       	cpc	r24, r1
    11c0:	91 05       	cpc	r25, r1
    11c2:	a8 f3       	brcs	.-22     	; 0x11ae <delay+0x1c>
C:\Users\LENOVO\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/wiring.c:402
      ms--;
    11c4:	21 e0       	ldi	r18, 0x01	; 1
    11c6:	82 1a       	sub	r8, r18
    11c8:	91 08       	sbc	r9, r1
    11ca:	a1 08       	sbc	r10, r1
    11cc:	b1 08       	sbc	r11, r1
C:\Users\LENOVO\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/wiring.c:403
      start += 1000UL;
    11ce:	88 ee       	ldi	r24, 0xE8	; 232
    11d0:	c8 0e       	add	r12, r24
    11d2:	83 e0       	ldi	r24, 0x03	; 3
    11d4:	d8 1e       	adc	r13, r24
    11d6:	e1 1c       	adc	r14, r1
    11d8:	f1 1c       	adc	r15, r1
C:\Users\LENOVO\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/wiring.c:401
{
  unsigned long start = micros();

  while (ms > 0UL) {
    yield();
    while (ms > 0UL && (micros() - start) >= 1000UL) {
    11da:	81 14       	cp	r8, r1
    11dc:	91 04       	cpc	r9, r1
    11de:	a1 04       	cpc	r10, r1
    11e0:	b1 04       	cpc	r11, r1
    11e2:	29 f7       	brne	.-54     	; 0x11ae <delay+0x1c>
C:\Users\LENOVO\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/wiring.c:406
      ms--;
      start += 1000UL;
    }
  }
}
    11e4:	ff 90       	pop	r15
    11e6:	ef 90       	pop	r14
    11e8:	df 90       	pop	r13
    11ea:	cf 90       	pop	r12
    11ec:	bf 90       	pop	r11
    11ee:	af 90       	pop	r10
    11f0:	9f 90       	pop	r9
    11f2:	8f 90       	pop	r8
    11f4:	08 95       	ret

000011f6 <Print::write(unsigned char const*, unsigned int)>:
write():
C:\Users\LENOVO\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/Print.cpp:35

// Public Methods //////////////////////////////////////////////////////////////

/* default implementation: may be overridden */
size_t Print::write(const uint8_t *buffer, size_t size)
{
    11f6:	af 92       	push	r10
    11f8:	bf 92       	push	r11
    11fa:	cf 92       	push	r12
    11fc:	df 92       	push	r13
    11fe:	ef 92       	push	r14
    1200:	ff 92       	push	r15
    1202:	0f 93       	push	r16
    1204:	1f 93       	push	r17
    1206:	cf 93       	push	r28
    1208:	df 93       	push	r29
    120a:	6c 01       	movw	r12, r24
    120c:	7b 01       	movw	r14, r22
    120e:	8b 01       	movw	r16, r22
    1210:	04 0f       	add	r16, r20
    1212:	15 1f       	adc	r17, r21
    1214:	eb 01       	movw	r28, r22
    1216:	5e 01       	movw	r10, r28
    1218:	ae 18       	sub	r10, r14
    121a:	bf 08       	sbc	r11, r15
C:\Users\LENOVO\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/Print.cpp:37
  size_t n = 0;
  while (size--) {
    121c:	c0 17       	cp	r28, r16
    121e:	d1 07       	cpc	r29, r17
    1220:	59 f0       	breq	.+22     	; 0x1238 <Print::write(unsigned char const*, unsigned int)+0x42>
C:\Users\LENOVO\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/Print.cpp:38
    if (write(*buffer++)) n++;
    1222:	69 91       	ld	r22, Y+
    1224:	d6 01       	movw	r26, r12
    1226:	ed 91       	ld	r30, X+
    1228:	fc 91       	ld	r31, X
    122a:	01 90       	ld	r0, Z+
    122c:	f0 81       	ld	r31, Z
    122e:	e0 2d       	mov	r30, r0
    1230:	c6 01       	movw	r24, r12
    1232:	09 95       	icall
    1234:	89 2b       	or	r24, r25
    1236:	79 f7       	brne	.-34     	; 0x1216 <Print::write(unsigned char const*, unsigned int)+0x20>
C:\Users\LENOVO\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/Print.cpp:42
    else break;
  }
  return n;
}
    1238:	c5 01       	movw	r24, r10
    123a:	df 91       	pop	r29
    123c:	cf 91       	pop	r28
    123e:	1f 91       	pop	r17
    1240:	0f 91       	pop	r16
    1242:	ff 90       	pop	r15
    1244:	ef 90       	pop	r14
    1246:	df 90       	pop	r13
    1248:	cf 90       	pop	r12
    124a:	bf 90       	pop	r11
    124c:	af 90       	pop	r10
    124e:	08 95       	ret

00001250 <Print::print(String const&) [clone .constprop.15]>:
C:\Users\LENOVO\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/Print.h:58
      if (str == NULL) return 0;
      return write((const uint8_t *)str, strlen(str));
    }
    virtual size_t write(const uint8_t *buffer, size_t size);
    size_t write(const char *buffer, size_t size) {
      return write((const uint8_t *)buffer, size);
    1250:	fc 01       	movw	r30, r24
    1252:	44 81       	ldd	r20, Z+4	; 0x04
    1254:	55 81       	ldd	r21, Z+5	; 0x05
    1256:	60 81       	ld	r22, Z
    1258:	71 81       	ldd	r23, Z+1	; 0x01
    125a:	8e e3       	ldi	r24, 0x3E	; 62
    125c:	92 e0       	ldi	r25, 0x02	; 2
    125e:	0c 94 fb 08 	jmp	0x11f6	; 0x11f6 <Print::write(unsigned char const*, unsigned int)>

00001262 <HardwareSerial::availableForWrite()>:
availableForWrite():
C:\Users\LENOVO\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/HardwareSerial.cpp:195
{
  tx_buffer_index_t head;
  tx_buffer_index_t tail;

  TX_BUFFER_ATOMIC {
    head = _tx_buffer_head;
    1262:	fc 01       	movw	r30, r24
    1264:	53 8d       	ldd	r21, Z+27	; 0x1b
C:\Users\LENOVO\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/HardwareSerial.cpp:196
    tail = _tx_buffer_tail;
    1266:	44 8d       	ldd	r20, Z+28	; 0x1c
    1268:	25 2f       	mov	r18, r21
    126a:	30 e0       	ldi	r19, 0x00	; 0
    126c:	84 2f       	mov	r24, r20
    126e:	90 e0       	ldi	r25, 0x00	; 0
C:\Users\LENOVO\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/HardwareSerial.cpp:198
  }
  if (head >= tail) return SERIAL_TX_BUFFER_SIZE - 1 - head + tail;
    1270:	82 1b       	sub	r24, r18
    1272:	93 0b       	sbc	r25, r19
    1274:	54 17       	cp	r21, r20
    1276:	10 f0       	brcs	.+4      	; 0x127c <HardwareSerial::availableForWrite()+0x1a>
    1278:	cf 96       	adiw	r24, 0x3f	; 63
    127a:	08 95       	ret
C:\Users\LENOVO\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/HardwareSerial.cpp:199
  return tail - head - 1;
    127c:	01 97       	sbiw	r24, 0x01	; 1
C:\Users\LENOVO\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/HardwareSerial.cpp:200
}
    127e:	08 95       	ret

00001280 <HardwareSerial::read()>:
read():
C:\Users\LENOVO\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/HardwareSerial.cpp:178
    return _rx_buffer[_rx_buffer_tail];
  }
}

int HardwareSerial::read(void)
{
    1280:	fc 01       	movw	r30, r24
C:\Users\LENOVO\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/HardwareSerial.cpp:180
  // if the head isn't ahead of the tail, we don't have any characters
  if (_rx_buffer_head == _rx_buffer_tail) {
    1282:	91 8d       	ldd	r25, Z+25	; 0x19
    1284:	82 8d       	ldd	r24, Z+26	; 0x1a
    1286:	98 17       	cp	r25, r24
    1288:	61 f0       	breq	.+24     	; 0x12a2 <HardwareSerial::read()+0x22>
C:\Users\LENOVO\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/HardwareSerial.cpp:183
    return -1;
  } else {
    unsigned char c = _rx_buffer[_rx_buffer_tail];
    128a:	a2 8d       	ldd	r26, Z+26	; 0x1a
    128c:	ae 0f       	add	r26, r30
    128e:	bf 2f       	mov	r27, r31
    1290:	b1 1d       	adc	r27, r1
    1292:	5d 96       	adiw	r26, 0x1d	; 29
    1294:	8c 91       	ld	r24, X
C:\Users\LENOVO\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/HardwareSerial.cpp:184
    _rx_buffer_tail = (rx_buffer_index_t)(_rx_buffer_tail + 1) % SERIAL_RX_BUFFER_SIZE;
    1296:	92 8d       	ldd	r25, Z+26	; 0x1a
    1298:	9f 5f       	subi	r25, 0xFF	; 255
    129a:	9f 73       	andi	r25, 0x3F	; 63
    129c:	92 8f       	std	Z+26, r25	; 0x1a
C:\Users\LENOVO\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/HardwareSerial.cpp:185
    return c;
    129e:	90 e0       	ldi	r25, 0x00	; 0
    12a0:	08 95       	ret
C:\Users\LENOVO\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/HardwareSerial.cpp:181

int HardwareSerial::read(void)
{
  // if the head isn't ahead of the tail, we don't have any characters
  if (_rx_buffer_head == _rx_buffer_tail) {
    return -1;
    12a2:	8f ef       	ldi	r24, 0xFF	; 255
    12a4:	9f ef       	ldi	r25, 0xFF	; 255
C:\Users\LENOVO\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/HardwareSerial.cpp:187
  } else {
    unsigned char c = _rx_buffer[_rx_buffer_tail];
    _rx_buffer_tail = (rx_buffer_index_t)(_rx_buffer_tail + 1) % SERIAL_RX_BUFFER_SIZE;
    return c;
  }
}
    12a6:	08 95       	ret

000012a8 <HardwareSerial::peek()>:
peek():
C:\Users\LENOVO\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/HardwareSerial.cpp:169
{
  return ((unsigned int)(SERIAL_RX_BUFFER_SIZE + _rx_buffer_head - _rx_buffer_tail)) % SERIAL_RX_BUFFER_SIZE;
}

int HardwareSerial::peek(void)
{
    12a8:	fc 01       	movw	r30, r24
C:\Users\LENOVO\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/HardwareSerial.cpp:170
  if (_rx_buffer_head == _rx_buffer_tail) {
    12aa:	91 8d       	ldd	r25, Z+25	; 0x19
    12ac:	82 8d       	ldd	r24, Z+26	; 0x1a
    12ae:	98 17       	cp	r25, r24
    12b0:	31 f0       	breq	.+12     	; 0x12be <HardwareSerial::peek()+0x16>
C:\Users\LENOVO\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/HardwareSerial.cpp:173
    return -1;
  } else {
    return _rx_buffer[_rx_buffer_tail];
    12b2:	82 8d       	ldd	r24, Z+26	; 0x1a
    12b4:	e8 0f       	add	r30, r24
    12b6:	f1 1d       	adc	r31, r1
    12b8:	85 8d       	ldd	r24, Z+29	; 0x1d
    12ba:	90 e0       	ldi	r25, 0x00	; 0
    12bc:	08 95       	ret
C:\Users\LENOVO\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/HardwareSerial.cpp:171
}

int HardwareSerial::peek(void)
{
  if (_rx_buffer_head == _rx_buffer_tail) {
    return -1;
    12be:	8f ef       	ldi	r24, 0xFF	; 255
    12c0:	9f ef       	ldi	r25, 0xFF	; 255
C:\Users\LENOVO\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/HardwareSerial.cpp:175
  } else {
    return _rx_buffer[_rx_buffer_tail];
  }
}
    12c2:	08 95       	ret

000012c4 <HardwareSerial::available()>:
available():
C:\Users\LENOVO\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/HardwareSerial.cpp:164
  // clear any received data
  _rx_buffer_head = _rx_buffer_tail;
}

int HardwareSerial::available(void)
{
    12c4:	fc 01       	movw	r30, r24
C:\Users\LENOVO\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/HardwareSerial.cpp:165
  return ((unsigned int)(SERIAL_RX_BUFFER_SIZE + _rx_buffer_head - _rx_buffer_tail)) % SERIAL_RX_BUFFER_SIZE;
    12c6:	91 8d       	ldd	r25, Z+25	; 0x19
    12c8:	22 8d       	ldd	r18, Z+26	; 0x1a
    12ca:	89 2f       	mov	r24, r25
    12cc:	90 e0       	ldi	r25, 0x00	; 0
    12ce:	80 5c       	subi	r24, 0xC0	; 192
    12d0:	9f 4f       	sbci	r25, 0xFF	; 255
    12d2:	82 1b       	sub	r24, r18
    12d4:	91 09       	sbc	r25, r1
C:\Users\LENOVO\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/HardwareSerial.cpp:166
}
    12d6:	8f 73       	andi	r24, 0x3F	; 63
    12d8:	99 27       	eor	r25, r25
    12da:	08 95       	ret

000012dc <Serial0_available()>:
Serial0_available():
C:\Users\LENOVO\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/HardwareSerial0.cpp:76
#endif

// Function that can be weakly referenced by serialEventRun to prevent
// pulling in this file if it's not otherwise used.
bool Serial0_available() {
  return Serial.available();
    12dc:	8e e3       	ldi	r24, 0x3E	; 62
    12de:	92 e0       	ldi	r25, 0x02	; 2
    12e0:	0e 94 62 09 	call	0x12c4	; 0x12c4 <HardwareSerial::available()>
    12e4:	21 e0       	ldi	r18, 0x01	; 1
    12e6:	89 2b       	or	r24, r25
    12e8:	09 f4       	brne	.+2      	; 0x12ec <Serial0_available()+0x10>
    12ea:	20 e0       	ldi	r18, 0x00	; 0
C:\Users\LENOVO\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/HardwareSerial0.cpp:77
}
    12ec:	82 2f       	mov	r24, r18
    12ee:	08 95       	ret

000012f0 <serialEventRun()>:
serialEventRun():
C:\Users\LENOVO\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/HardwareSerial.cpp:67
#endif

void serialEventRun(void)
{
#if defined(HAVE_HWSERIAL0)
  if (Serial0_available && serialEvent && Serial0_available()) serialEvent();
    12f0:	80 e0       	ldi	r24, 0x00	; 0
    12f2:	90 e0       	ldi	r25, 0x00	; 0
    12f4:	89 2b       	or	r24, r25
    12f6:	29 f0       	breq	.+10     	; 0x1302 <serialEventRun()+0x12>
    12f8:	0e 94 6e 09 	call	0x12dc	; 0x12dc <Serial0_available()>
    12fc:	81 11       	cpse	r24, r1
    12fe:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>
C:\Users\LENOVO\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/HardwareSerial.cpp:78
  if (Serial2_available && serialEvent2 && Serial2_available()) serialEvent2();
#endif
#if defined(HAVE_HWSERIAL3)
  if (Serial3_available && serialEvent3 && Serial3_available()) serialEvent3();
#endif
}
    1302:	08 95       	ret

00001304 <HardwareSerial::_tx_udr_empty_irq()>:
_tx_udr_empty_irq():
C:\Users\LENOVO\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/HardwareSerial.cpp:90
#endif

// Actual interrupt handlers //////////////////////////////////////////////////////////////

void HardwareSerial::_tx_udr_empty_irq(void)
{
    1304:	fc 01       	movw	r30, r24
C:\Users\LENOVO\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/HardwareSerial.cpp:93
  // If interrupts are enabled, there must be more data in the output
  // buffer. Send the next byte
  unsigned char c = _tx_buffer[_tx_buffer_tail];
    1306:	a4 8d       	ldd	r26, Z+28	; 0x1c
    1308:	a8 0f       	add	r26, r24
    130a:	b9 2f       	mov	r27, r25
    130c:	b1 1d       	adc	r27, r1
    130e:	a3 5a       	subi	r26, 0xA3	; 163
    1310:	bf 4f       	sbci	r27, 0xFF	; 255
    1312:	2c 91       	ld	r18, X
C:\Users\LENOVO\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/HardwareSerial.cpp:94
  _tx_buffer_tail = (_tx_buffer_tail + 1) % SERIAL_TX_BUFFER_SIZE;
    1314:	84 8d       	ldd	r24, Z+28	; 0x1c
    1316:	90 e0       	ldi	r25, 0x00	; 0
    1318:	01 96       	adiw	r24, 0x01	; 1
    131a:	8f 73       	andi	r24, 0x3F	; 63
    131c:	99 27       	eor	r25, r25
    131e:	84 8f       	std	Z+28, r24	; 0x1c
C:\Users\LENOVO\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/HardwareSerial.cpp:96

  *_udr = c;
    1320:	a6 89       	ldd	r26, Z+22	; 0x16
    1322:	b7 89       	ldd	r27, Z+23	; 0x17
    1324:	2c 93       	st	X, r18
C:\Users\LENOVO\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/HardwareSerial.cpp:106
  // written to the rest.

  #ifdef MPCM0
    *_ucsra = ((*_ucsra) & ((1 << U2X0) | (1 << MPCM0))) | (1 << TXC0);
  #else
    *_ucsra = ((*_ucsra) & ((1 << U2X0) | (1 << TXC0)));
    1326:	a0 89       	ldd	r26, Z+16	; 0x10
    1328:	b1 89       	ldd	r27, Z+17	; 0x11
    132a:	8c 91       	ld	r24, X
    132c:	82 74       	andi	r24, 0x42	; 66
    132e:	8c 93       	st	X, r24
C:\Users\LENOVO\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/HardwareSerial.cpp:109
  #endif

  if (_tx_buffer_head == _tx_buffer_tail) {
    1330:	93 8d       	ldd	r25, Z+27	; 0x1b
    1332:	84 8d       	ldd	r24, Z+28	; 0x1c
    1334:	98 13       	cpse	r25, r24
    1336:	06 c0       	rjmp	.+12     	; 0x1344 <HardwareSerial::_tx_udr_empty_irq()+0x40>
C:\Users\LENOVO\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/HardwareSerial.cpp:111
    // Buffer empty, so disable interrupts
    *_ucsrb &= ~_BV(UDRIE0);
    1338:	02 88       	ldd	r0, Z+18	; 0x12
    133a:	f3 89       	ldd	r31, Z+19	; 0x13
    133c:	e0 2d       	mov	r30, r0
    133e:	80 81       	ld	r24, Z
    1340:	8f 7d       	andi	r24, 0xDF	; 223
    1342:	80 83       	st	Z, r24
C:\Users\LENOVO\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/HardwareSerial.cpp:113
  }
}
    1344:	08 95       	ret

00001346 <HardwareSerial::write(unsigned char)>:
write():
C:\Users\LENOVO\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/HardwareSerial.cpp:223
  // If we get here, nothing is queued anymore (DRIE is disabled) and
  // the hardware finished tranmission (TXC is set).
}

size_t HardwareSerial::write(uint8_t c)
{
    1346:	ef 92       	push	r14
    1348:	ff 92       	push	r15
    134a:	0f 93       	push	r16
    134c:	1f 93       	push	r17
    134e:	cf 93       	push	r28
    1350:	df 93       	push	r29
    1352:	ec 01       	movw	r28, r24
C:\Users\LENOVO\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/HardwareSerial.cpp:224
  _written = true;
    1354:	81 e0       	ldi	r24, 0x01	; 1
    1356:	88 8f       	std	Y+24, r24	; 0x18
C:\Users\LENOVO\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/HardwareSerial.cpp:229
  // If the buffer and the data register is empty, just write the byte
  // to the data register and be done. This shortcut helps
  // significantly improve the effective datarate at high (>
  // 500kbit/s) bitrates, where interrupt overhead becomes a slowdown.
  if (_tx_buffer_head == _tx_buffer_tail && bit_is_set(*_ucsra, UDRE0)) {
    1358:	9b 8d       	ldd	r25, Y+27	; 0x1b
    135a:	8c 8d       	ldd	r24, Y+28	; 0x1c
    135c:	98 13       	cpse	r25, r24
    135e:	19 c0       	rjmp	.+50     	; 0x1392 <HardwareSerial::write(unsigned char)+0x4c>
    1360:	e8 89       	ldd	r30, Y+16	; 0x10
    1362:	f9 89       	ldd	r31, Y+17	; 0x11
    1364:	80 81       	ld	r24, Z
    1366:	85 ff       	sbrs	r24, 5
    1368:	14 c0       	rjmp	.+40     	; 0x1392 <HardwareSerial::write(unsigned char)+0x4c>
C:\Users\LENOVO\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/HardwareSerial.cpp:238
    // So writing UDR must happen first.
    // Writing UDR and clearing TC must be done atomically, otherwise
    // interrupts might delay the TXC clear so the byte written to UDR
    // is transmitted (setting TXC) before clearing TXC. Then TXC will
    // be cleared when no bytes are left, causing flush() to hang
    ATOMIC_BLOCK(ATOMIC_RESTORESTATE) {
    136a:	9f b7       	in	r25, 0x3f	; 63
__iCliRetVal():
c:\users\lenovo\appdata\local\arduino15\packages\arduino\tools\avr-gcc\7.3.0-atmel3.6.1-arduino7\avr\include\util/atomic.h:50
    return 1;
}

static __inline__ uint8_t __iCliRetVal(void)
{
    cli();
    136c:	f8 94       	cli
write():
C:\Users\LENOVO\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/HardwareSerial.cpp:239
      *_udr = c;
    136e:	ee 89       	ldd	r30, Y+22	; 0x16
    1370:	ff 89       	ldd	r31, Y+23	; 0x17
    1372:	60 83       	st	Z, r22
C:\Users\LENOVO\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/HardwareSerial.cpp:243
      #ifdef MPCM0
        *_ucsra = ((*_ucsra) & ((1 << U2X0) | (1 << MPCM0))) | (1 << TXC0);
      #else
        *_ucsra = ((*_ucsra) & ((1 << U2X0) | (1 << TXC0)));
    1374:	e8 89       	ldd	r30, Y+16	; 0x10
    1376:	f9 89       	ldd	r31, Y+17	; 0x11
    1378:	80 81       	ld	r24, Z
    137a:	82 74       	andi	r24, 0x42	; 66
C:\Users\LENOVO\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/HardwareSerial.cpp:271
  // make atomic to prevent execution of ISR between setting the
  // head pointer and setting the interrupt flag resulting in buffer
  // retransmission
  ATOMIC_BLOCK(ATOMIC_RESTORESTATE) {
    _tx_buffer_head = i;
    *_ucsrb |= _BV(UDRIE0);
    137c:	80 83       	st	Z, r24
__iRestore():
c:\users\lenovo\appdata\local\arduino15\packages\arduino\tools\avr-gcc\7.3.0-atmel3.6.1-arduino7\avr\include\util/atomic.h:70
    (void)__s;
}

static __inline__ void __iRestore(const  uint8_t *__s)
{
    SREG = *__s;
    137e:	9f bf       	out	0x3f, r25	; 63
write():
C:\Users\LENOVO\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/HardwareSerial.cpp:275
  }
  
  return 1;
}
    1380:	81 e0       	ldi	r24, 0x01	; 1
    1382:	90 e0       	ldi	r25, 0x00	; 0
    1384:	df 91       	pop	r29
    1386:	cf 91       	pop	r28
    1388:	1f 91       	pop	r17
    138a:	0f 91       	pop	r16
    138c:	ff 90       	pop	r15
    138e:	ef 90       	pop	r14
    1390:	08 95       	ret
    1392:	f6 2e       	mov	r15, r22
C:\Users\LENOVO\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/HardwareSerial.cpp:248
        *_ucsra = ((*_ucsra) & ((1 << U2X0) | (1 << TXC0)));
      #endif
    }
    return 1;
  }
  tx_buffer_index_t i = (_tx_buffer_head + 1) % SERIAL_TX_BUFFER_SIZE;
    1394:	0b 8d       	ldd	r16, Y+27	; 0x1b
    1396:	10 e0       	ldi	r17, 0x00	; 0
    1398:	0f 5f       	subi	r16, 0xFF	; 255
    139a:	1f 4f       	sbci	r17, 0xFF	; 255
    139c:	0f 73       	andi	r16, 0x3F	; 63
    139e:	11 27       	eor	r17, r17
    13a0:	e0 2e       	mov	r14, r16
C:\Users\LENOVO\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/HardwareSerial.cpp:252

  // If the output buffer is full, there's nothing for it other than to 
  // wait for the interrupt handler to empty it a bit
  while (i == _tx_buffer_tail) {
    13a2:	8c 8d       	ldd	r24, Y+28	; 0x1c
    13a4:	8e 11       	cpse	r24, r14
    13a6:	0c c0       	rjmp	.+24     	; 0x13c0 <HardwareSerial::write(unsigned char)+0x7a>
C:\Users\LENOVO\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/HardwareSerial.cpp:253
    if (bit_is_clear(SREG, SREG_I)) {
    13a8:	0f b6       	in	r0, 0x3f	; 63
    13aa:	07 fc       	sbrc	r0, 7
    13ac:	fa cf       	rjmp	.-12     	; 0x13a2 <HardwareSerial::write(unsigned char)+0x5c>
C:\Users\LENOVO\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/HardwareSerial.cpp:258
      // Interrupts are disabled, so we'll have to poll the data
      // register empty flag ourselves. If it is set, pretend an
      // interrupt has happened and call the handler to free up
      // space for us.
      if(bit_is_set(*_ucsra, UDRE0))
    13ae:	e8 89       	ldd	r30, Y+16	; 0x10
    13b0:	f9 89       	ldd	r31, Y+17	; 0x11
    13b2:	80 81       	ld	r24, Z
    13b4:	85 ff       	sbrs	r24, 5
    13b6:	f5 cf       	rjmp	.-22     	; 0x13a2 <HardwareSerial::write(unsigned char)+0x5c>
C:\Users\LENOVO\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/HardwareSerial.cpp:259
        _tx_udr_empty_irq();
    13b8:	ce 01       	movw	r24, r28
    13ba:	0e 94 82 09 	call	0x1304	; 0x1304 <HardwareSerial::_tx_udr_empty_irq()>
    13be:	f1 cf       	rjmp	.-30     	; 0x13a2 <HardwareSerial::write(unsigned char)+0x5c>
C:\Users\LENOVO\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/HardwareSerial.cpp:265
    } else {
      // nop, the interrupt handler will free up space for us
    }
  }

  _tx_buffer[_tx_buffer_head] = c;
    13c0:	eb 8d       	ldd	r30, Y+27	; 0x1b
    13c2:	ec 0f       	add	r30, r28
    13c4:	fd 2f       	mov	r31, r29
    13c6:	f1 1d       	adc	r31, r1
    13c8:	e3 5a       	subi	r30, 0xA3	; 163
    13ca:	ff 4f       	sbci	r31, 0xFF	; 255
    13cc:	f0 82       	st	Z, r15
C:\Users\LENOVO\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/HardwareSerial.cpp:269
  // make atomic to prevent execution of ISR between setting the
  // head pointer and setting the interrupt flag resulting in buffer
  // retransmission
  ATOMIC_BLOCK(ATOMIC_RESTORESTATE) {
    13ce:	9f b7       	in	r25, 0x3f	; 63
__iCliRetVal():
c:\users\lenovo\appdata\local\arduino15\packages\arduino\tools\avr-gcc\7.3.0-atmel3.6.1-arduino7\avr\include\util/atomic.h:50
    return 1;
}

static __inline__ uint8_t __iCliRetVal(void)
{
    cli();
    13d0:	f8 94       	cli
write():
C:\Users\LENOVO\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/HardwareSerial.cpp:270
    _tx_buffer_head = i;
    13d2:	0b 8f       	std	Y+27, r16	; 0x1b
C:\Users\LENOVO\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/HardwareSerial.cpp:271
    *_ucsrb |= _BV(UDRIE0);
    13d4:	ea 89       	ldd	r30, Y+18	; 0x12
    13d6:	fb 89       	ldd	r31, Y+19	; 0x13
    13d8:	80 81       	ld	r24, Z
    13da:	80 62       	ori	r24, 0x20	; 32
    13dc:	cf cf       	rjmp	.-98     	; 0x137c <HardwareSerial::write(unsigned char)+0x36>

000013de <Print::print(__FlashStringHelper const*) [clone .constprop.26]>:
print():
C:\Users\LENOVO\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/Print.cpp:44

size_t Print::print(const __FlashStringHelper *ifsh)
    13de:	0f 93       	push	r16
    13e0:	1f 93       	push	r17
    13e2:	cf 93       	push	r28
    13e4:	df 93       	push	r29
    13e6:	8c 01       	movw	r16, r24
C:\Users\LENOVO\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/Print.cpp:47
{
  PGM_P p = reinterpret_cast<PGM_P>(ifsh);
  size_t n = 0;
    13e8:	d0 e0       	ldi	r29, 0x00	; 0
    13ea:	c0 e0       	ldi	r28, 0x00	; 0
C:\Users\LENOVO\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/Print.cpp:49
  while (1) {
    unsigned char c = pgm_read_byte(p++);
    13ec:	f8 01       	movw	r30, r16
    13ee:	ec 0f       	add	r30, r28
    13f0:	fd 1f       	adc	r31, r29
    13f2:	64 91       	lpm	r22, Z
C:\Users\LENOVO\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/Print.cpp:50
    if (c == 0) break;
    13f4:	66 23       	and	r22, r22
    13f6:	41 f0       	breq	.+16     	; 0x1408 <Print::print(__FlashStringHelper const*) [clone .constprop.26]+0x2a>
C:\Users\LENOVO\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/Print.cpp:51
    if (write(c)) n++;
    13f8:	8e e3       	ldi	r24, 0x3E	; 62
    13fa:	92 e0       	ldi	r25, 0x02	; 2
    13fc:	0e 94 a3 09 	call	0x1346	; 0x1346 <HardwareSerial::write(unsigned char)>
    1400:	89 2b       	or	r24, r25
    1402:	11 f0       	breq	.+4      	; 0x1408 <Print::print(__FlashStringHelper const*) [clone .constprop.26]+0x2a>
    1404:	21 96       	adiw	r28, 0x01	; 1
    1406:	f2 cf       	rjmp	.-28     	; 0x13ec <Print::print(__FlashStringHelper const*) [clone .constprop.26]+0xe>
C:\Users\LENOVO\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/Print.cpp:55
    else break;
  }
  return n;
}
    1408:	ce 01       	movw	r24, r28
    140a:	df 91       	pop	r29
    140c:	cf 91       	pop	r28
    140e:	1f 91       	pop	r17
    1410:	0f 91       	pop	r16
    1412:	08 95       	ret

00001414 <Print::print(char) [clone .constprop.18]>:
C:\Users\LENOVO\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/Print.cpp:69
  return write(str);
}

size_t Print::print(char c)
{
  return write(c);
    1414:	68 2f       	mov	r22, r24
    1416:	8e e3       	ldi	r24, 0x3E	; 62
    1418:	92 e0       	ldi	r25, 0x02	; 2
    141a:	0c 94 a3 09 	jmp	0x1346	; 0x1346 <HardwareSerial::write(unsigned char)>

0000141e <HardwareSerial::flush()>:
flush():
C:\Users\LENOVO\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/HardwareSerial.cpp:203
  if (head >= tail) return SERIAL_TX_BUFFER_SIZE - 1 - head + tail;
  return tail - head - 1;
}

void HardwareSerial::flush()
{
    141e:	cf 93       	push	r28
    1420:	df 93       	push	r29
    1422:	ec 01       	movw	r28, r24
C:\Users\LENOVO\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/HardwareSerial.cpp:207
  // If we have never written a byte, no need to flush. This special
  // case is needed since there is no way to force the TXC (transmit
  // complete) bit to 1 during initialization
  if (!_written)
    1424:	88 8d       	ldd	r24, Y+24	; 0x18
    1426:	88 23       	and	r24, r24
    1428:	b9 f0       	breq	.+46     	; 0x1458 <HardwareSerial::flush()+0x3a>
C:\Users\LENOVO\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/HardwareSerial.cpp:210
    return;

  while (bit_is_set(*_ucsrb, UDRIE0) || bit_is_clear(*_ucsra, TXC0)) {
    142a:	aa 89       	ldd	r26, Y+18	; 0x12
    142c:	bb 89       	ldd	r27, Y+19	; 0x13
    142e:	e8 89       	ldd	r30, Y+16	; 0x10
    1430:	f9 89       	ldd	r31, Y+17	; 0x11
    1432:	8c 91       	ld	r24, X
    1434:	85 fd       	sbrc	r24, 5
    1436:	03 c0       	rjmp	.+6      	; 0x143e <HardwareSerial::flush()+0x20>
    1438:	80 81       	ld	r24, Z
    143a:	86 fd       	sbrc	r24, 6
    143c:	0d c0       	rjmp	.+26     	; 0x1458 <HardwareSerial::flush()+0x3a>
C:\Users\LENOVO\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/HardwareSerial.cpp:211
    if (bit_is_clear(SREG, SREG_I) && bit_is_set(*_ucsrb, UDRIE0))
    143e:	0f b6       	in	r0, 0x3f	; 63
    1440:	07 fc       	sbrc	r0, 7
    1442:	f7 cf       	rjmp	.-18     	; 0x1432 <HardwareSerial::flush()+0x14>
    1444:	8c 91       	ld	r24, X
    1446:	85 ff       	sbrs	r24, 5
    1448:	f2 cf       	rjmp	.-28     	; 0x142e <HardwareSerial::flush()+0x10>
C:\Users\LENOVO\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/HardwareSerial.cpp:215
      // Interrupts are globally disabled, but the DR empty
      // interrupt should be enabled, so poll the DR empty flag to
      // prevent deadlock
      if (bit_is_set(*_ucsra, UDRE0))
    144a:	80 81       	ld	r24, Z
    144c:	85 ff       	sbrs	r24, 5
    144e:	ed cf       	rjmp	.-38     	; 0x142a <HardwareSerial::flush()+0xc>
C:\Users\LENOVO\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/HardwareSerial.cpp:216
        _tx_udr_empty_irq();
    1450:	ce 01       	movw	r24, r28
    1452:	0e 94 82 09 	call	0x1304	; 0x1304 <HardwareSerial::_tx_udr_empty_irq()>
    1456:	e9 cf       	rjmp	.-46     	; 0x142a <HardwareSerial::flush()+0xc>
C:\Users\LENOVO\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/HardwareSerial.cpp:220
  }
  // If we get here, nothing is queued anymore (DRIE is disabled) and
  // the hardware finished tranmission (TXC is set).
}
    1458:	df 91       	pop	r29
    145a:	cf 91       	pop	r28
    145c:	08 95       	ret

0000145e <Print::write(char const*) [clone .part.2] [clone .constprop.30]>:
_ZN5Print5writeEPKc.part.2():
C:\Users\LENOVO\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/Print.h:54
    void clearWriteError() { setWriteError(0); }

    virtual size_t write(uint8_t) = 0;
    size_t write(const char *str) {
      if (str == NULL) return 0;
      return write((const uint8_t *)str, strlen(str));
    145e:	fc 01       	movw	r30, r24
    1460:	01 90       	ld	r0, Z+
    1462:	00 20       	and	r0, r0
    1464:	e9 f7       	brne	.-6      	; 0x1460 <Print::write(char const*) [clone .part.2] [clone .constprop.30]+0x2>
    1466:	31 97       	sbiw	r30, 0x01	; 1
    1468:	af 01       	movw	r20, r30
    146a:	48 1b       	sub	r20, r24
    146c:	59 0b       	sbc	r21, r25
    146e:	bc 01       	movw	r22, r24
    1470:	8e e3       	ldi	r24, 0x3E	; 62
    1472:	92 e0       	ldi	r25, 0x02	; 2
    1474:	0c 94 fb 08 	jmp	0x11f6	; 0x11f6 <Print::write(unsigned char const*, unsigned int)>

00001478 <Print::printNumber(unsigned long, unsigned char) [clone .constprop.13]>:
printNumber():
C:\Users\LENOVO\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/Print.cpp:232
  return vfprintf_P(&f, (const char *)format, ap);
}

// Private Methods /////////////////////////////////////////////////////////////

size_t Print::printNumber(unsigned long n, uint8_t base)
    1478:	8f 92       	push	r8
    147a:	9f 92       	push	r9
    147c:	af 92       	push	r10
    147e:	bf 92       	push	r11
    1480:	0f 93       	push	r16
    1482:	1f 93       	push	r17
    1484:	cf 93       	push	r28
    1486:	df 93       	push	r29
    1488:	cd b7       	in	r28, 0x3d	; 61
    148a:	de b7       	in	r29, 0x3e	; 62
    148c:	a1 97       	sbiw	r28, 0x21	; 33
    148e:	0f b6       	in	r0, 0x3f	; 63
    1490:	f8 94       	cli
    1492:	de bf       	out	0x3e, r29	; 62
    1494:	0f be       	out	0x3f, r0	; 63
    1496:	cd bf       	out	0x3d, r28	; 61
C:\Users\LENOVO\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/Print.cpp:237
{
  char buf[8 * sizeof(long) + 1]; // Assumes 8-bit chars plus zero byte.
  char *str = &buf[sizeof(buf) - 1];

  *str = '\0';
    1498:	19 a2       	std	Y+33, r1	; 0x21
C:\Users\LENOVO\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/Print.cpp:240

  // prevent crash if called with base == 1
  if (base < 2) base = 10;
    149a:	42 30       	cpi	r20, 0x02	; 2
    149c:	08 f4       	brcc	.+2      	; 0x14a0 <Print::printNumber(unsigned long, unsigned char) [clone .constprop.13]+0x28>
    149e:	4a e0       	ldi	r20, 0x0A	; 10
    14a0:	8e 01       	movw	r16, r28
    14a2:	0f 5d       	subi	r16, 0xDF	; 223
    14a4:	1f 4f       	sbci	r17, 0xFF	; 255
C:\Users\LENOVO\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/Print.cpp:243

  do {
    char c = n % base;
    14a6:	84 2e       	mov	r8, r20
    14a8:	91 2c       	mov	r9, r1
    14aa:	b1 2c       	mov	r11, r1
    14ac:	a1 2c       	mov	r10, r1
    14ae:	a5 01       	movw	r20, r10
    14b0:	94 01       	movw	r18, r8
    14b2:	0e 94 df 1e 	call	0x3dbe	; 0x3dbe <__udivmodsi4>
    14b6:	e6 2f       	mov	r30, r22
C:\Users\LENOVO\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/Print.cpp:244
    n /= base;
    14b8:	b9 01       	movw	r22, r18
    14ba:	ca 01       	movw	r24, r20
C:\Users\LENOVO\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/Print.cpp:246

    *--str = c < 10 ? c + '0' : c + 'A' - 10;
    14bc:	ea 30       	cpi	r30, 0x0A	; 10
    14be:	f4 f4       	brge	.+60     	; 0x14fc <Print::printNumber(unsigned long, unsigned char) [clone .constprop.13]+0x84>
    14c0:	e0 5d       	subi	r30, 0xD0	; 208
    14c2:	d8 01       	movw	r26, r16
    14c4:	ee 93       	st	-X, r30
    14c6:	8d 01       	movw	r16, r26
C:\Users\LENOVO\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/Print.cpp:247
  } while(n);
    14c8:	23 2b       	or	r18, r19
    14ca:	24 2b       	or	r18, r20
    14cc:	25 2b       	or	r18, r21
    14ce:	79 f7       	brne	.-34     	; 0x14ae <Print::printNumber(unsigned long, unsigned char) [clone .constprop.13]+0x36>
C:\Users\LENOVO\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/Print.h:53
    int getWriteError() { return write_error; }
    void clearWriteError() { setWriteError(0); }

    virtual size_t write(uint8_t) = 0;
    size_t write(const char *str) {
      if (str == NULL) return 0;
    14d0:	90 e0       	ldi	r25, 0x00	; 0
    14d2:	80 e0       	ldi	r24, 0x00	; 0
write():
    14d4:	10 97       	sbiw	r26, 0x00	; 0
    14d6:	19 f0       	breq	.+6      	; 0x14de <Print::printNumber(unsigned long, unsigned char) [clone .constprop.13]+0x66>
    14d8:	cd 01       	movw	r24, r26
    14da:	0e 94 2f 0a 	call	0x145e	; 0x145e <Print::write(char const*) [clone .part.2] [clone .constprop.30]>
printNumber():
C:\Users\LENOVO\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/Print.cpp:250

  return write(str);
}
    14de:	a1 96       	adiw	r28, 0x21	; 33
    14e0:	0f b6       	in	r0, 0x3f	; 63
    14e2:	f8 94       	cli
    14e4:	de bf       	out	0x3e, r29	; 62
    14e6:	0f be       	out	0x3f, r0	; 63
    14e8:	cd bf       	out	0x3d, r28	; 61
    14ea:	df 91       	pop	r29
    14ec:	cf 91       	pop	r28
    14ee:	1f 91       	pop	r17
    14f0:	0f 91       	pop	r16
    14f2:	bf 90       	pop	r11
    14f4:	af 90       	pop	r10
    14f6:	9f 90       	pop	r9
    14f8:	8f 90       	pop	r8
    14fa:	08 95       	ret
C:\Users\LENOVO\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/Print.cpp:246

  do {
    char c = n % base;
    n /= base;

    *--str = c < 10 ? c + '0' : c + 'A' - 10;
    14fc:	e9 5c       	subi	r30, 0xC9	; 201
    14fe:	e1 cf       	rjmp	.-62     	; 0x14c2 <Print::printNumber(unsigned long, unsigned char) [clone .constprop.13]+0x4a>

00001500 <Print::println(char const*) [clone .constprop.27]>:
println():
C:\Users\LENOVO\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/Print.cpp:138
  size_t n = print(s);
  n += println();
  return n;
}

size_t Print::println(const char c[])
    1500:	cf 93       	push	r28
    1502:	df 93       	push	r29
write():
    1504:	0e 94 2f 0a 	call	0x145e	; 0x145e <Print::write(char const*) [clone .part.2] [clone .constprop.30]>
    1508:	ec 01       	movw	r28, r24
    150a:	88 e7       	ldi	r24, 0x78	; 120
    150c:	90 e0       	ldi	r25, 0x00	; 0
    150e:	0e 94 2f 0a 	call	0x145e	; 0x145e <Print::write(char const*) [clone .part.2] [clone .constprop.30]>
println():
C:\Users\LENOVO\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/Print.cpp:143
{
  size_t n = print(c);
  n += println();
  return n;
}
    1512:	8c 0f       	add	r24, r28
    1514:	9d 1f       	adc	r25, r29
    1516:	df 91       	pop	r29
    1518:	cf 91       	pop	r28
    151a:	08 95       	ret

0000151c <Print::println(__FlashStringHelper const*) [clone .constprop.25]>:
C:\Users\LENOVO\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/Print.cpp:114
size_t Print::print(double n, int digits)
{
  return printFloat(n, digits);
}

size_t Print::println(const __FlashStringHelper *ifsh)
    151c:	cf 93       	push	r28
    151e:	df 93       	push	r29
C:\Users\LENOVO\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/Print.cpp:116
{
  size_t n = print(ifsh);
    1520:	0e 94 ef 09 	call	0x13de	; 0x13de <Print::print(__FlashStringHelper const*) [clone .constprop.26]>
    1524:	ec 01       	movw	r28, r24
write():
    1526:	88 e7       	ldi	r24, 0x78	; 120
    1528:	90 e0       	ldi	r25, 0x00	; 0
    152a:	0e 94 2f 0a 	call	0x145e	; 0x145e <Print::write(char const*) [clone .part.2] [clone .constprop.30]>
println():
C:\Users\LENOVO\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/Print.cpp:119
  n += println();
  return n;
}
    152e:	8c 0f       	add	r24, r28
    1530:	9d 1f       	adc	r25, r29
    1532:	df 91       	pop	r29
    1534:	cf 91       	pop	r28
    1536:	08 95       	ret

00001538 <Print::printf(char const*, ...) [clone .constprop.21]>:
printf():
C:\Users\LENOVO\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/Print.cpp:208
{
  ((class Print *)(fdev_get_udata(fp)))->write((uint8_t)c);
  return 0;
}

int16_t Print::printf(const char *format, ...)
    1538:	cf 93       	push	r28
    153a:	df 93       	push	r29
    153c:	cd b7       	in	r28, 0x3d	; 61
    153e:	de b7       	in	r29, 0x3e	; 62
    1540:	2e 97       	sbiw	r28, 0x0e	; 14
    1542:	0f b6       	in	r0, 0x3f	; 63
    1544:	f8 94       	cli
    1546:	de bf       	out	0x3e, r29	; 62
    1548:	0f be       	out	0x3f, r0	; 63
    154a:	cd bf       	out	0x3d, r28	; 61
C:\Users\LENOVO\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/Print.cpp:213
{
  FILE f;
  va_list ap;

  fdev_setup_stream(&f, printf_putchar, NULL, _FDEV_SETUP_WRITE);
    154c:	84 e9       	ldi	r24, 0x94	; 148
    154e:	98 e0       	ldi	r25, 0x08	; 8
    1550:	9a 87       	std	Y+10, r25	; 0x0a
    1552:	89 87       	std	Y+9, r24	; 0x09
    1554:	1c 86       	std	Y+12, r1	; 0x0c
    1556:	1b 86       	std	Y+11, r1	; 0x0b
    1558:	82 e0       	ldi	r24, 0x02	; 2
    155a:	8c 83       	std	Y+4, r24	; 0x04
C:\Users\LENOVO\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/Print.cpp:214
  fdev_set_udata(&f, this);
    155c:	8e e3       	ldi	r24, 0x3E	; 62
    155e:	92 e0       	ldi	r25, 0x02	; 2
    1560:	9e 87       	std	Y+14, r25	; 0x0e
    1562:	8d 87       	std	Y+13, r24	; 0x0d
C:\Users\LENOVO\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/Print.cpp:216
  va_start(ap, format);
  return vfprintf(&f, format, ap);
    1564:	ae 01       	movw	r20, r28
    1566:	49 5e       	subi	r20, 0xE9	; 233
    1568:	5f 4f       	sbci	r21, 0xFF	; 255
    156a:	6b e7       	ldi	r22, 0x7B	; 123
    156c:	70 e0       	ldi	r23, 0x00	; 0
    156e:	ce 01       	movw	r24, r28
    1570:	01 96       	adiw	r24, 0x01	; 1
    1572:	0e 94 a9 18 	call	0x3152	; 0x3152 <vfprintf>
C:\Users\LENOVO\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/Print.cpp:217
}
    1576:	2e 96       	adiw	r28, 0x0e	; 14
    1578:	0f b6       	in	r0, 0x3f	; 63
    157a:	f8 94       	cli
    157c:	de bf       	out	0x3e, r29	; 62
    157e:	0f be       	out	0x3f, r0	; 63
    1580:	cd bf       	out	0x3d, r28	; 61
    1582:	df 91       	pop	r29
    1584:	cf 91       	pop	r28
    1586:	08 95       	ret

00001588 <Print::print(int, int) [clone .constprop.10]>:
print():
C:\Users\LENOVO\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/Print.cpp:77
size_t Print::print(unsigned char b, int base)
{
  return print((unsigned long) b, base);
}

size_t Print::print(int n, int base)
    1588:	cf 92       	push	r12
    158a:	df 92       	push	r13
    158c:	ef 92       	push	r14
    158e:	ff 92       	push	r15
    1590:	cf 93       	push	r28
    1592:	df 93       	push	r29
C:\Users\LENOVO\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/Print.cpp:79
{
  return print((long) n, base);
    1594:	6c 01       	movw	r12, r24
    1596:	99 0f       	add	r25, r25
    1598:	ee 08       	sbc	r14, r14
    159a:	ff 08       	sbc	r15, r15
C:\Users\LENOVO\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/Print.cpp:92
size_t Print::print(long n, int base)
{
  if (base == 0) {
    return write(n);
  } else if (base == 10) {
    if (n < 0) {
    159c:	f7 fe       	sbrs	r15, 7
    159e:	17 c0       	rjmp	.+46     	; 0x15ce <Print::print(int, int) [clone .constprop.10]+0x46>
C:\Users\LENOVO\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/Print.cpp:93
      int t = print('-');
    15a0:	8d e2       	ldi	r24, 0x2D	; 45
    15a2:	0e 94 0a 0a 	call	0x1414	; 0x1414 <Print::print(char) [clone .constprop.18]>
    15a6:	ec 01       	movw	r28, r24
C:\Users\LENOVO\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/Print.cpp:94
      n = -n;
    15a8:	66 27       	eor	r22, r22
    15aa:	77 27       	eor	r23, r23
    15ac:	cb 01       	movw	r24, r22
    15ae:	6c 19       	sub	r22, r12
    15b0:	7d 09       	sbc	r23, r13
    15b2:	8e 09       	sbc	r24, r14
    15b4:	9f 09       	sbc	r25, r15
C:\Users\LENOVO\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/Print.cpp:95
      return printNumber(n, 10) + t;
    15b6:	4a e0       	ldi	r20, 0x0A	; 10
    15b8:	0e 94 3c 0a 	call	0x1478	; 0x1478 <Print::printNumber(unsigned long, unsigned char) [clone .constprop.13]>
    15bc:	8c 0f       	add	r24, r28
    15be:	9d 1f       	adc	r25, r29
C:\Users\LENOVO\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/Print.cpp:80
}

size_t Print::print(int n, int base)
{
  return print((long) n, base);
}
    15c0:	df 91       	pop	r29
    15c2:	cf 91       	pop	r28
    15c4:	ff 90       	pop	r15
    15c6:	ef 90       	pop	r14
    15c8:	df 90       	pop	r13
    15ca:	cf 90       	pop	r12
    15cc:	08 95       	ret
C:\Users\LENOVO\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/Print.cpp:97
    if (n < 0) {
      int t = print('-');
      n = -n;
      return printNumber(n, 10) + t;
    }
    return printNumber(n, 10);
    15ce:	4a e0       	ldi	r20, 0x0A	; 10
    15d0:	c7 01       	movw	r24, r14
    15d2:	b6 01       	movw	r22, r12
C:\Users\LENOVO\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/Print.cpp:80
}

size_t Print::print(int n, int base)
{
  return print((long) n, base);
}
    15d4:	df 91       	pop	r29
    15d6:	cf 91       	pop	r28
    15d8:	ff 90       	pop	r15
    15da:	ef 90       	pop	r14
    15dc:	df 90       	pop	r13
    15de:	cf 90       	pop	r12
C:\Users\LENOVO\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/Print.cpp:97
    if (n < 0) {
      int t = print('-');
      n = -n;
      return printNumber(n, 10) + t;
    }
    return printNumber(n, 10);
    15e0:	0c 94 3c 0a 	jmp	0x1478	; 0x1478 <Print::printNumber(unsigned long, unsigned char) [clone .constprop.13]>

000015e4 <loadUserFromEEPROM(char*, char*)>:
loadUserFromEEPROM():
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_eeprom.h:23
  for (int i = 0; i < MAX_PASS_LEN; i++) {
    EEPROM.write(EEPROM_PASS_ADDR + i, pass[i]);
  }
}

void loadUserFromEEPROM(char* user, char* pass) {
    15e4:	cf 92       	push	r12
    15e6:	df 92       	push	r13
    15e8:	ef 92       	push	r14
    15ea:	ff 92       	push	r15
    15ec:	0f 93       	push	r16
    15ee:	1f 93       	push	r17
    15f0:	cf 93       	push	r28
    15f2:	df 93       	push	r29
    15f4:	7c 01       	movw	r14, r24
    15f6:	8b 01       	movw	r16, r22
    15f8:	6c 01       	movw	r12, r24
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_eeprom.h:24
  for (int i = 0; i < MAX_USER_LEN; i++) {
    15fa:	d0 e0       	ldi	r29, 0x00	; 0
    15fc:	c0 e0       	ldi	r28, 0x00	; 0
operator*():
C:\Users\LENOVO\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\3.0.2\libraries\EEPROM\src/EEPROM.h:42

    EERef( const int index )
        : index( index )                 {}
    
    //Access/read members.
    uint8_t operator*() const            { return eeprom_read_byte( (uint8_t*) index ); }
    15fe:	ce 01       	movw	r24, r28
    1600:	0e 94 7b 1b 	call	0x36f6	; 0x36f6 <eeprom_read_byte>
loadUserFromEEPROM():
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_eeprom.h:25
    user[i] = EEPROM.read(EEPROM_USER_ADDR + i);
    1604:	f6 01       	movw	r30, r12
    1606:	81 93       	st	Z+, r24
    1608:	6f 01       	movw	r12, r30
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_eeprom.h:24
    EEPROM.write(EEPROM_PASS_ADDR + i, pass[i]);
  }
}

void loadUserFromEEPROM(char* user, char* pass) {
  for (int i = 0; i < MAX_USER_LEN; i++) {
    160a:	21 96       	adiw	r28, 0x01	; 1
    160c:	c0 31       	cpi	r28, 0x10	; 16
    160e:	d1 05       	cpc	r29, r1
    1610:	b1 f7       	brne	.-20     	; 0x15fe <loadUserFromEEPROM(char*, char*)+0x1a>
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_eeprom.h:27
    user[i] = EEPROM.read(EEPROM_USER_ADDR + i);
  }
  user[MAX_USER_LEN] = '\0';
    1612:	f7 01       	movw	r30, r14
    1614:	10 8a       	std	Z+16, r1	; 0x10
    1616:	78 01       	movw	r14, r16
    1618:	c0 e1       	ldi	r28, 0x10	; 16
    161a:	d0 e0       	ldi	r29, 0x00	; 0
operator*():
C:\Users\LENOVO\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\3.0.2\libraries\EEPROM\src/EEPROM.h:42
    161c:	ce 01       	movw	r24, r28
    161e:	0e 94 7b 1b 	call	0x36f6	; 0x36f6 <eeprom_read_byte>
loadUserFromEEPROM():
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_eeprom.h:30

  for (int i = 0; i < MAX_PASS_LEN; i++) {
    pass[i] = EEPROM.read(EEPROM_PASS_ADDR + i);
    1622:	f7 01       	movw	r30, r14
    1624:	81 93       	st	Z+, r24
    1626:	7f 01       	movw	r14, r30
    1628:	21 96       	adiw	r28, 0x01	; 1
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_eeprom.h:29
  for (int i = 0; i < MAX_USER_LEN; i++) {
    user[i] = EEPROM.read(EEPROM_USER_ADDR + i);
  }
  user[MAX_USER_LEN] = '\0';

  for (int i = 0; i < MAX_PASS_LEN; i++) {
    162a:	c0 32       	cpi	r28, 0x20	; 32
    162c:	d1 05       	cpc	r29, r1
    162e:	b1 f7       	brne	.-20     	; 0x161c <loadUserFromEEPROM(char*, char*)+0x38>
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_eeprom.h:32
    pass[i] = EEPROM.read(EEPROM_PASS_ADDR + i);
  }
  pass[MAX_PASS_LEN] = '\0';
    1630:	f8 01       	movw	r30, r16
    1632:	10 8a       	std	Z+16, r1	; 0x10
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_eeprom.h:33
}
    1634:	df 91       	pop	r29
    1636:	cf 91       	pop	r28
    1638:	1f 91       	pop	r17
    163a:	0f 91       	pop	r16
    163c:	ff 90       	pop	r15
    163e:	ef 90       	pop	r14
    1640:	df 90       	pop	r13
    1642:	cf 90       	pop	r12
    1644:	08 95       	ret

00001646 <printCurrentUser()>:
printCurrentUser():
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_eeprom.h:36

void printCurrentUser() {
  loadUserFromEEPROM(username_now, password_now);
    1646:	62 e1       	ldi	r22, 0x12	; 18
    1648:	72 e0       	ldi	r23, 0x02	; 2
    164a:	83 e2       	ldi	r24, 0x23	; 35
    164c:	92 e0       	ldi	r25, 0x02	; 2
    164e:	0e 94 f2 0a 	call	0x15e4	; 0x15e4 <loadUserFromEEPROM(char*, char*)>
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_eeprom.h:37
  Serial.printf("[U] Logged in as: %s", username_now);
    1652:	83 e2       	ldi	r24, 0x23	; 35
    1654:	92 e0       	ldi	r25, 0x02	; 2
    1656:	9f 93       	push	r25
    1658:	8f 93       	push	r24
    165a:	8b e7       	ldi	r24, 0x7B	; 123
    165c:	90 e0       	ldi	r25, 0x00	; 0
    165e:	9f 93       	push	r25
    1660:	8f 93       	push	r24
    1662:	8e e3       	ldi	r24, 0x3E	; 62
    1664:	92 e0       	ldi	r25, 0x02	; 2
    1666:	9f 93       	push	r25
    1668:	8f 93       	push	r24
    166a:	0e 94 9c 0a 	call	0x1538	; 0x1538 <Print::printf(char const*, ...) [clone .constprop.21]>
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_eeprom.h:38
  Serial.println(F(""));
    166e:	0f 90       	pop	r0
    1670:	0f 90       	pop	r0
    1672:	0f 90       	pop	r0
    1674:	0f 90       	pop	r0
    1676:	0f 90       	pop	r0
    1678:	0f 90       	pop	r0
    167a:	8d e1       	ldi	r24, 0x1D	; 29
    167c:	91 e0       	ldi	r25, 0x01	; 1
    167e:	0c 94 8e 0a 	jmp	0x151c	; 0x151c <Print::println(__FlashStringHelper const*) [clone .constprop.25]>

00001682 <String::equals(char const*) const>:
equals():
C:\Users\LENOVO\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/WString.cpp:452
  return (len == s2.len && compareTo(s2) == 0);
}

unsigned char String::equals(const char *cstr) const
{
  if (len == 0) return (cstr == NULL || *cstr == 0);
    1682:	fc 01       	movw	r30, r24
    1684:	24 81       	ldd	r18, Z+4	; 0x04
    1686:	35 81       	ldd	r19, Z+5	; 0x05
    1688:	23 2b       	or	r18, r19
    168a:	39 f4       	brne	.+14     	; 0x169a <String::equals(char const*) const+0x18>
    168c:	21 e0       	ldi	r18, 0x01	; 1
    168e:	fb 01       	movw	r30, r22
    1690:	80 81       	ld	r24, Z
    1692:	88 23       	and	r24, r24
    1694:	49 f0       	breq	.+18     	; 0x16a8 <String::equals(char const*) const+0x26>
C:\Users\LENOVO\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/WString.cpp:454
  if (cstr == NULL) return buffer[0] == 0;
  return strcmp(buffer, cstr) == 0;
    1696:	20 e0       	ldi	r18, 0x00	; 0
    1698:	07 c0       	rjmp	.+14     	; 0x16a8 <String::equals(char const*) const+0x26>
    169a:	80 81       	ld	r24, Z
    169c:	91 81       	ldd	r25, Z+1	; 0x01
    169e:	0e 94 dd 1f 	call	0x3fba	; 0x3fba <strcmp>
    16a2:	21 e0       	ldi	r18, 0x01	; 1
    16a4:	89 2b       	or	r24, r25
    16a6:	b9 f7       	brne	.-18     	; 0x1696 <String::equals(char const*) const+0x14>
C:\Users\LENOVO\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/WString.cpp:455
}
    16a8:	82 2f       	mov	r24, r18
    16aa:	08 95       	ret

000016ac <readLine(char*, int)>:
readLine():
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_user.h:9
#include "elena_eeprom.h"

bool loggedIn = false;
String usernow;

void readLine(char* buffer, int maxLen) {
    16ac:	cf 92       	push	r12
    16ae:	df 92       	push	r13
    16b0:	ef 92       	push	r14
    16b2:	ff 92       	push	r15
    16b4:	0f 93       	push	r16
    16b6:	1f 93       	push	r17
    16b8:	cf 93       	push	r28
    16ba:	df 93       	push	r29
    16bc:	ec 01       	movw	r28, r24
    16be:	6c 01       	movw	r12, r24
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_user.h:10
  int i = 0;
    16c0:	10 e0       	ldi	r17, 0x00	; 0
    16c2:	00 e0       	ldi	r16, 0x00	; 0
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_user.h:11
  while (i < maxLen - 1) {
    16c4:	7b 01       	movw	r14, r22
    16c6:	81 e0       	ldi	r24, 0x01	; 1
    16c8:	e8 1a       	sub	r14, r24
    16ca:	f1 08       	sbc	r15, r1
    16cc:	0e 15       	cp	r16, r14
    16ce:	1f 05       	cpc	r17, r15
    16d0:	1c f5       	brge	.+70     	; 0x1718 <readLine(char*, int)+0x6c>
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_user.h:12
    if (Serial.available()) {
    16d2:	8e e3       	ldi	r24, 0x3E	; 62
    16d4:	92 e0       	ldi	r25, 0x02	; 2
    16d6:	0e 94 62 09 	call	0x12c4	; 0x12c4 <HardwareSerial::available()>
    16da:	89 2b       	or	r24, r25
    16dc:	b9 f3       	breq	.-18     	; 0x16cc <readLine(char*, int)+0x20>
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_user.h:13
      char c = Serial.read();
    16de:	8e e3       	ldi	r24, 0x3E	; 62
    16e0:	92 e0       	ldi	r25, 0x02	; 2
    16e2:	0e 94 40 09 	call	0x1280	; 0x1280 <HardwareSerial::read()>
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_user.h:14
      if (c == '\n' || c == '\r') break;
    16e6:	8a 30       	cpi	r24, 0x0A	; 10
    16e8:	b9 f0       	breq	.+46     	; 0x1718 <readLine(char*, int)+0x6c>
    16ea:	8d 30       	cpi	r24, 0x0D	; 13
    16ec:	a9 f0       	breq	.+42     	; 0x1718 <readLine(char*, int)+0x6c>
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_user.h:15
      buffer[i++] = c;
    16ee:	0f 5f       	subi	r16, 0xFF	; 255
    16f0:	1f 4f       	sbci	r17, 0xFF	; 255
    16f2:	f6 01       	movw	r30, r12
    16f4:	81 93       	st	Z+, r24
    16f6:	6f 01       	movw	r12, r30
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_user.h:17

      if (strcmp(buffer, "exit") == 0) {
    16f8:	60 e9       	ldi	r22, 0x90	; 144
    16fa:	70 e0       	ldi	r23, 0x00	; 0
    16fc:	ce 01       	movw	r24, r28
    16fe:	0e 94 dd 1f 	call	0x3fba	; 0x3fba <strcmp>
    1702:	89 2b       	or	r24, r25
    1704:	19 f7       	brne	.-58     	; 0x16cc <readLine(char*, int)+0x20>
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_user.h:23
        return; 
      }
    }
  }
  buffer[i] = '\0';
}
    1706:	df 91       	pop	r29
    1708:	cf 91       	pop	r28
    170a:	1f 91       	pop	r17
    170c:	0f 91       	pop	r16
    170e:	ff 90       	pop	r15
    1710:	ef 90       	pop	r14
    1712:	df 90       	pop	r13
    1714:	cf 90       	pop	r12
    1716:	08 95       	ret
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_user.h:22
      if (strcmp(buffer, "exit") == 0) {
        return; 
      }
    }
  }
  buffer[i] = '\0';
    1718:	c0 0f       	add	r28, r16
    171a:	d1 1f       	adc	r29, r17
    171c:	18 82       	st	Y, r1
    171e:	f3 cf       	rjmp	.-26     	; 0x1706 <readLine(char*, int)+0x5a>

00001720 <registerUser()>:
registerUser():
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_user.h:53
    loggedIn = false;
    return false;
  }
}

void registerUser() {
    1720:	ef 92       	push	r14
    1722:	ff 92       	push	r15
    1724:	0f 93       	push	r16
    1726:	1f 93       	push	r17
    1728:	cf 93       	push	r28
    172a:	df 93       	push	r29
    172c:	cd b7       	in	r28, 0x3d	; 61
    172e:	de b7       	in	r29, 0x3e	; 62
    1730:	a2 97       	sbiw	r28, 0x22	; 34
    1732:	0f b6       	in	r0, 0x3f	; 63
    1734:	f8 94       	cli
    1736:	de bf       	out	0x3e, r29	; 62
    1738:	0f be       	out	0x3f, r0	; 63
    173a:	cd bf       	out	0x3d, r28	; 61
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_user.h:57
  char username[MAX_USER_LEN + 1];
  char password[MAX_PASS_LEN + 1];

  Serial.println("");
    173c:	8a e7       	ldi	r24, 0x7A	; 122
    173e:	90 e0       	ldi	r25, 0x00	; 0
    1740:	0e 94 80 0a 	call	0x1500	; 0x1500 <Print::println(char const*) [clone .constprop.27]>
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_user.h:58
  Serial.println(F("Create Username: "));
    1744:	82 e5       	ldi	r24, 0x52	; 82
    1746:	91 e0       	ldi	r25, 0x01	; 1
    1748:	0e 94 8e 0a 	call	0x151c	; 0x151c <Print::println(__FlashStringHelper const*) [clone .constprop.25]>
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_user.h:59
  readLine(username, MAX_USER_LEN);
    174c:	60 e1       	ldi	r22, 0x10	; 16
    174e:	70 e0       	ldi	r23, 0x00	; 0
    1750:	ce 01       	movw	r24, r28
    1752:	01 96       	adiw	r24, 0x01	; 1
    1754:	0e 94 56 0b 	call	0x16ac	; 0x16ac <readLine(char*, int)>
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_user.h:61
  
  Serial.println(F("Create Password: "));
    1758:	80 e4       	ldi	r24, 0x40	; 64
    175a:	91 e0       	ldi	r25, 0x01	; 1
    175c:	0e 94 8e 0a 	call	0x151c	; 0x151c <Print::println(__FlashStringHelper const*) [clone .constprop.25]>
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_user.h:62
  readLine(password, MAX_PASS_LEN);
    1760:	60 e1       	ldi	r22, 0x10	; 16
    1762:	70 e0       	ldi	r23, 0x00	; 0
    1764:	ce 01       	movw	r24, r28
    1766:	42 96       	adiw	r24, 0x12	; 18
    1768:	0e 94 56 0b 	call	0x16ac	; 0x16ac <readLine(char*, int)>
    176c:	8e 01       	movw	r16, r28
    176e:	0f 5f       	subi	r16, 0xFF	; 255
    1770:	1f 4f       	sbci	r17, 0xFF	; 255
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_eeprom.h:15

char username_now[MAX_USER_LEN + 1];
char password_now[MAX_PASS_LEN + 1]; 

void saveUserToEEPROM(const char* user, const char* pass) {
  for (int i = 0; i < MAX_USER_LEN; i++) {
    1772:	f1 2c       	mov	r15, r1
    1774:	e1 2c       	mov	r14, r1
saveUserToEEPROM():
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_eeprom.h:16
    EEPROM.write(EEPROM_USER_ADDR + i, user[i]);
    1776:	f8 01       	movw	r30, r16
    1778:	61 91       	ld	r22, Z+
    177a:	8f 01       	movw	r16, r30
operator=():
C:\Users\LENOVO\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\3.0.2\libraries\EEPROM\src/EEPROM.h:47
    operator uint8_t() const             { return **this; }
    
    //Assignment/write members.
    EERef &operator=( const EERef &ref ) { return *this = *ref; }
    EERef &operator=( uint8_t in )       { return eeprom_write_byte( (uint8_t*) index, in ), *this;  }
    177c:	c7 01       	movw	r24, r14
    177e:	0e 94 83 1b 	call	0x3706	; 0x3706 <eeprom_write_byte>
saveUserToEEPROM():
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_eeprom.h:15

char username_now[MAX_USER_LEN + 1];
char password_now[MAX_PASS_LEN + 1]; 

void saveUserToEEPROM(const char* user, const char* pass) {
  for (int i = 0; i < MAX_USER_LEN; i++) {
    1782:	ff ef       	ldi	r31, 0xFF	; 255
    1784:	ef 1a       	sub	r14, r31
    1786:	ff 0a       	sbc	r15, r31
    1788:	80 e1       	ldi	r24, 0x10	; 16
    178a:	e8 16       	cp	r14, r24
    178c:	f1 04       	cpc	r15, r1
    178e:	99 f7       	brne	.-26     	; 0x1776 <registerUser()+0x56>
    1790:	8e 01       	movw	r16, r28
    1792:	0e 5e       	subi	r16, 0xEE	; 238
    1794:	1f 4f       	sbci	r17, 0xFF	; 255
    1796:	80 e1       	ldi	r24, 0x10	; 16
    1798:	e8 2e       	mov	r14, r24
    179a:	f1 2c       	mov	r15, r1
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_eeprom.h:19
    EEPROM.write(EEPROM_USER_ADDR + i, user[i]);
  }
  for (int i = 0; i < MAX_PASS_LEN; i++) {
    EEPROM.write(EEPROM_PASS_ADDR + i, pass[i]);
    179c:	f8 01       	movw	r30, r16
    179e:	61 91       	ld	r22, Z+
    17a0:	8f 01       	movw	r16, r30
operator=():
C:\Users\LENOVO\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\3.0.2\libraries\EEPROM\src/EEPROM.h:47
    17a2:	c7 01       	movw	r24, r14
    17a4:	0e 94 83 1b 	call	0x3706	; 0x3706 <eeprom_write_byte>
    17a8:	ff ef       	ldi	r31, 0xFF	; 255
    17aa:	ef 1a       	sub	r14, r31
    17ac:	ff 0a       	sbc	r15, r31
saveUserToEEPROM():
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_eeprom.h:18

void saveUserToEEPROM(const char* user, const char* pass) {
  for (int i = 0; i < MAX_USER_LEN; i++) {
    EEPROM.write(EEPROM_USER_ADDR + i, user[i]);
  }
  for (int i = 0; i < MAX_PASS_LEN; i++) {
    17ae:	80 e2       	ldi	r24, 0x20	; 32
    17b0:	e8 16       	cp	r14, r24
    17b2:	f1 04       	cpc	r15, r1
    17b4:	99 f7       	brne	.-26     	; 0x179c <registerUser()+0x7c>
registerUser():
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_user.h:65

  saveUserToEEPROM(username, password);
  Serial.println(F("[S] User registered successfully."));
    17b6:	8e e1       	ldi	r24, 0x1E	; 30
    17b8:	91 e0       	ldi	r25, 0x01	; 1
    17ba:	0e 94 8e 0a 	call	0x151c	; 0x151c <Print::println(__FlashStringHelper const*) [clone .constprop.25]>
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_user.h:67

}
    17be:	a2 96       	adiw	r28, 0x22	; 34
    17c0:	0f b6       	in	r0, 0x3f	; 63
    17c2:	f8 94       	cli
    17c4:	de bf       	out	0x3e, r29	; 62
    17c6:	0f be       	out	0x3f, r0	; 63
    17c8:	cd bf       	out	0x3d, r28	; 61
    17ca:	df 91       	pop	r29
    17cc:	cf 91       	pop	r28
    17ce:	1f 91       	pop	r17
    17d0:	0f 91       	pop	r16
    17d2:	ff 90       	pop	r15
    17d4:	ef 90       	pop	r14
    17d6:	08 95       	ret

000017d8 <String::~String()>:
__base_dtor ():
C:\Users\LENOVO\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/WString.cpp:124
  *this = dtostrf(value, (decimalPlaces + 2), decimalPlaces, buf);
}

String::~String()
{
  if(buffer)
    17d8:	fc 01       	movw	r30, r24
    17da:	80 81       	ld	r24, Z
    17dc:	91 81       	ldd	r25, Z+1	; 0x01
    17de:	00 97       	sbiw	r24, 0x00	; 0
    17e0:	11 f0       	breq	.+4      	; 0x17e6 <String::~String()+0xe>
C:\Users\LENOVO\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/WString.cpp:125
    free(buffer);
    17e2:	0c 94 dc 15 	jmp	0x2bb8	; 0x2bb8 <free>
C:\Users\LENOVO\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/WString.cpp:126
}
    17e6:	08 95       	ret

000017e8 <String::reserve(unsigned int)>:
reserve():
C:\Users\LENOVO\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/WString.cpp:147
  buffer = NULL;
  capacity = len = 0;
}

unsigned char String::reserve(unsigned int size)
{
    17e8:	0f 93       	push	r16
    17ea:	1f 93       	push	r17
    17ec:	cf 93       	push	r28
    17ee:	df 93       	push	r29
    17f0:	ec 01       	movw	r28, r24
C:\Users\LENOVO\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/WString.cpp:148
  if (buffer && capacity >= size) return 1;
    17f2:	88 81       	ld	r24, Y
    17f4:	99 81       	ldd	r25, Y+1	; 0x01
    17f6:	00 97       	sbiw	r24, 0x00	; 0
    17f8:	59 f0       	breq	.+22     	; 0x1810 <String::reserve(unsigned int)+0x28>
    17fa:	2a 81       	ldd	r18, Y+2	; 0x02
    17fc:	3b 81       	ldd	r19, Y+3	; 0x03
    17fe:	26 17       	cp	r18, r22
    1800:	37 07       	cpc	r19, r23
    1802:	30 f0       	brcs	.+12     	; 0x1810 <String::reserve(unsigned int)+0x28>
C:\Users\LENOVO\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/WString.cpp:150
  if (changeBuffer(size)) {
    if (len == 0) buffer[0] = 0;
    1804:	81 e0       	ldi	r24, 0x01	; 1
C:\Users\LENOVO\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/WString.cpp:154
    return 1;
  }
  return 0;
}
    1806:	df 91       	pop	r29
    1808:	cf 91       	pop	r28
    180a:	1f 91       	pop	r17
    180c:	0f 91       	pop	r16
    180e:	08 95       	ret
    1810:	8b 01       	movw	r16, r22
changeBuffer():
C:\Users\LENOVO\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/WString.cpp:158

unsigned char String::changeBuffer(unsigned int maxStrLen)
{
  char *newbuffer = (char *)realloc(buffer, maxStrLen + 1);
    1812:	6f 5f       	subi	r22, 0xFF	; 255
    1814:	7f 4f       	sbci	r23, 0xFF	; 255
    1816:	0e 94 07 1f 	call	0x3e0e	; 0x3e0e <realloc>
C:\Users\LENOVO\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/WString.cpp:159
  if (newbuffer) {
    181a:	00 97       	sbiw	r24, 0x00	; 0
    181c:	59 f0       	breq	.+22     	; 0x1834 <String::reserve(unsigned int)+0x4c>
C:\Users\LENOVO\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/WString.cpp:160
    buffer = newbuffer;
    181e:	99 83       	std	Y+1, r25	; 0x01
    1820:	88 83       	st	Y, r24
C:\Users\LENOVO\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/WString.cpp:161
    capacity = maxStrLen;
    1822:	1b 83       	std	Y+3, r17	; 0x03
    1824:	0a 83       	std	Y+2, r16	; 0x02
reserve():
C:\Users\LENOVO\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/WString.cpp:150

unsigned char String::reserve(unsigned int size)
{
  if (buffer && capacity >= size) return 1;
  if (changeBuffer(size)) {
    if (len == 0) buffer[0] = 0;
    1826:	2c 81       	ldd	r18, Y+4	; 0x04
    1828:	3d 81       	ldd	r19, Y+5	; 0x05
    182a:	23 2b       	or	r18, r19
    182c:	59 f7       	brne	.-42     	; 0x1804 <String::reserve(unsigned int)+0x1c>
    182e:	fc 01       	movw	r30, r24
    1830:	10 82       	st	Z, r1
    1832:	e8 cf       	rjmp	.-48     	; 0x1804 <String::reserve(unsigned int)+0x1c>
C:\Users\LENOVO\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/WString.cpp:153
    return 1;
  }
  return 0;
    1834:	80 e0       	ldi	r24, 0x00	; 0
    1836:	e7 cf       	rjmp	.-50     	; 0x1806 <String::reserve(unsigned int)+0x1e>

00001838 <String::copy(char const*, unsigned int)>:
copy():
C:\Users\LENOVO\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/WString.cpp:172
/*********************************************/
/*  Copy and Move                            */
/*********************************************/

String & String::copy(const char *cstr, unsigned int length)
{
    1838:	ef 92       	push	r14
    183a:	ff 92       	push	r15
    183c:	0f 93       	push	r16
    183e:	1f 93       	push	r17
    1840:	cf 93       	push	r28
    1842:	df 93       	push	r29
    1844:	ec 01       	movw	r28, r24
    1846:	7b 01       	movw	r14, r22
    1848:	8a 01       	movw	r16, r20
C:\Users\LENOVO\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/WString.cpp:173
  if (!reserve(length)) {
    184a:	ba 01       	movw	r22, r20
    184c:	0e 94 f4 0b 	call	0x17e8	; 0x17e8 <String::reserve(unsigned int)>
    1850:	28 81       	ld	r18, Y
    1852:	39 81       	ldd	r19, Y+1	; 0x01
    1854:	81 11       	cpse	r24, r1
    1856:	14 c0       	rjmp	.+40     	; 0x1880 <String::copy(char const*, unsigned int)+0x48>
invalidate():
C:\Users\LENOVO\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/WString.cpp:141
  len = 0;
}

void String::invalidate(void)
{
  if (buffer) free(buffer);
    1858:	21 15       	cp	r18, r1
    185a:	31 05       	cpc	r19, r1
    185c:	19 f0       	breq	.+6      	; 0x1864 <String::copy(char const*, unsigned int)+0x2c>
    185e:	c9 01       	movw	r24, r18
    1860:	0e 94 dc 15 	call	0x2bb8	; 0x2bb8 <free>
C:\Users\LENOVO\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/WString.cpp:142
  buffer = NULL;
    1864:	19 82       	std	Y+1, r1	; 0x01
    1866:	18 82       	st	Y, r1
C:\Users\LENOVO\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/WString.cpp:143
  capacity = len = 0;
    1868:	1d 82       	std	Y+5, r1	; 0x05
    186a:	1c 82       	std	Y+4, r1	; 0x04
    186c:	1b 82       	std	Y+3, r1	; 0x03
    186e:	1a 82       	std	Y+2, r1	; 0x02
copy():
C:\Users\LENOVO\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/WString.cpp:180
    return *this;
  }
  len = length;
  strcpy(buffer, cstr);
  return *this;
}
    1870:	ce 01       	movw	r24, r28
    1872:	df 91       	pop	r29
    1874:	cf 91       	pop	r28
    1876:	1f 91       	pop	r17
    1878:	0f 91       	pop	r16
    187a:	ff 90       	pop	r15
    187c:	ef 90       	pop	r14
    187e:	08 95       	ret
C:\Users\LENOVO\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/WString.cpp:177
{
  if (!reserve(length)) {
    invalidate();
    return *this;
  }
  len = length;
    1880:	1d 83       	std	Y+5, r17	; 0x05
    1882:	0c 83       	std	Y+4, r16	; 0x04
C:\Users\LENOVO\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/WString.cpp:178
  strcpy(buffer, cstr);
    1884:	b7 01       	movw	r22, r14
    1886:	c9 01       	movw	r24, r18
    1888:	0e 94 e6 1f 	call	0x3fcc	; 0x3fcc <strcpy>
    188c:	f1 cf       	rjmp	.-30     	; 0x1870 <String::copy(char const*, unsigned int)+0x38>

0000188e <elenaUserStartup()>:
elenaUserStartup():
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_user.h:69

bool elenaUserStartup() {
    188e:	0f 93       	push	r16
    1890:	1f 93       	push	r17
    1892:	cf 93       	push	r28
    1894:	df 93       	push	r29
    1896:	cd b7       	in	r28, 0x3d	; 61
    1898:	de b7       	in	r29, 0x3e	; 62
    189a:	ce 54       	subi	r28, 0x4E	; 78
    189c:	d1 09       	sbc	r29, r1
    189e:	0f b6       	in	r0, 0x3f	; 63
    18a0:	f8 94       	cli
    18a2:	de bf       	out	0x3e, r29	; 62
    18a4:	0f be       	out	0x3f, r0	; 63
    18a6:	cd bf       	out	0x3d, r28	; 61
operator*():
C:\Users\LENOVO\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\3.0.2\libraries\EEPROM\src/EEPROM.h:42

    EERef( const int index )
        : index( index )                 {}
    
    //Access/read members.
    uint8_t operator*() const            { return eeprom_read_byte( (uint8_t*) index ); }
    18a8:	90 e0       	ldi	r25, 0x00	; 0
    18aa:	80 e0       	ldi	r24, 0x00	; 0
    18ac:	0e 94 7b 1b 	call	0x36f6	; 0x36f6 <eeprom_read_byte>
isUserSet():
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_eeprom.h:43
  Serial.println(F(""));
}

bool isUserSet() {
  byte first = EEPROM.read(EEPROM_USER_ADDR);
  return first != 0xFF && first != '\0';
    18b0:	81 50       	subi	r24, 0x01	; 1
elenaUserStartup():
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_user.h:70
  if (!isUserSet()) {
    18b2:	8e 3f       	cpi	r24, 0xFE	; 254
    18b4:	98 f0       	brcs	.+38     	; 0x18dc <elenaUserStartup()+0x4e>
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_user.h:71
    Serial.println(F("[i] No user found. Please register."));
    18b6:	84 e3       	ldi	r24, 0x34	; 52
    18b8:	92 e0       	ldi	r25, 0x02	; 2
    18ba:	0e 94 8e 0a 	call	0x151c	; 0x151c <Print::println(__FlashStringHelper const*) [clone .constprop.25]>
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_user.h:72
    registerUser();
    18be:	0e 94 90 0b 	call	0x1720	; 0x1720 <registerUser()>
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_user.h:73
    return true; 
    18c2:	81 e0       	ldi	r24, 0x01	; 1
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_user.h:104
    } else {
      Serial.println(F("[X] Login aborted."));
      return false;
    }
  }
}
    18c4:	c2 5b       	subi	r28, 0xB2	; 178
    18c6:	df 4f       	sbci	r29, 0xFF	; 255
    18c8:	0f b6       	in	r0, 0x3f	; 63
    18ca:	f8 94       	cli
    18cc:	de bf       	out	0x3e, r29	; 62
    18ce:	0f be       	out	0x3f, r0	; 63
    18d0:	cd bf       	out	0x3d, r28	; 61
    18d2:	df 91       	pop	r29
    18d4:	cf 91       	pop	r28
    18d6:	1f 91       	pop	r17
    18d8:	0f 91       	pop	r16
    18da:	08 95       	ret
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_user.h:75
  if (!isUserSet()) {
    Serial.println(F("[i] No user found. Please register."));
    registerUser();
    return true; 
  } else {
    Serial.println(F("[?] Do you want to login? (y/n)"));
    18dc:	84 e1       	ldi	r24, 0x14	; 20
    18de:	92 e0       	ldi	r25, 0x02	; 2
    18e0:	0e 94 8e 0a 	call	0x151c	; 0x151c <Print::println(__FlashStringHelper const*) [clone .constprop.25]>
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_user.h:78

    char input[10];
    readLine(input, sizeof(input)); 
    18e4:	6a e0       	ldi	r22, 0x0A	; 10
    18e6:	70 e0       	ldi	r23, 0x00	; 0
    18e8:	ce 01       	movw	r24, r28
    18ea:	8b 5b       	subi	r24, 0xBB	; 187
    18ec:	9f 4f       	sbci	r25, 0xFF	; 255
    18ee:	0e 94 56 0b 	call	0x16ac	; 0x16ac <readLine(char*, int)>
    18f2:	8e 01       	movw	r16, r28
    18f4:	0b 5b       	subi	r16, 0xBB	; 187
    18f6:	1f 4f       	sbci	r17, 0xFF	; 255
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_user.h:79
    for (int i = 0; input[i]; i++) {
    18f8:	f8 01       	movw	r30, r16
    18fa:	81 91       	ld	r24, Z+
    18fc:	8f 01       	movw	r16, r30
    18fe:	88 23       	and	r24, r24
    1900:	49 f0       	breq	.+18     	; 0x1914 <elenaUserStartup()+0x86>
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_user.h:80
      input[i] = tolower(input[i]);
    1902:	08 2e       	mov	r0, r24
    1904:	00 0c       	add	r0, r0
    1906:	99 0b       	sbc	r25, r25
    1908:	0e 94 c4 1f 	call	0x3f88	; 0x3f88 <tolower>
    190c:	f8 01       	movw	r30, r16
    190e:	31 97       	sbiw	r30, 0x01	; 1
    1910:	80 83       	st	Z, r24
    1912:	f2 cf       	rjmp	.-28     	; 0x18f8 <elenaUserStartup()+0x6a>
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_user.h:83
    }

    if (strcmp(input, "n") == 0) {
    1914:	60 eb       	ldi	r22, 0xB0	; 176
    1916:	71 e0       	ldi	r23, 0x01	; 1
    1918:	ce 01       	movw	r24, r28
    191a:	8b 5b       	subi	r24, 0xBB	; 187
    191c:	9f 4f       	sbci	r25, 0xFF	; 255
    191e:	0e 94 dd 1f 	call	0x3fba	; 0x3fba <strcmp>
    1922:	89 2b       	or	r24, r25
    1924:	31 f4       	brne	.+12     	; 0x1932 <elenaUserStartup()+0xa4>
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_user.h:84
      Serial.println(F("[X] Skipping login..."));
    1926:	8e ef       	ldi	r24, 0xFE	; 254
    1928:	91 e0       	ldi	r25, 0x01	; 1
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_user.h:100
          return false;
        }
      }
      return true;
    } else {
      Serial.println(F("[X] Login aborted."));
    192a:	0e 94 8e 0a 	call	0x151c	; 0x151c <Print::println(__FlashStringHelper const*) [clone .constprop.25]>
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_user.h:101
      return false;
    192e:	80 e0       	ldi	r24, 0x00	; 0
    1930:	c9 cf       	rjmp	.-110    	; 0x18c4 <elenaUserStartup()+0x36>
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_user.h:86
    }

    if (strcmp(input, "n") == 0) {
      Serial.println(F("[X] Skipping login..."));
      return false;
    } else if (strcmp(input, "y") == 0) {
    1932:	65 e9       	ldi	r22, 0x95	; 149
    1934:	70 e0       	ldi	r23, 0x00	; 0
    1936:	ce 01       	movw	r24, r28
    1938:	8b 5b       	subi	r24, 0xBB	; 187
    193a:	9f 4f       	sbci	r25, 0xFF	; 255
    193c:	0e 94 dd 1f 	call	0x3fba	; 0x3fba <strcmp>
    1940:	89 2b       	or	r24, r25
    1942:	09 f0       	breq	.+2      	; 0x1946 <elenaUserStartup()+0xb8>
    1944:	6c c0       	rjmp	.+216    	; 0x1a1e <elenaUserStartup()+0x190>
loginUser():
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_user.h:28
}

bool loginUser() {
  char storedUser[MAX_USER_LEN + 1];
  char storedPass[MAX_PASS_LEN + 1];
  loadUserFromEEPROM(storedUser, storedPass);
    1946:	be 01       	movw	r22, r28
    1948:	6d 5d       	subi	r22, 0xDD	; 221
    194a:	7f 4f       	sbci	r23, 0xFF	; 255
    194c:	ce 01       	movw	r24, r28
    194e:	c4 96       	adiw	r24, 0x34	; 52
    1950:	0e 94 f2 0a 	call	0x15e4	; 0x15e4 <loadUserFromEEPROM(char*, char*)>
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_user.h:33

  char inputUser[MAX_USER_LEN + 1];
  char inputPass[MAX_PASS_LEN + 1];

  Serial.println("[!] Login required.");
    1954:	87 e9       	ldi	r24, 0x97	; 151
    1956:	90 e0       	ldi	r25, 0x00	; 0
    1958:	0e 94 80 0a 	call	0x1500	; 0x1500 <Print::println(char const*) [clone .constprop.27]>
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_user.h:34
  Serial.println("Username: ");
    195c:	8b ea       	ldi	r24, 0xAB	; 171
    195e:	90 e0       	ldi	r25, 0x00	; 0
    1960:	0e 94 80 0a 	call	0x1500	; 0x1500 <Print::println(char const*) [clone .constprop.27]>
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_user.h:35
  readLine(inputUser, MAX_USER_LEN);
    1964:	60 e1       	ldi	r22, 0x10	; 16
    1966:	70 e0       	ldi	r23, 0x00	; 0
    1968:	ce 01       	movw	r24, r28
    196a:	42 96       	adiw	r24, 0x12	; 18
    196c:	0e 94 56 0b 	call	0x16ac	; 0x16ac <readLine(char*, int)>
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_user.h:37

  Serial.println("Password: ");
    1970:	86 eb       	ldi	r24, 0xB6	; 182
    1972:	90 e0       	ldi	r25, 0x00	; 0
    1974:	0e 94 80 0a 	call	0x1500	; 0x1500 <Print::println(char const*) [clone .constprop.27]>
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_user.h:38
  readLine(inputPass, MAX_PASS_LEN);
    1978:	60 e1       	ldi	r22, 0x10	; 16
    197a:	70 e0       	ldi	r23, 0x00	; 0
    197c:	ce 01       	movw	r24, r28
    197e:	01 96       	adiw	r24, 0x01	; 1
    1980:	0e 94 56 0b 	call	0x16ac	; 0x16ac <readLine(char*, int)>
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_user.h:40

  if (strcmp(inputUser, storedUser) == 0 && strcmp(inputPass, storedPass) == 0) {
    1984:	be 01       	movw	r22, r28
    1986:	6c 5c       	subi	r22, 0xCC	; 204
    1988:	7f 4f       	sbci	r23, 0xFF	; 255
    198a:	ce 01       	movw	r24, r28
    198c:	42 96       	adiw	r24, 0x12	; 18
    198e:	0e 94 dd 1f 	call	0x3fba	; 0x3fba <strcmp>
    1992:	89 2b       	or	r24, r25
    1994:	11 f5       	brne	.+68     	; 0x19da <elenaUserStartup()+0x14c>
    1996:	be 01       	movw	r22, r28
    1998:	6d 5d       	subi	r22, 0xDD	; 221
    199a:	7f 4f       	sbci	r23, 0xFF	; 255
    199c:	ce 01       	movw	r24, r28
    199e:	01 96       	adiw	r24, 0x01	; 1
    19a0:	0e 94 dd 1f 	call	0x3fba	; 0x3fba <strcmp>
    19a4:	89 2b       	or	r24, r25
    19a6:	c9 f4       	brne	.+50     	; 0x19da <elenaUserStartup()+0x14c>
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_user.h:41
    Serial.println(F("[S] Login successful. Welcome back!"));
    19a8:	84 e6       	ldi	r24, 0x64	; 100
    19aa:	91 e0       	ldi	r25, 0x01	; 1
    19ac:	0e 94 8e 0a 	call	0x151c	; 0x151c <Print::println(__FlashStringHelper const*) [clone .constprop.25]>
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_user.h:42
    printCurrentUser();
    19b0:	0e 94 23 0b 	call	0x1646	; 0x1646 <printCurrentUser()>
operator=():
C:\Users\LENOVO\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/WString.cpp:241
}
#endif

String & String::operator = (const char *cstr)
{
  if (cstr) copy(cstr, strlen(cstr));
    19b4:	43 e2       	ldi	r20, 0x23	; 35
    19b6:	52 e0       	ldi	r21, 0x02	; 2
    19b8:	fa 01       	movw	r30, r20
    19ba:	01 90       	ld	r0, Z+
    19bc:	00 20       	and	r0, r0
    19be:	e9 f7       	brne	.-6      	; 0x19ba <elenaUserStartup()+0x12c>
    19c0:	af 01       	movw	r20, r30
    19c2:	44 52       	subi	r20, 0x24	; 36
    19c4:	52 40       	sbci	r21, 0x02	; 2
    19c6:	63 e2       	ldi	r22, 0x23	; 35
    19c8:	72 e0       	ldi	r23, 0x02	; 2
    19ca:	8b ed       	ldi	r24, 0xDB	; 219
    19cc:	92 e0       	ldi	r25, 0x02	; 2
    19ce:	0e 94 1c 0c 	call	0x1838	; 0x1838 <String::copy(char const*, unsigned int)>
loginUser():
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_user.h:44
    usernow = username_now;
    loggedIn = true;
    19d2:	81 e0       	ldi	r24, 0x01	; 1
    19d4:	80 93 34 02 	sts	0x0234, r24	; 0x800234 <loggedIn>
    19d8:	75 cf       	rjmp	.-278    	; 0x18c4 <elenaUserStartup()+0x36>
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_user.h:47
    return true;
  } else {
    Serial.println(F("[!] Invalid username or password."));
    19da:	88 e8       	ldi	r24, 0x88	; 136
    19dc:	91 e0       	ldi	r25, 0x01	; 1
    19de:	0e 94 8e 0a 	call	0x151c	; 0x151c <Print::println(__FlashStringHelper const*) [clone .constprop.25]>
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_user.h:48
    loggedIn = false;
    19e2:	10 92 34 02 	sts	0x0234, r1	; 0x800234 <loggedIn>
elenaUserStartup():
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_user.h:88
    if (strcmp(input, "n") == 0) {
      Serial.println(F("[X] Skipping login..."));
      return false;
    } else if (strcmp(input, "y") == 0) {
      while (!loginUser()) {
        Serial.println(F("[i] Please try again.\n"));
    19e6:	87 ee       	ldi	r24, 0xE7	; 231
    19e8:	91 e0       	ldi	r25, 0x01	; 1
    19ea:	0e 94 8e 0a 	call	0x151c	; 0x151c <Print::println(__FlashStringHelper const*) [clone .constprop.25]>
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_user.h:90

        Serial.println(F("[?] Retry login? (y/n)"));
    19ee:	80 ed       	ldi	r24, 0xD0	; 208
    19f0:	91 e0       	ldi	r25, 0x01	; 1
    19f2:	0e 94 8e 0a 	call	0x151c	; 0x151c <Print::println(__FlashStringHelper const*) [clone .constprop.25]>
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_user.h:91
        readLine(input, sizeof(input));
    19f6:	6a e0       	ldi	r22, 0x0A	; 10
    19f8:	70 e0       	ldi	r23, 0x00	; 0
    19fa:	ce 01       	movw	r24, r28
    19fc:	8b 5b       	subi	r24, 0xBB	; 187
    19fe:	9f 4f       	sbci	r25, 0xFF	; 255
    1a00:	0e 94 56 0b 	call	0x16ac	; 0x16ac <readLine(char*, int)>
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_user.h:93

        if (strcmp(input, "n") == 0) {
    1a04:	60 eb       	ldi	r22, 0xB0	; 176
    1a06:	71 e0       	ldi	r23, 0x01	; 1
    1a08:	ce 01       	movw	r24, r28
    1a0a:	8b 5b       	subi	r24, 0xBB	; 187
    1a0c:	9f 4f       	sbci	r25, 0xFF	; 255
    1a0e:	0e 94 dd 1f 	call	0x3fba	; 0x3fba <strcmp>
    1a12:	89 2b       	or	r24, r25
    1a14:	09 f0       	breq	.+2      	; 0x1a18 <elenaUserStartup()+0x18a>
    1a16:	97 cf       	rjmp	.-210    	; 0x1946 <elenaUserStartup()+0xb8>
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_user.h:94
          Serial.println(F("[X] Login aborted."));
    1a18:	8d eb       	ldi	r24, 0xBD	; 189
    1a1a:	91 e0       	ldi	r25, 0x01	; 1
    1a1c:	86 cf       	rjmp	.-244    	; 0x192a <elenaUserStartup()+0x9c>
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_user.h:100
          return false;
        }
      }
      return true;
    } else {
      Serial.println(F("[X] Login aborted."));
    1a1e:	8a ea       	ldi	r24, 0xAA	; 170
    1a20:	91 e0       	ldi	r25, 0x01	; 1
    1a22:	83 cf       	rjmp	.-250    	; 0x192a <elenaUserStartup()+0x9c>

00001a24 <__vector_11>:
__vector_11():
C:\Users\LENOVO\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/wiring.c:159
#if defined(__AVR_ATtiny24__) || defined(__AVR_ATtiny44__) || defined(__AVR_ATtiny84__)
ISR(TIM0_OVF_vect)
#else
ISR(TIMER0_OVF_vect)
#endif
{
    1a24:	1f 92       	push	r1
    1a26:	0f 92       	push	r0
    1a28:	0f b6       	in	r0, 0x3f	; 63
    1a2a:	0f 92       	push	r0
    1a2c:	11 24       	eor	r1, r1
    1a2e:	2f 93       	push	r18
    1a30:	3f 93       	push	r19
    1a32:	8f 93       	push	r24
    1a34:	9f 93       	push	r25
    1a36:	af 93       	push	r26
    1a38:	bf 93       	push	r27
C:\Users\LENOVO\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/wiring.c:167
  static unsigned char timer0_exact = 0;
#endif

  // copy these to local variables so they can be stored in registers
  // (volatile variables must be read from memory on every access, so this saves time)
  unsigned long m = timer0_millis;
    1a3a:	80 91 36 02 	lds	r24, 0x0236	; 0x800236 <timer0_millis>
    1a3e:	90 91 37 02 	lds	r25, 0x0237	; 0x800237 <timer0_millis+0x1>
    1a42:	a0 91 38 02 	lds	r26, 0x0238	; 0x800238 <timer0_millis+0x2>
    1a46:	b0 91 39 02 	lds	r27, 0x0239	; 0x800239 <timer0_millis+0x3>
C:\Users\LENOVO\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/wiring.c:168
  unsigned char f = timer0_fract;
    1a4a:	30 91 35 02 	lds	r19, 0x0235	; 0x800235 <timer0_fract>
C:\Users\LENOVO\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/wiring.c:170

  f += FRACT_INC FRACT_INC_PLUS;
    1a4e:	23 e0       	ldi	r18, 0x03	; 3
    1a50:	23 0f       	add	r18, r19
C:\Users\LENOVO\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/wiring.c:200
    ++f;
  }
#endif
#endif // CORRECT_EXACT_MILLIS

  if (f >= FRACT_MAX) {
    1a52:	2d 37       	cpi	r18, 0x7D	; 125
    1a54:	68 f1       	brcs	.+90     	; 0x1ab0 <__vector_11+0x8c>
C:\Users\LENOVO\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/wiring.c:201
    f -= FRACT_MAX;
    1a56:	26 e8       	ldi	r18, 0x86	; 134
    1a58:	23 0f       	add	r18, r19
C:\Users\LENOVO\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/wiring.c:202
    m += MILLIS_INC + 1;
    1a5a:	02 96       	adiw	r24, 0x02	; 2
    1a5c:	a1 1d       	adc	r26, r1
    1a5e:	b1 1d       	adc	r27, r1
C:\Users\LENOVO\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/wiring.c:208
  }
  else {
    m += MILLIS_INC;
  }

  timer0_fract = f;
    1a60:	20 93 35 02 	sts	0x0235, r18	; 0x800235 <timer0_fract>
C:\Users\LENOVO\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/wiring.c:209
  timer0_millis = m;
    1a64:	80 93 36 02 	sts	0x0236, r24	; 0x800236 <timer0_millis>
    1a68:	90 93 37 02 	sts	0x0237, r25	; 0x800237 <timer0_millis+0x1>
    1a6c:	a0 93 38 02 	sts	0x0238, r26	; 0x800238 <timer0_millis+0x2>
    1a70:	b0 93 39 02 	sts	0x0239, r27	; 0x800239 <timer0_millis+0x3>
C:\Users\LENOVO\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/wiring.c:211
#ifndef CORRECT_EXACT_MICROS
  timer0_overflow_count++;
    1a74:	80 91 3a 02 	lds	r24, 0x023A	; 0x80023a <timer0_overflow_count>
    1a78:	90 91 3b 02 	lds	r25, 0x023B	; 0x80023b <timer0_overflow_count+0x1>
    1a7c:	a0 91 3c 02 	lds	r26, 0x023C	; 0x80023c <timer0_overflow_count+0x2>
    1a80:	b0 91 3d 02 	lds	r27, 0x023D	; 0x80023d <timer0_overflow_count+0x3>
    1a84:	01 96       	adiw	r24, 0x01	; 1
    1a86:	a1 1d       	adc	r26, r1
    1a88:	b1 1d       	adc	r27, r1
    1a8a:	80 93 3a 02 	sts	0x023A, r24	; 0x80023a <timer0_overflow_count>
    1a8e:	90 93 3b 02 	sts	0x023B, r25	; 0x80023b <timer0_overflow_count+0x1>
    1a92:	a0 93 3c 02 	sts	0x023C, r26	; 0x80023c <timer0_overflow_count+0x2>
    1a96:	b0 93 3d 02 	sts	0x023D, r27	; 0x80023d <timer0_overflow_count+0x3>
C:\Users\LENOVO\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/wiring.c:213
#endif
}
    1a9a:	bf 91       	pop	r27
    1a9c:	af 91       	pop	r26
    1a9e:	9f 91       	pop	r25
    1aa0:	8f 91       	pop	r24
    1aa2:	3f 91       	pop	r19
    1aa4:	2f 91       	pop	r18
    1aa6:	0f 90       	pop	r0
    1aa8:	0f be       	out	0x3f, r0	; 63
    1aaa:	0f 90       	pop	r0
    1aac:	1f 90       	pop	r1
    1aae:	18 95       	reti
C:\Users\LENOVO\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/wiring.c:205
  if (f >= FRACT_MAX) {
    f -= FRACT_MAX;
    m += MILLIS_INC + 1;
  }
  else {
    m += MILLIS_INC;
    1ab0:	01 96       	adiw	r24, 0x01	; 1
    1ab2:	a1 1d       	adc	r26, r1
    1ab4:	b1 1d       	adc	r27, r1
    1ab6:	d4 cf       	rjmp	.-88     	; 0x1a60 <__vector_11+0x3c>

00001ab8 <__vector_14>:
__vector_14():
C:\Users\LENOVO\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/HardwareSerial0.cpp:63
#elif defined(USART0_UDRE_vect)
ISR(USART0_UDRE_vect)
#else
  #error "Don't know what the Data Register Empty vector is called for Serial"
#endif
{
    1ab8:	1f 92       	push	r1
    1aba:	0f 92       	push	r0
    1abc:	0f b6       	in	r0, 0x3f	; 63
    1abe:	0f 92       	push	r0
    1ac0:	11 24       	eor	r1, r1
    1ac2:	2f 93       	push	r18
    1ac4:	3f 93       	push	r19
    1ac6:	4f 93       	push	r20
    1ac8:	5f 93       	push	r21
    1aca:	6f 93       	push	r22
    1acc:	7f 93       	push	r23
    1ace:	8f 93       	push	r24
    1ad0:	9f 93       	push	r25
    1ad2:	af 93       	push	r26
    1ad4:	bf 93       	push	r27
    1ad6:	ef 93       	push	r30
    1ad8:	ff 93       	push	r31
C:\Users\LENOVO\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/HardwareSerial0.cpp:64
  Serial._tx_udr_empty_irq();
    1ada:	8e e3       	ldi	r24, 0x3E	; 62
    1adc:	92 e0       	ldi	r25, 0x02	; 2
    1ade:	0e 94 82 09 	call	0x1304	; 0x1304 <HardwareSerial::_tx_udr_empty_irq()>
C:\Users\LENOVO\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/HardwareSerial0.cpp:65
}
    1ae2:	ff 91       	pop	r31
    1ae4:	ef 91       	pop	r30
    1ae6:	bf 91       	pop	r27
    1ae8:	af 91       	pop	r26
    1aea:	9f 91       	pop	r25
    1aec:	8f 91       	pop	r24
    1aee:	7f 91       	pop	r23
    1af0:	6f 91       	pop	r22
    1af2:	5f 91       	pop	r21
    1af4:	4f 91       	pop	r20
    1af6:	3f 91       	pop	r19
    1af8:	2f 91       	pop	r18
    1afa:	0f 90       	pop	r0
    1afc:	0f be       	out	0x3f, r0	; 63
    1afe:	0f 90       	pop	r0
    1b00:	1f 90       	pop	r1
    1b02:	18 95       	reti

00001b04 <__vector_13>:
__vector_13():
C:\Users\LENOVO\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/HardwareSerial0.cpp:50
#elif defined(USART_RX_vect)
  ISR(USART_RX_vect)
#else
  #error "Don't know what the Data Received vector is called for Serial"
#endif
  {
    1b04:	1f 92       	push	r1
    1b06:	0f 92       	push	r0
    1b08:	0f b6       	in	r0, 0x3f	; 63
    1b0a:	0f 92       	push	r0
    1b0c:	11 24       	eor	r1, r1
    1b0e:	2f 93       	push	r18
    1b10:	8f 93       	push	r24
    1b12:	9f 93       	push	r25
    1b14:	ef 93       	push	r30
    1b16:	ff 93       	push	r31
_rx_complete_irq():
C:\Users\LENOVO\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/HardwareSerial_private.h:100

// Actual interrupt handlers //////////////////////////////////////////////////////////////

void HardwareSerial::_rx_complete_irq(void)
{
  if (bit_is_clear(*_ucsra, UPE0)) {
    1b18:	e0 91 4e 02 	lds	r30, 0x024E	; 0x80024e <Serial+0x10>
    1b1c:	f0 91 4f 02 	lds	r31, 0x024F	; 0x80024f <Serial+0x11>
    1b20:	80 81       	ld	r24, Z
    1b22:	e0 91 54 02 	lds	r30, 0x0254	; 0x800254 <Serial+0x16>
    1b26:	f0 91 55 02 	lds	r31, 0x0255	; 0x800255 <Serial+0x17>
    1b2a:	82 fd       	sbrc	r24, 2
    1b2c:	1b c0       	rjmp	.+54     	; 0x1b64 <__vector_13+0x60>
C:\Users\LENOVO\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/HardwareSerial_private.h:103
    // No Parity error, read byte and store it in the buffer if there is
    // room
    unsigned char c = *_udr;
    1b2e:	90 81       	ld	r25, Z
C:\Users\LENOVO\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/HardwareSerial_private.h:104
    rx_buffer_index_t i = (unsigned int)(_rx_buffer_head + 1) % SERIAL_RX_BUFFER_SIZE;
    1b30:	80 91 57 02 	lds	r24, 0x0257	; 0x800257 <Serial+0x19>
    1b34:	8f 5f       	subi	r24, 0xFF	; 255
    1b36:	8f 73       	andi	r24, 0x3F	; 63
C:\Users\LENOVO\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/HardwareSerial_private.h:110

    // if we should be storing the received character into the location
    // just before the tail (meaning that the head would advance to the
    // current location of the tail), we're about to overflow the buffer
    // and so we don't write the character or advance the head.
    if (i != _rx_buffer_tail) {
    1b38:	20 91 58 02 	lds	r18, 0x0258	; 0x800258 <Serial+0x1a>
    1b3c:	82 17       	cp	r24, r18
    1b3e:	41 f0       	breq	.+16     	; 0x1b50 <__vector_13+0x4c>
C:\Users\LENOVO\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/HardwareSerial_private.h:111
      _rx_buffer[_rx_buffer_head] = c;
    1b40:	e0 91 57 02 	lds	r30, 0x0257	; 0x800257 <Serial+0x19>
    1b44:	f0 e0       	ldi	r31, 0x00	; 0
    1b46:	e2 5c       	subi	r30, 0xC2	; 194
    1b48:	fd 4f       	sbci	r31, 0xFD	; 253
    1b4a:	95 8f       	std	Z+29, r25	; 0x1d
C:\Users\LENOVO\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/HardwareSerial_private.h:112
      _rx_buffer_head = i;
    1b4c:	80 93 57 02 	sts	0x0257, r24	; 0x800257 <Serial+0x19>
__vector_13():
C:\Users\LENOVO\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/HardwareSerial0.cpp:52
    Serial._rx_complete_irq();
  }
    1b50:	ff 91       	pop	r31
    1b52:	ef 91       	pop	r30
    1b54:	9f 91       	pop	r25
    1b56:	8f 91       	pop	r24
    1b58:	2f 91       	pop	r18
    1b5a:	0f 90       	pop	r0
    1b5c:	0f be       	out	0x3f, r0	; 63
    1b5e:	0f 90       	pop	r0
    1b60:	1f 90       	pop	r1
    1b62:	18 95       	reti
_rx_complete_irq():
C:\Users\LENOVO\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/HardwareSerial_private.h:116
    }
  } else {
    // Parity error, read byte but discard it
    *_udr;
    1b64:	80 81       	ld	r24, Z
    1b66:	f4 cf       	rjmp	.-24     	; 0x1b50 <__vector_13+0x4c>

00001b68 <global constructors keyed to 65535_0_main.ino.cpp.o.2168>:
_GLOBAL__I_65535_0_main.ino.cpp.o.2168():
    1b68:	ee e3       	ldi	r30, 0x3E	; 62
    1b6a:	f2 e0       	ldi	r31, 0x02	; 2
    1b6c:	13 82       	std	Z+3, r1	; 0x03
    1b6e:	12 82       	std	Z+2, r1	; 0x02
    1b70:	88 ee       	ldi	r24, 0xE8	; 232
    1b72:	93 e0       	ldi	r25, 0x03	; 3
    1b74:	a0 e0       	ldi	r26, 0x00	; 0
    1b76:	b0 e0       	ldi	r27, 0x00	; 0
    1b78:	84 83       	std	Z+4, r24	; 0x04
    1b7a:	95 83       	std	Z+5, r25	; 0x05
    1b7c:	a6 83       	std	Z+6, r26	; 0x06
    1b7e:	b7 83       	std	Z+7, r27	; 0x07
    1b80:	8a e6       	ldi	r24, 0x6A	; 106
    1b82:	90 e0       	ldi	r25, 0x00	; 0
    1b84:	91 83       	std	Z+1, r25	; 0x01
    1b86:	80 83       	st	Z, r24
    1b88:	80 e4       	ldi	r24, 0x40	; 64
    1b8a:	90 e0       	ldi	r25, 0x00	; 0
    1b8c:	95 87       	std	Z+13, r25	; 0x0d
    1b8e:	84 87       	std	Z+12, r24	; 0x0c
    1b90:	29 e2       	ldi	r18, 0x29	; 41
    1b92:	30 e0       	ldi	r19, 0x00	; 0
    1b94:	37 87       	std	Z+15, r19	; 0x0f
    1b96:	26 87       	std	Z+14, r18	; 0x0e
    1b98:	2b e2       	ldi	r18, 0x2B	; 43
    1b9a:	30 e0       	ldi	r19, 0x00	; 0
    1b9c:	31 8b       	std	Z+17, r19	; 0x11
    1b9e:	20 8b       	std	Z+16, r18	; 0x10
    1ba0:	2a e2       	ldi	r18, 0x2A	; 42
    1ba2:	30 e0       	ldi	r19, 0x00	; 0
    1ba4:	33 8b       	std	Z+19, r19	; 0x13
    1ba6:	22 8b       	std	Z+18, r18	; 0x12
    1ba8:	95 8b       	std	Z+21, r25	; 0x15
    1baa:	84 8b       	std	Z+20, r24	; 0x14
    1bac:	8c e2       	ldi	r24, 0x2C	; 44
    1bae:	90 e0       	ldi	r25, 0x00	; 0
    1bb0:	97 8b       	std	Z+23, r25	; 0x17
    1bb2:	86 8b       	std	Z+22, r24	; 0x16
    1bb4:	11 8e       	std	Z+25, r1	; 0x19
    1bb6:	12 8e       	std	Z+26, r1	; 0x1a
    1bb8:	13 8e       	std	Z+27, r1	; 0x1b
    1bba:	14 8e       	std	Z+28, r1	; 0x1c
    1bbc:	eb ed       	ldi	r30, 0xDB	; 219
    1bbe:	f2 e0       	ldi	r31, 0x02	; 2
    1bc0:	11 82       	std	Z+1, r1	; 0x01
    1bc2:	10 82       	st	Z, r1
    1bc4:	13 82       	std	Z+3, r1	; 0x03
    1bc6:	12 82       	std	Z+2, r1	; 0x02
    1bc8:	15 82       	std	Z+5, r1	; 0x05
    1bca:	14 82       	std	Z+4, r1	; 0x04
    1bcc:	50 e0       	ldi	r21, 0x00	; 0
    1bce:	40 e0       	ldi	r20, 0x00	; 0
    1bd0:	6a e7       	ldi	r22, 0x7A	; 122
    1bd2:	70 e0       	ldi	r23, 0x00	; 0
    1bd4:	cf 01       	movw	r24, r30
    1bd6:	0c 94 1c 0c 	jmp	0x1838	; 0x1838 <String::copy(char const*, unsigned int)>

00001bda <main>:
main():
C:\Users\LENOVO\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/main.cpp:34

//void setupUSB() __attribute__((weak));
//void setupUSB() { }

int main(void)
{
    1bda:	cf 93       	push	r28
    1bdc:	df 93       	push	r29
    1bde:	cd b7       	in	r28, 0x3d	; 61
    1be0:	de b7       	in	r29, 0x3e	; 62
    1be2:	c5 54       	subi	r28, 0x45	; 69
    1be4:	d1 09       	sbc	r29, r1
    1be6:	0f b6       	in	r0, 0x3f	; 63
    1be8:	f8 94       	cli
    1bea:	de bf       	out	0x3e, r29	; 62
    1bec:	0f be       	out	0x3f, r0	; 63
    1bee:	cd bf       	out	0x3d, r28	; 61
init():
C:\Users\LENOVO\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/wiring.c:945

void init()
{
  // this needs to be called before setup() or some functions won't
  // work there
  sei();
    1bf0:	78 94       	sei
C:\Users\LENOVO\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/wiring.c:966
#if defined(__AVR_ATmega64__) || defined(__AVR_ATmega128__)
  // CPU specific: different values for the ATmega64/128
  TCCR0 |= _BV(WGM01) | _BV(WGM00) | _BV(CS02);
#elif defined(TCCR0) && defined(CS01) && defined(CS00)
  // This combination is for the ATmega8535, ATmega8, ATmega16, ATmega32, ATmega8515, ATmega162
  TCCR0 |= _BV(CS01) | _BV(CS00);
    1bf2:	83 b7       	in	r24, 0x33	; 51
    1bf4:	83 60       	ori	r24, 0x03	; 3
    1bf6:	83 bf       	out	0x33, r24	; 51
C:\Users\LENOVO\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/wiring.c:968
  #if defined(WGM00) && defined(WGM01) // The ATmega8 doesn't have WGM00 and WGM01
    TCCR0 |= _BV(WGM01) | _BV(WGM00);
    1bf8:	83 b7       	in	r24, 0x33	; 51
    1bfa:	88 64       	ori	r24, 0x48	; 72
    1bfc:	83 bf       	out	0x33, r24	; 51
C:\Users\LENOVO\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/wiring.c:982
  #error Timer 0 prescale factor 64 not set correctly
#endif

// Enable timer 0 overflow interrupt
#if defined(TIMSK) && defined(TOIE0)
  TIMSK |= _BV(TOIE0);
    1bfe:	89 b7       	in	r24, 0x39	; 57
    1c00:	81 60       	ori	r24, 0x01	; 1
    1c02:	89 bf       	out	0x39, r24	; 57
C:\Users\LENOVO\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/wiring.c:995
// this is better for motors as it ensures an even waveform
// note, however, that fast pwm mode can achieve a frequency of up
// 8 MHz (with a 16 MHz clock) at 50% duty cycle

#if defined(TCCR1B) && defined(CS11) && defined(CS10)
  TCCR1B = _BV(CS11); // Set timer 1 prescale factor to 64
    1c04:	92 e0       	ldi	r25, 0x02	; 2
    1c06:	9e bd       	out	0x2e, r25	; 46
C:\Users\LENOVO\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/wiring.c:997
#if F_CPU >= 8000000L
  TCCR1B |= _BV(CS10);
    1c08:	8e b5       	in	r24, 0x2e	; 46
    1c0a:	81 60       	ori	r24, 0x01	; 1
    1c0c:	8e bd       	out	0x2e, r24	; 46
C:\Users\LENOVO\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/wiring.c:1006
#if F_CPU >= 8000000L
  TCCR1 |= _BV(CS10);
#endif
#endif
#if defined(TCCR1A) && defined(WGM10)
  TCCR1A |= _BV(WGM10); // Put timer 1 in 8-bit phase correct pwm mode
    1c0e:	8f b5       	in	r24, 0x2f	; 47
    1c10:	81 60       	ori	r24, 0x01	; 1
    1c12:	8f bd       	out	0x2f, r24	; 47
C:\Users\LENOVO\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/wiring.c:1011
#endif

// Set timer 2 prescale factor to 64
#if defined(TCCR2) && defined(CS22)
  TCCR2 |= _BV(CS22);
    1c14:	85 b5       	in	r24, 0x25	; 37
    1c16:	84 60       	ori	r24, 0x04	; 4
    1c18:	85 bd       	out	0x25, r24	; 37
C:\Users\LENOVO\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/wiring.c:1020
  TCCR2A |= _BV(CS22);
#endif

// Configure timer 2 for phase correct pwm (8-bit)
#if defined(TCCR2) && defined(WGM20)
  TCCR2 |= _BV(WGM20);
    1c1a:	85 b5       	in	r24, 0x25	; 37
    1c1c:	80 64       	ori	r24, 0x40	; 64
    1c1e:	85 bd       	out	0x25, r24	; 37
C:\Users\LENOVO\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/wiring.c:1050
#endif

#if defined(ADCSRA)
  // set a2d prescaler so we are inside the desired 50-200 KHz range.
  #if F_CPU >= 16000000 // 16 MHz / 128 = 125 KHz
    ADCSRA = _BV(ADPS2) | _BV(ADPS1) | _BV(ADPS0) | _BV(ADEN);
    1c20:	87 e8       	ldi	r24, 0x87	; 135
    1c22:	86 b9       	out	0x06, r24	; 6
C:\Users\LENOVO\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/wiring.c:1068

  // The bootloader connects pins 0 and 1 to the USART; disconnect them
  // here so they can be used as normal digital i/o; they will be
  // reconnected in Serial.begin()
#if defined(UCSRB)
  UCSRB = 0;
    1c24:	1a b8       	out	0x0a, r1	; 10
wdt_disable():
c:\users\lenovo\appdata\local\arduino15\packages\arduino\tools\avr-gcc\7.3.0-atmel3.6.1-arduino7\avr\include\avr/wdt.h:510
				"out __SREG__,__tmp_reg__"   "\n\t"
				: [TEMPREG] "=d" (temp_reg)
				: [WDTREG]  "I"  (_SFR_IO_ADDR(_WD_CONTROL_REG)),
				[WDCE_WDE]  "n"  ((uint8_t)(_BV(_WD_CHANGE_BIT) | _BV(WDE)))
				: "r0"
		);
    1c26:	0f b6       	in	r0, 0x3f	; 63
    1c28:	f8 94       	cli
    1c2a:	a8 95       	wdr
    1c2c:	81 b5       	in	r24, 0x21	; 33
    1c2e:	88 61       	ori	r24, 0x18	; 24
    1c30:	81 bd       	out	0x21, r24	; 33
    1c32:	11 bc       	out	0x21, r1	; 33
    1c34:	0f be       	out	0x3f, r0	; 63
begin():
C:\Users\LENOVO\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/HardwareSerial.cpp:121

void HardwareSerial::begin(unsigned long baud, byte config)
{
  // Try u2x mode first
  uint16_t baud_setting = (F_CPU / 4 / baud - 1) / 2;
  *_ucsra = 1 << U2X0;
    1c36:	e0 91 4e 02 	lds	r30, 0x024E	; 0x80024e <Serial+0x10>
    1c3a:	f0 91 4f 02 	lds	r31, 0x024F	; 0x80024f <Serial+0x11>
    1c3e:	90 83       	st	Z, r25
C:\Users\LENOVO\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/HardwareSerial.cpp:135
    *_ucsra = 0;
    baud_setting = (F_CPU / 8 / baud - 1) / 2;
  }

  // assign the baud_setting, a.k.a. ubrr (USART Baud Rate Register)
  *_ubrrh = baud_setting >> 8;
    1c40:	e0 91 4a 02 	lds	r30, 0x024A	; 0x80024a <Serial+0xc>
    1c44:	f0 91 4b 02 	lds	r31, 0x024B	; 0x80024b <Serial+0xd>
    1c48:	10 82       	st	Z, r1
C:\Users\LENOVO\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/HardwareSerial.cpp:136
  *_ubrrl = baud_setting;
    1c4a:	e0 91 4c 02 	lds	r30, 0x024C	; 0x80024c <Serial+0xe>
    1c4e:	f0 91 4d 02 	lds	r31, 0x024D	; 0x80024d <Serial+0xf>
    1c52:	87 e6       	ldi	r24, 0x67	; 103
    1c54:	80 83       	st	Z, r24
C:\Users\LENOVO\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/HardwareSerial.cpp:138

  _written = false;
    1c56:	10 92 56 02 	sts	0x0256, r1	; 0x800256 <Serial+0x18>
C:\Users\LENOVO\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/HardwareSerial.cpp:146
#if defined(__AVR_ATmega8__) || defined(__AVR_ATmega8515__) || defined(__AVR_ATmega162__) \
|| defined(__AVR_ATmega8535__) || defined(__AVR_ATmega16__)|| defined(__AVR_ATmega32__)   \
|| defined(__AVR_ATmega162__)
  config |= 0x80; // select UCSRC register (shared with UBRRH)
#endif
  *_ucsrc = config;
    1c5a:	e0 91 52 02 	lds	r30, 0x0252	; 0x800252 <Serial+0x14>
    1c5e:	f0 91 53 02 	lds	r31, 0x0253	; 0x800253 <Serial+0x15>
    1c62:	86 e8       	ldi	r24, 0x86	; 134
    1c64:	80 83       	st	Z, r24
C:\Users\LENOVO\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/HardwareSerial.cpp:148
  
  *_ucsrb |= _BV(RXEN0) | _BV(TXEN0) | _BV(RXCIE0);
    1c66:	e0 91 50 02 	lds	r30, 0x0250	; 0x800250 <Serial+0x12>
    1c6a:	f0 91 51 02 	lds	r31, 0x0251	; 0x800251 <Serial+0x13>
    1c6e:	80 81       	ld	r24, Z
    1c70:	88 69       	ori	r24, 0x98	; 152
    1c72:	80 83       	st	Z, r24
C:\Users\LENOVO\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/HardwareSerial.cpp:149
  *_ucsrb &= ~_BV(UDRIE0);
    1c74:	e0 91 50 02 	lds	r30, 0x0250	; 0x800250 <Serial+0x12>
    1c78:	f0 91 51 02 	lds	r31, 0x0251	; 0x800251 <Serial+0x13>
    1c7c:	80 81       	ld	r24, Z
    1c7e:	8f 7d       	andi	r24, 0xDF	; 223
    1c80:	80 83       	st	Z, r24
setup():
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/main.ino:7
#include "elena_function.h"

void setup() {
  wdt_disable();
  Serial.begin(19200);
  delay(500);
    1c82:	64 ef       	ldi	r22, 0xF4	; 244
    1c84:	71 e0       	ldi	r23, 0x01	; 1
    1c86:	80 e0       	ldi	r24, 0x00	; 0
    1c88:	90 e0       	ldi	r25, 0x00	; 0
    1c8a:	0e 94 c9 08 	call	0x1192	; 0x1192 <delay>
showIntro():
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/main.ino:29
  }
  Serial.print(F("> "));
}

void showIntro() {
Serial.println(F("                                                    "));
    1c8e:	83 e4       	ldi	r24, 0x43	; 67
    1c90:	96 e0       	ldi	r25, 0x06	; 6
    1c92:	0e 94 8e 0a 	call	0x151c	; 0x151c <Print::println(__FlashStringHelper const*) [clone .constprop.25]>
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/main.ino:30
Serial.println(F("==================================================  "));
    1c96:	8e e0       	ldi	r24, 0x0E	; 14
    1c98:	96 e0       	ldi	r25, 0x06	; 6
    1c9a:	0e 94 8e 0a 	call	0x151c	; 0x151c <Print::println(__FlashStringHelper const*) [clone .constprop.25]>
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/main.ino:31
Serial.println(F("                                                    "));
    1c9e:	89 ed       	ldi	r24, 0xD9	; 217
    1ca0:	95 e0       	ldi	r25, 0x05	; 5
    1ca2:	0e 94 8e 0a 	call	0x151c	; 0x151c <Print::println(__FlashStringHelper const*) [clone .constprop.25]>
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/main.ino:32
Serial.println(F(" /$$$$$$$$ /$$       /$$$$$$$$ /$$   /$$  /$$$$$$   "));
    1ca6:	84 ea       	ldi	r24, 0xA4	; 164
    1ca8:	95 e0       	ldi	r25, 0x05	; 5
    1caa:	0e 94 8e 0a 	call	0x151c	; 0x151c <Print::println(__FlashStringHelper const*) [clone .constprop.25]>
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/main.ino:33
Serial.println(F("| $$_____/| $$      | $$_____/| $$$ | $$ /$$__  $$  "));
    1cae:	8f e6       	ldi	r24, 0x6F	; 111
    1cb0:	95 e0       	ldi	r25, 0x05	; 5
    1cb2:	0e 94 8e 0a 	call	0x151c	; 0x151c <Print::println(__FlashStringHelper const*) [clone .constprop.25]>
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/main.ino:34
Serial.println(F("| $$      | $$      | $$      | $$$$| $$| $$  \ $$  "));
    1cb6:	8b e3       	ldi	r24, 0x3B	; 59
    1cb8:	95 e0       	ldi	r25, 0x05	; 5
    1cba:	0e 94 8e 0a 	call	0x151c	; 0x151c <Print::println(__FlashStringHelper const*) [clone .constprop.25]>
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/main.ino:35
Serial.println(F("| $$$$$   | $$      | $$$$$   | $$ $$ $$| $$$$$$$$  "));
    1cbe:	86 e0       	ldi	r24, 0x06	; 6
    1cc0:	95 e0       	ldi	r25, 0x05	; 5
    1cc2:	0e 94 8e 0a 	call	0x151c	; 0x151c <Print::println(__FlashStringHelper const*) [clone .constprop.25]>
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/main.ino:36
Serial.println(F("| $$__/   | $$      | $$__/   | $$  $$$$| $$__  $$  "));
    1cc6:	81 ed       	ldi	r24, 0xD1	; 209
    1cc8:	94 e0       	ldi	r25, 0x04	; 4
    1cca:	0e 94 8e 0a 	call	0x151c	; 0x151c <Print::println(__FlashStringHelper const*) [clone .constprop.25]>
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/main.ino:37
Serial.println(F("| $$      | $$      | $$      | $$\  $$$| $$  | $$  "));
    1cce:	8d e9       	ldi	r24, 0x9D	; 157
    1cd0:	94 e0       	ldi	r25, 0x04	; 4
    1cd2:	0e 94 8e 0a 	call	0x151c	; 0x151c <Print::println(__FlashStringHelper const*) [clone .constprop.25]>
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/main.ino:38
Serial.println(F("| $$$$$$$$| $$$$$$$$| $$$$$$$$| $$ \  $$| $$  | $$  "));
    1cd6:	89 e6       	ldi	r24, 0x69	; 105
    1cd8:	94 e0       	ldi	r25, 0x04	; 4
    1cda:	0e 94 8e 0a 	call	0x151c	; 0x151c <Print::println(__FlashStringHelper const*) [clone .constprop.25]>
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/main.ino:39
Serial.println(F("|________/|________/|________/|__/  \__/|__/  |__/  "));
    1cde:	85 e3       	ldi	r24, 0x35	; 53
    1ce0:	94 e0       	ldi	r25, 0x04	; 4
    1ce2:	0e 94 8e 0a 	call	0x151c	; 0x151c <Print::println(__FlashStringHelper const*) [clone .constprop.25]>
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/main.ino:40
Serial.println(F("                                                    "));
    1ce6:	80 e0       	ldi	r24, 0x00	; 0
    1ce8:	94 e0       	ldi	r25, 0x04	; 4
    1cea:	0e 94 8e 0a 	call	0x151c	; 0x151c <Print::println(__FlashStringHelper const*) [clone .constprop.25]>
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/main.ino:41
Serial.println(F("                 ELENA CLI OS v1.0                  "));
    1cee:	8b ec       	ldi	r24, 0xCB	; 203
    1cf0:	93 e0       	ldi	r25, 0x03	; 3
    1cf2:	0e 94 8e 0a 	call	0x151c	; 0x151c <Print::println(__FlashStringHelper const*) [clone .constprop.25]>
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/main.ino:42
Serial.println(F("                Build: 12 June 2025                 "));
    1cf6:	86 e9       	ldi	r24, 0x96	; 150
    1cf8:	93 e0       	ldi	r25, 0x03	; 3
    1cfa:	0e 94 8e 0a 	call	0x151c	; 0x151c <Print::println(__FlashStringHelper const*) [clone .constprop.25]>
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/main.ino:43
Serial.println(F("               by Externalize System                "));
    1cfe:	81 e6       	ldi	r24, 0x61	; 97
    1d00:	93 e0       	ldi	r25, 0x03	; 3
    1d02:	0e 94 8e 0a 	call	0x151c	; 0x151c <Print::println(__FlashStringHelper const*) [clone .constprop.25]>
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/main.ino:44
Serial.println(F("                                                    "));
    1d06:	8c e2       	ldi	r24, 0x2C	; 44
    1d08:	93 e0       	ldi	r25, 0x03	; 3
    1d0a:	0e 94 8e 0a 	call	0x151c	; 0x151c <Print::println(__FlashStringHelper const*) [clone .constprop.25]>
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/main.ino:45
Serial.println(F("==================================================  "));
    1d0e:	87 ef       	ldi	r24, 0xF7	; 247
    1d10:	92 e0       	ldi	r25, 0x02	; 2
    1d12:	0e 94 8e 0a 	call	0x151c	; 0x151c <Print::println(__FlashStringHelper const*) [clone .constprop.25]>
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/main.ino:46
Serial.println(F("                                                    "));
    1d16:	82 ec       	ldi	r24, 0xC2	; 194
    1d18:	92 e0       	ldi	r25, 0x02	; 2
    1d1a:	0e 94 8e 0a 	call	0x151c	; 0x151c <Print::println(__FlashStringHelper const*) [clone .constprop.25]>
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/main.ino:47
Serial.println(F("[i] Type 'help' to see available commands.          "));
    1d1e:	8d e8       	ldi	r24, 0x8D	; 141
    1d20:	92 e0       	ldi	r25, 0x02	; 2
    1d22:	0e 94 8e 0a 	call	0x151c	; 0x151c <Print::println(__FlashStringHelper const*) [clone .constprop.25]>
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/main.ino:48
Serial.println(F("                                                    "));
    1d26:	88 e5       	ldi	r24, 0x58	; 88
    1d28:	92 e0       	ldi	r25, 0x02	; 2
    1d2a:	0e 94 8e 0a 	call	0x151c	; 0x151c <Print::println(__FlashStringHelper const*) [clone .constprop.25]>
cmd_gpioRead():
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_function.h:393

    char portChar;
    int pinNum;

    // Baca satu pin: gpio pa2
    if (sscanf(input, "gpio p%c%d", &portChar, &pinNum) == 2) {
    1d2e:	8e 01       	movw	r16, r28
    1d30:	0d 5b       	subi	r16, 0xBD	; 189
    1d32:	1f 4f       	sbci	r17, 0xFF	; 255
printPrompt():
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/main.ino:20
  delay(100);
  handleCommand(inputs);
}

void printPrompt() {
  if (loggedIn) {
    1d34:	80 91 34 02 	lds	r24, 0x0234	; 0x800234 <loggedIn>
    1d38:	88 23       	and	r24, r24
    1d3a:	09 f4       	brne	.+2      	; 0x1d3e <main+0x164>
    1d3c:	70 c0       	rjmp	.+224    	; 0x1e1e <main+0x244>
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/main.ino:21
    Serial.print(usernow);
    1d3e:	8b ed       	ldi	r24, 0xDB	; 219
    1d40:	92 e0       	ldi	r25, 0x02	; 2
    1d42:	0e 94 28 09 	call	0x1250	; 0x1250 <Print::print(String const&) [clone .constprop.15]>
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/main.ino:25
  } else {
    Serial.print(F("guest"));
  }
  Serial.print(F("> "));
    1d46:	88 e7       	ldi	r24, 0x78	; 120
    1d48:	96 e0       	ldi	r25, 0x06	; 6
    1d4a:	0e 94 ef 09 	call	0x13de	; 0x13de <Print::print(__FlashStringHelper const*) [clone .constprop.26]>
_ZN6String4initEv():
C:\Users\LENOVO\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/WString.cpp:134
/*  Memory Management                        */
/*********************************************/

inline void String::init(void)
{
  buffer = NULL;
    1d4e:	1e ae       	std	Y+62, r1	; 0x3e
    1d50:	1d ae       	std	Y+61, r1	; 0x3d
C:\Users\LENOVO\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/WString.cpp:135
  capacity = 0;
    1d52:	21 96       	adiw	r28, 0x01	; 1
    1d54:	1f ae       	std	Y+63, r1	; 0x3f
    1d56:	1e ae       	std	Y+62, r1	; 0x3e
    1d58:	21 97       	sbiw	r28, 0x01	; 1
C:\Users\LENOVO\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/WString.cpp:136
  len = 0;
    1d5a:	23 96       	adiw	r28, 0x03	; 3
    1d5c:	1f ae       	std	Y+63, r1	; 0x3f
    1d5e:	1e ae       	std	Y+62, r1	; 0x3e
    1d60:	23 97       	sbiw	r28, 0x03	; 3
__base_ctor ():
C:\Users\LENOVO\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/WString.cpp:31
/*********************************************/

String::String(const char *cstr)
{
  init();
  if (cstr) copy(cstr, strlen(cstr));
    1d62:	50 e0       	ldi	r21, 0x00	; 0
    1d64:	40 e0       	ldi	r20, 0x00	; 0
    1d66:	6a e7       	ldi	r22, 0x7A	; 122
    1d68:	70 e0       	ldi	r23, 0x00	; 0
    1d6a:	ce 01       	movw	r24, r28
    1d6c:	cd 96       	adiw	r24, 0x3d	; 61
    1d6e:	0e 94 1c 0c 	call	0x1838	; 0x1838 <String::copy(char const*, unsigned int)>
readSerialLine():
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_function.h:18

// ===== Serial Input Function =====
String readSerialLine() {
  String input = "";
  while (true) {
    if (Serial.available()) {
    1d72:	8e e3       	ldi	r24, 0x3E	; 62
    1d74:	92 e0       	ldi	r25, 0x02	; 2
    1d76:	0e 94 62 09 	call	0x12c4	; 0x12c4 <HardwareSerial::available()>
    1d7a:	89 2b       	or	r24, r25
    1d7c:	d1 f3       	breq	.-12     	; 0x1d72 <main+0x198>
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_function.h:19
      char ch = Serial.read();
    1d7e:	8e e3       	ldi	r24, 0x3E	; 62
    1d80:	92 e0       	ldi	r25, 0x02	; 2
    1d82:	0e 94 40 09 	call	0x1280	; 0x1280 <HardwareSerial::read()>
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_function.h:20
      if (ch == '\n' || ch == '\r') {
    1d86:	8a 30       	cpi	r24, 0x0A	; 10
    1d88:	19 f0       	breq	.+6      	; 0x1d90 <main+0x1b6>
    1d8a:	8d 30       	cpi	r24, 0x0D	; 13
    1d8c:	09 f0       	breq	.+2      	; 0x1d90 <main+0x1b6>
    1d8e:	4c c0       	rjmp	.+152    	; 0x1e28 <main+0x24e>
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_function.h:21
        if (input.length() > 0) break; // End input on Enter
    1d90:	23 96       	adiw	r28, 0x03	; 3
    1d92:	8e ad       	ldd	r24, Y+62	; 0x3e
    1d94:	9f ad       	ldd	r25, Y+63	; 0x3f
    1d96:	23 97       	sbiw	r28, 0x03	; 3
    1d98:	89 2b       	or	r24, r25
    1d9a:	59 f3       	breq	.-42     	; 0x1d72 <main+0x198>
loop():
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/main.ino:14
}

void loop() {
  printPrompt();
  String inputs = readSerialLine();
  Serial.print(inputs); Serial.println("");
    1d9c:	ce 01       	movw	r24, r28
    1d9e:	cd 96       	adiw	r24, 0x3d	; 61
    1da0:	0e 94 28 09 	call	0x1250	; 0x1250 <Print::print(String const&) [clone .constprop.15]>
    1da4:	8a e7       	ldi	r24, 0x7A	; 122
    1da6:	90 e0       	ldi	r25, 0x00	; 0
    1da8:	0e 94 80 0a 	call	0x1500	; 0x1500 <Print::println(char const*) [clone .constprop.27]>
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/main.ino:15
  delay(100);
    1dac:	64 e6       	ldi	r22, 0x64	; 100
    1dae:	70 e0       	ldi	r23, 0x00	; 0
    1db0:	80 e0       	ldi	r24, 0x00	; 0
    1db2:	90 e0       	ldi	r25, 0x00	; 0
    1db4:	0e 94 c9 08 	call	0x1192	; 0x1192 <delay>
_ZN6String4initEv():
C:\Users\LENOVO\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/WString.cpp:134
/*  Memory Management                        */
/*********************************************/

inline void String::init(void)
{
  buffer = NULL;
    1db8:	18 ae       	std	Y+56, r1	; 0x38
    1dba:	1f aa       	std	Y+55, r1	; 0x37
C:\Users\LENOVO\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/WString.cpp:135
  capacity = 0;
    1dbc:	1a ae       	std	Y+58, r1	; 0x3a
    1dbe:	19 ae       	std	Y+57, r1	; 0x39
C:\Users\LENOVO\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/WString.cpp:136
  len = 0;
    1dc0:	1c ae       	std	Y+60, r1	; 0x3c
    1dc2:	1b ae       	std	Y+59, r1	; 0x3b
operator=():
C:\Users\LENOVO\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/WString.cpp:219

String & String::operator = (const String &rhs)
{
  if (this == &rhs) return *this;
  
  if (rhs.buffer) copy(rhs.buffer, rhs.len);
    1dc4:	6d ad       	ldd	r22, Y+61	; 0x3d
    1dc6:	7e ad       	ldd	r23, Y+62	; 0x3e
    1dc8:	61 15       	cp	r22, r1
    1dca:	71 05       	cpc	r23, r1
    1dcc:	41 f0       	breq	.+16     	; 0x1dde <main+0x204>
    1dce:	23 96       	adiw	r28, 0x03	; 3
    1dd0:	4e ad       	ldd	r20, Y+62	; 0x3e
    1dd2:	5f ad       	ldd	r21, Y+63	; 0x3f
    1dd4:	23 97       	sbiw	r28, 0x03	; 3
    1dd6:	ce 01       	movw	r24, r28
    1dd8:	c7 96       	adiw	r24, 0x37	; 55
    1dda:	0e 94 1c 0c 	call	0x1838	; 0x1838 <String::copy(char const*, unsigned int)>
trim():
C:\Users\LENOVO\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/WString.cpp:722
  }
}

void String::trim(void)
{
  if (!buffer || len == 0) return;
    1dde:	af a8       	ldd	r10, Y+55	; 0x37
    1de0:	b8 ac       	ldd	r11, Y+56	; 0x38
    1de2:	a1 14       	cp	r10, r1
    1de4:	b1 04       	cpc	r11, r1
    1de6:	31 f0       	breq	.+12     	; 0x1df4 <main+0x21a>
    1de8:	eb ac       	ldd	r14, Y+59	; 0x3b
    1dea:	fc ac       	ldd	r15, Y+60	; 0x3c
    1dec:	65 01       	movw	r12, r10
    1dee:	e1 14       	cp	r14, r1
    1df0:	f1 04       	cpc	r15, r1
    1df2:	f1 f5       	brne	.+124    	; 0x1e70 <main+0x296>
toLowerCase():
C:\Users\LENOVO\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/WString.cpp:706
  buffer[len] = 0;
}

void String::toLowerCase(void)
{
  if (!buffer) return;
    1df4:	ef a8       	ldd	r14, Y+55	; 0x37
    1df6:	f8 ac       	ldd	r15, Y+56	; 0x38
    1df8:	e1 14       	cp	r14, r1
    1dfa:	f1 04       	cpc	r15, r1
    1dfc:	09 f4       	brne	.+2      	; 0x1e00 <main+0x226>
    1dfe:	70 c0       	rjmp	.+224    	; 0x1ee0 <main+0x306>
C:\Users\LENOVO\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/WString.cpp:707
  for (char *p = buffer; *p; p++) {
    1e00:	d7 01       	movw	r26, r14
    1e02:	8d 91       	ld	r24, X+
    1e04:	7d 01       	movw	r14, r26
    1e06:	88 23       	and	r24, r24
    1e08:	09 f4       	brne	.+2      	; 0x1e0c <main+0x232>
    1e0a:	6a c0       	rjmp	.+212    	; 0x1ee0 <main+0x306>
C:\Users\LENOVO\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/WString.cpp:708
    *p = tolower(*p);
    1e0c:	08 2e       	mov	r0, r24
    1e0e:	00 0c       	add	r0, r0
    1e10:	99 0b       	sbc	r25, r25
    1e12:	0e 94 c4 1f 	call	0x3f88	; 0x3f88 <tolower>
    1e16:	f7 01       	movw	r30, r14
    1e18:	31 97       	sbiw	r30, 0x01	; 1
    1e1a:	80 83       	st	Z, r24
    1e1c:	f1 cf       	rjmp	.-30     	; 0x1e00 <main+0x226>
printPrompt():
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/main.ino:23

void printPrompt() {
  if (loggedIn) {
    Serial.print(usernow);
  } else {
    Serial.print(F("guest"));
    1e1e:	8b e7       	ldi	r24, 0x7B	; 123
    1e20:	96 e0       	ldi	r25, 0x06	; 6
    1e22:	0e 94 ef 09 	call	0x13de	; 0x13de <Print::print(__FlashStringHelper const*) [clone .constprop.26]>
    1e26:	8f cf       	rjmp	.-226    	; 0x1d46 <main+0x16c>
    1e28:	23 96       	adiw	r28, 0x03	; 3
    1e2a:	ee ac       	ldd	r14, Y+62	; 0x3e
    1e2c:	ff ac       	ldd	r15, Y+63	; 0x3f
    1e2e:	23 97       	sbiw	r28, 0x03	; 3
concat():
C:\Users\LENOVO\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/WString.cpp:284
}

unsigned char String::concat(char c)
{
  char buf[2];
  buf[0] = c;
    1e30:	89 83       	std	Y+1, r24	; 0x01
C:\Users\LENOVO\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/WString.cpp:285
  buf[1] = 0;
    1e32:	1a 82       	std	Y+2, r1	; 0x02
C:\Users\LENOVO\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/WString.cpp:266
  return concat(s.buffer, s.len);
}

unsigned char String::concat(const char *cstr, unsigned int length)
{
  unsigned int newlen = len + length;
    1e34:	2f ef       	ldi	r18, 0xFF	; 255
    1e36:	e2 1a       	sub	r14, r18
    1e38:	f2 0a       	sbc	r15, r18
C:\Users\LENOVO\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/WString.cpp:269
  if (!cstr) return 0;
  if (length == 0) return 1;
  if (!reserve(newlen)) return 0;
    1e3a:	b7 01       	movw	r22, r14
    1e3c:	ce 01       	movw	r24, r28
    1e3e:	cd 96       	adiw	r24, 0x3d	; 61
    1e40:	0e 94 f4 0b 	call	0x17e8	; 0x17e8 <String::reserve(unsigned int)>
    1e44:	88 23       	and	r24, r24
    1e46:	09 f4       	brne	.+2      	; 0x1e4a <main+0x270>
    1e48:	94 cf       	rjmp	.-216    	; 0x1d72 <main+0x198>
C:\Users\LENOVO\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/WString.cpp:270
  strcpy(buffer + len, cstr);
    1e4a:	2d ad       	ldd	r18, Y+61	; 0x3d
    1e4c:	3e ad       	ldd	r19, Y+62	; 0x3e
    1e4e:	23 96       	adiw	r28, 0x03	; 3
    1e50:	8e ad       	ldd	r24, Y+62	; 0x3e
    1e52:	9f ad       	ldd	r25, Y+63	; 0x3f
    1e54:	23 97       	sbiw	r28, 0x03	; 3
    1e56:	be 01       	movw	r22, r28
    1e58:	6f 5f       	subi	r22, 0xFF	; 255
    1e5a:	7f 4f       	sbci	r23, 0xFF	; 255
    1e5c:	82 0f       	add	r24, r18
    1e5e:	93 1f       	adc	r25, r19
    1e60:	0e 94 e6 1f 	call	0x3fcc	; 0x3fcc <strcpy>
C:\Users\LENOVO\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/WString.cpp:271
  len = newlen;
    1e64:	23 96       	adiw	r28, 0x03	; 3
    1e66:	ff ae       	std	Y+63, r15	; 0x3f
    1e68:	ee ae       	std	Y+62, r14	; 0x3e
    1e6a:	23 97       	sbiw	r28, 0x03	; 3
    1e6c:	82 cf       	rjmp	.-252    	; 0x1d72 <main+0x198>
trim():
C:\Users\LENOVO\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/WString.cpp:724

void String::trim(void)
{
  if (!buffer || len == 0) return;
  char *begin = buffer;
  while (isspace(*begin)) begin++;
    1e6e:	64 01       	movw	r12, r8
    1e70:	46 01       	movw	r8, r12
    1e72:	3f ef       	ldi	r19, 0xFF	; 255
    1e74:	83 1a       	sub	r8, r19
    1e76:	93 0a       	sbc	r9, r19
    1e78:	d6 01       	movw	r26, r12
    1e7a:	8c 91       	ld	r24, X
    1e7c:	08 2e       	mov	r0, r24
    1e7e:	00 0c       	add	r0, r0
    1e80:	99 0b       	sbc	r25, r25
    1e82:	0e 94 b5 17 	call	0x2f6a	; 0x2f6a <isspace>
    1e86:	89 2b       	or	r24, r25
    1e88:	91 f7       	brne	.-28     	; 0x1e6e <main+0x294>
C:\Users\LENOVO\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/WString.cpp:725
  char *end = buffer + len - 1;
    1e8a:	b1 e0       	ldi	r27, 0x01	; 1
    1e8c:	eb 1a       	sub	r14, r27
    1e8e:	f1 08       	sbc	r15, r1
    1e90:	ea 0c       	add	r14, r10
    1e92:	fb 1c       	adc	r15, r11
C:\Users\LENOVO\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/WString.cpp:726
  while (isspace(*end) && end >= begin) end--;
    1e94:	f7 01       	movw	r30, r14
    1e96:	80 81       	ld	r24, Z
    1e98:	08 2e       	mov	r0, r24
    1e9a:	00 0c       	add	r0, r0
    1e9c:	99 0b       	sbc	r25, r25
    1e9e:	0e 94 b5 17 	call	0x2f6a	; 0x2f6a <isspace>
    1ea2:	89 2b       	or	r24, r25
    1ea4:	39 f0       	breq	.+14     	; 0x1eb4 <main+0x2da>
    1ea6:	ec 14       	cp	r14, r12
    1ea8:	fd 04       	cpc	r15, r13
    1eaa:	20 f0       	brcs	.+8      	; 0x1eb4 <main+0x2da>
    1eac:	f1 e0       	ldi	r31, 0x01	; 1
    1eae:	ef 1a       	sub	r14, r31
    1eb0:	f1 08       	sbc	r15, r1
    1eb2:	f0 cf       	rjmp	.-32     	; 0x1e94 <main+0x2ba>
C:\Users\LENOVO\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/WString.cpp:727
  len = end + 1 - begin;
    1eb4:	a7 01       	movw	r20, r14
    1eb6:	4f 5f       	subi	r20, 0xFF	; 255
    1eb8:	5f 4f       	sbci	r21, 0xFF	; 255
    1eba:	4c 19       	sub	r20, r12
    1ebc:	5d 09       	sbc	r21, r13
    1ebe:	5c af       	std	Y+60, r21	; 0x3c
    1ec0:	4b af       	std	Y+59, r20	; 0x3b
C:\Users\LENOVO\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/WString.cpp:728
  if (begin > buffer) memcpy(buffer, begin, len);
    1ec2:	ac 14       	cp	r10, r12
    1ec4:	bd 04       	cpc	r11, r13
    1ec6:	20 f4       	brcc	.+8      	; 0x1ed0 <main+0x2f6>
    1ec8:	b6 01       	movw	r22, r12
    1eca:	c5 01       	movw	r24, r10
    1ecc:	0e 94 d4 1f 	call	0x3fa8	; 0x3fa8 <memcpy>
C:\Users\LENOVO\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/WString.cpp:729
  buffer[len] = 0;
    1ed0:	ef a9       	ldd	r30, Y+55	; 0x37
    1ed2:	f8 ad       	ldd	r31, Y+56	; 0x38
    1ed4:	8b ad       	ldd	r24, Y+59	; 0x3b
    1ed6:	9c ad       	ldd	r25, Y+60	; 0x3c
    1ed8:	e8 0f       	add	r30, r24
    1eda:	f9 1f       	adc	r31, r25
    1edc:	10 82       	st	Z, r1
    1ede:	8a cf       	rjmp	.-236    	; 0x1df4 <main+0x21a>
_ZNK6StringeqEPKc():
C:\Users\LENOVO\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/WString.h:143
  operator StringIfHelperType() const { return buffer ? &String::StringIfHelper : 0; }
  int compareTo(const String &s) const;
  unsigned char equals(const String &s) const;
  unsigned char equals(const char *cstr) const;
  unsigned char operator == (const String &rhs) const {return equals(rhs);}
  unsigned char operator == (const char *cstr) const {return equals(cstr);}
    1ee0:	61 ef       	ldi	r22, 0xF1	; 241
    1ee2:	70 e0       	ldi	r23, 0x00	; 0
    1ee4:	ce 01       	movw	r24, r28
    1ee6:	c7 96       	adiw	r24, 0x37	; 55
    1ee8:	0e 94 41 0b 	call	0x1682	; 0x1682 <String::equals(char const*) const>
handleCommand():
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_function.h:485
// ===== Command Dispatcher =====
void handleCommand(String command) {
  command.trim();
  command.toLowerCase();

  if (command == "elena" || command == "hello" || command == "hi"){ //Easter egg 
    1eec:	81 11       	cpse	r24, r1
    1eee:	10 c0       	rjmp	.+32     	; 0x1f10 <main+0x336>
_ZNK6StringeqEPKc():
C:\Users\LENOVO\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/WString.h:143
    1ef0:	67 ef       	ldi	r22, 0xF7	; 247
    1ef2:	70 e0       	ldi	r23, 0x00	; 0
    1ef4:	ce 01       	movw	r24, r28
    1ef6:	c7 96       	adiw	r24, 0x37	; 55
    1ef8:	0e 94 41 0b 	call	0x1682	; 0x1682 <String::equals(char const*) const>
handleCommand():
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_function.h:485
    1efc:	81 11       	cpse	r24, r1
    1efe:	08 c0       	rjmp	.+16     	; 0x1f10 <main+0x336>
_ZNK6StringeqEPKc():
C:\Users\LENOVO\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/WString.h:143
    1f00:	6d ef       	ldi	r22, 0xFD	; 253
    1f02:	70 e0       	ldi	r23, 0x00	; 0
    1f04:	ce 01       	movw	r24, r28
    1f06:	c7 96       	adiw	r24, 0x37	; 55
    1f08:	0e 94 41 0b 	call	0x1682	; 0x1682 <String::equals(char const*) const>
handleCommand():
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_function.h:485
    1f0c:	88 23       	and	r24, r24
    1f0e:	29 f0       	breq	.+10     	; 0x1f1a <main+0x340>
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_function.h:486
    Serial.println(F("ELENA> Hi, are you called me? you can type 'help' to see my commands!"));
    1f10:	89 e8       	ldi	r24, 0x89	; 137
    1f12:	90 e1       	ldi	r25, 0x10	; 16
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_function.h:518
  } else if ( command == "eeprom-wipe"){
    cmd_eeprom_wipe();
  } else {
    Serial.print(F("[X] Unknown command with '"));
    Serial.print(command);
    Serial.println(F("'. Try 'help' to see all commands."));
    1f14:	0e 94 8e 0a 	call	0x151c	; 0x151c <Print::println(__FlashStringHelper const*) [clone .constprop.25]>
    1f18:	64 c0       	rjmp	.+200    	; 0x1fe2 <main+0x408>
_ZNK6StringeqEPKc():
C:\Users\LENOVO\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/WString.h:143
    1f1a:	62 e0       	ldi	r22, 0x02	; 2
    1f1c:	71 e0       	ldi	r23, 0x01	; 1
    1f1e:	ce 01       	movw	r24, r28
    1f20:	c7 96       	adiw	r24, 0x37	; 55
    1f22:	0e 94 41 0b 	call	0x1682	; 0x1682 <String::equals(char const*) const>
handleCommand():
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_function.h:487
  command.trim();
  command.toLowerCase();

  if (command == "elena" || command == "hello" || command == "hi"){ //Easter egg 
    Serial.println(F("ELENA> Hi, are you called me? you can type 'help' to see my commands!"));
  } else if (command == "help"){
    1f26:	88 23       	and	r24, r24
    1f28:	d9 f1       	breq	.+118    	; 0x1fa0 <main+0x3c6>
showHelp():
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_function.h:119
  return String(buffer);
}

// ===== Command Functions =====
void showHelp() {
  Serial.println(F("[i] Available Commands:"));
    1f2a:	84 e0       	ldi	r24, 0x04	; 4
    1f2c:	99 e0       	ldi	r25, 0x09	; 9
    1f2e:	0e 94 8e 0a 	call	0x151c	; 0x151c <Print::println(__FlashStringHelper const*) [clone .constprop.25]>
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_function.h:120
  Serial.println(F(" ┌────────────────────┐"));
    1f32:	80 ec       	ldi	r24, 0xC0	; 192
    1f34:	98 e0       	ldi	r25, 0x08	; 8
    1f36:	0e 94 8e 0a 	call	0x151c	; 0x151c <Print::println(__FlashStringHelper const*) [clone .constprop.25]>
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_function.h:121
  Serial.println(F(" │ help         → Show all commands"));
    1f3a:	88 e9       	ldi	r24, 0x98	; 152
    1f3c:	98 e0       	ldi	r25, 0x08	; 8
    1f3e:	0e 94 8e 0a 	call	0x151c	; 0x151c <Print::println(__FlashStringHelper const*) [clone .constprop.25]>
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_function.h:122
  Serial.println(F(" │ login        → Login with your username"));
    1f42:	89 e6       	ldi	r24, 0x69	; 105
    1f44:	98 e0       	ldi	r25, 0x08	; 8
    1f46:	0e 94 8e 0a 	call	0x151c	; 0x151c <Print::println(__FlashStringHelper const*) [clone .constprop.25]>
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_function.h:123
  Serial.println(F(" │ logout       → Logout from your acoount"));
    1f4a:	8a e3       	ldi	r24, 0x3A	; 58
    1f4c:	98 e0       	ldi	r25, 0x08	; 8
    1f4e:	0e 94 8e 0a 	call	0x151c	; 0x151c <Print::println(__FlashStringHelper const*) [clone .constprop.25]>
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_function.h:124
  Serial.println(F(" │ stat         → Show system & hardware status"));
    1f52:	86 e0       	ldi	r24, 0x06	; 6
    1f54:	98 e0       	ldi	r25, 0x08	; 8
    1f56:	0e 94 8e 0a 	call	0x151c	; 0x151c <Print::println(__FlashStringHelper const*) [clone .constprop.25]>
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_function.h:125
  Serial.println(F(" │ rns-acc      → Remove & set new account"));
    1f5a:	87 ed       	ldi	r24, 0xD7	; 215
    1f5c:	97 e0       	ldi	r25, 0x07	; 7
    1f5e:	0e 94 8e 0a 	call	0x151c	; 0x151c <Print::println(__FlashStringHelper const*) [clone .constprop.25]>
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_function.h:126
  Serial.println(F(" │ reboot       → Reboot the system"));
    1f62:	8f ea       	ldi	r24, 0xAF	; 175
    1f64:	97 e0       	ldi	r25, 0x07	; 7
    1f66:	0e 94 8e 0a 	call	0x151c	; 0x151c <Print::println(__FlashStringHelper const*) [clone .constprop.25]>
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_function.h:127
  Serial.println(F(" │ whoami       → Display logged in user"));
    1f6a:	82 e8       	ldi	r24, 0x82	; 130
    1f6c:	97 e0       	ldi	r25, 0x07	; 7
    1f6e:	0e 94 8e 0a 	call	0x151c	; 0x151c <Print::println(__FlashStringHelper const*) [clone .constprop.25]>
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_function.h:128
  Serial.println(F(" │ time(!)      → Display current time"));
    1f72:	87 e5       	ldi	r24, 0x57	; 87
    1f74:	97 e0       	ldi	r25, 0x07	; 7
    1f76:	0e 94 8e 0a 	call	0x151c	; 0x151c <Print::println(__FlashStringHelper const*) [clone .constprop.25]>
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_function.h:129
  Serial.println(F(" │ set-time(!)  → Setting time"));
    1f7a:	84 e3       	ldi	r24, 0x34	; 52
    1f7c:	97 e0       	ldi	r25, 0x07	; 7
    1f7e:	0e 94 8e 0a 	call	0x151c	; 0x151c <Print::println(__FlashStringHelper const*) [clone .constprop.25]>
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_function.h:130
  Serial.println(F(" │ calc         → Calculator"));
    1f82:	83 e1       	ldi	r24, 0x13	; 19
    1f84:	97 e0       	ldi	r25, 0x07	; 7
    1f86:	0e 94 8e 0a 	call	0x151c	; 0x151c <Print::println(__FlashStringHelper const*) [clone .constprop.25]>
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_function.h:131
  Serial.println(F(" │ gpio-write   → GPIO Write Output"));
    1f8a:	8b ee       	ldi	r24, 0xEB	; 235
    1f8c:	96 e0       	ldi	r25, 0x06	; 6
    1f8e:	0e 94 8e 0a 	call	0x151c	; 0x151c <Print::println(__FlashStringHelper const*) [clone .constprop.25]>
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_function.h:132
  Serial.println(F(" │ gpio-read    → GPIO Read Input"));
    1f92:	85 ec       	ldi	r24, 0xC5	; 197
    1f94:	96 e0       	ldi	r25, 0x06	; 6
    1f96:	0e 94 8e 0a 	call	0x151c	; 0x151c <Print::println(__FlashStringHelper const*) [clone .constprop.25]>
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_function.h:133
  Serial.println(F(" └────────────────────┘"));
    1f9a:	81 e8       	ldi	r24, 0x81	; 129
    1f9c:	96 e0       	ldi	r25, 0x06	; 6
    1f9e:	ba cf       	rjmp	.-140    	; 0x1f14 <main+0x33a>
_ZNK6StringeqEPKc():
C:\Users\LENOVO\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/WString.h:143
    1fa0:	60 e0       	ldi	r22, 0x00	; 0
    1fa2:	71 e0       	ldi	r23, 0x01	; 1
    1fa4:	ce 01       	movw	r24, r28
    1fa6:	c7 96       	adiw	r24, 0x37	; 55
    1fa8:	0e 94 41 0b 	call	0x1682	; 0x1682 <String::equals(char const*) const>
handleCommand():
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_function.h:489

  if (command == "elena" || command == "hello" || command == "hi"){ //Easter egg 
    Serial.println(F("ELENA> Hi, are you called me? you can type 'help' to see my commands!"));
  } else if (command == "help"){
    showHelp();
  } else if (command == "d-help"){
    1fac:	88 23       	and	r24, r24
    1fae:	79 f0       	breq	.+30     	; 0x1fce <main+0x3f4>
showDangerousHelp():
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_function.h:137
  Serial.println(F(" │ gpio-read    → GPIO Read Input"));
  Serial.println(F(" └────────────────────┘"));
}

void showDangerousHelp() {
  Serial.println(F("\n[i] Available Dangerous Commands:"));
    1fb0:	88 e2       	ldi	r24, 0x28	; 40
    1fb2:	90 e1       	ldi	r25, 0x10	; 16
    1fb4:	0e 94 8e 0a 	call	0x151c	; 0x151c <Print::println(__FlashStringHelper const*) [clone .constprop.25]>
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_function.h:138
  Serial.println(F(" ┌────────────────────┐"));
    1fb8:	84 ee       	ldi	r24, 0xE4	; 228
    1fba:	9f e0       	ldi	r25, 0x0F	; 15
    1fbc:	0e 94 8e 0a 	call	0x151c	; 0x151c <Print::println(__FlashStringHelper const*) [clone .constprop.25]>
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_function.h:139
  Serial.println(F(" │ eeprom-wipe  → Wipe all internal EEPROM data "));
    1fc0:	8f ea       	ldi	r24, 0xAF	; 175
    1fc2:	9f e0       	ldi	r25, 0x0F	; 15
    1fc4:	0e 94 8e 0a 	call	0x151c	; 0x151c <Print::println(__FlashStringHelper const*) [clone .constprop.25]>
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_function.h:140
  Serial.println(F(" └────────────────────┘"));
    1fc8:	8b e6       	ldi	r24, 0x6B	; 107
    1fca:	9f e0       	ldi	r25, 0x0F	; 15
    1fcc:	a3 cf       	rjmp	.-186    	; 0x1f14 <main+0x33a>
_ZNK6StringeqEPKc():
C:\Users\LENOVO\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/WString.h:143
    1fce:	67 e0       	ldi	r22, 0x07	; 7
    1fd0:	71 e0       	ldi	r23, 0x01	; 1
    1fd2:	ce 01       	movw	r24, r28
    1fd4:	c7 96       	adiw	r24, 0x37	; 55
    1fd6:	0e 94 41 0b 	call	0x1682	; 0x1682 <String::equals(char const*) const>
handleCommand():
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_function.h:491
    Serial.println(F("ELENA> Hi, are you called me? you can type 'help' to see my commands!"));
  } else if (command == "help"){
    showHelp();
  } else if (command == "d-help"){
    showDangerousHelp();
  } else if (command == "login"){
    1fda:	88 23       	and	r24, r24
    1fdc:	b9 f0       	breq	.+46     	; 0x200c <main+0x432>
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_function.h:492
    elenaUserStartup(); 
    1fde:	0e 94 47 0c 	call	0x188e	; 0x188e <elenaUserStartup()>
loop():
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/main.ino:16
void loop() {
  printPrompt();
  String inputs = readSerialLine();
  Serial.print(inputs); Serial.println("");
  delay(100);
  handleCommand(inputs);
    1fe2:	ce 01       	movw	r24, r28
    1fe4:	c7 96       	adiw	r24, 0x37	; 55
    1fe6:	0e 94 ec 0b 	call	0x17d8	; 0x17d8 <String::~String()>
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/main.ino:13
  showIntro();
}

void loop() {
  printPrompt();
  String inputs = readSerialLine();
    1fea:	ce 01       	movw	r24, r28
    1fec:	cd 96       	adiw	r24, 0x3d	; 61
    1fee:	0e 94 ec 0b 	call	0x17d8	; 0x17d8 <String::~String()>
serialEventRun():
C:\Users\LENOVO\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/HardwareSerial.cpp:67
#endif

void serialEventRun(void)
{
#if defined(HAVE_HWSERIAL0)
  if (Serial0_available && serialEvent && Serial0_available()) serialEvent();
    1ff2:	80 e0       	ldi	r24, 0x00	; 0
    1ff4:	90 e0       	ldi	r25, 0x00	; 0
    1ff6:	89 2b       	or	r24, r25
    1ff8:	09 f4       	brne	.+2      	; 0x1ffc <main+0x422>
    1ffa:	9c ce       	rjmp	.-712    	; 0x1d34 <main+0x15a>
    1ffc:	0e 94 6e 09 	call	0x12dc	; 0x12dc <Serial0_available()>
    2000:	88 23       	and	r24, r24
    2002:	09 f4       	brne	.+2      	; 0x2006 <main+0x42c>
    2004:	97 ce       	rjmp	.-722    	; 0x1d34 <main+0x15a>
    2006:	0e 94 00 00 	call	0	; 0x0 <__vectors>
    200a:	94 ce       	rjmp	.-728    	; 0x1d34 <main+0x15a>
_ZNK6StringeqEPKc():
C:\Users\LENOVO\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/WString.h:143
    200c:	6d e0       	ldi	r22, 0x0D	; 13
    200e:	71 e0       	ldi	r23, 0x01	; 1
    2010:	ce 01       	movw	r24, r28
    2012:	c7 96       	adiw	r24, 0x37	; 55
    2014:	0e 94 41 0b 	call	0x1682	; 0x1682 <String::equals(char const*) const>
handleCommand():
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_function.h:493
  } else if (command == "logout"){
    2018:	88 23       	and	r24, r24
    201a:	71 f0       	breq	.+28     	; 0x2038 <main+0x45e>
logout():
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_function.h:237
    loggedIn = false;
  }
}

void logout(){
  if (!loggedIn){
    201c:	80 91 34 02 	lds	r24, 0x0234	; 0x800234 <loggedIn>
    2020:	81 11       	cpse	r24, r1
    2022:	05 c0       	rjmp	.+10     	; 0x202e <main+0x454>
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_function.h:238
    Serial.println("[!] You already logging out! Execute failed");
    2024:	84 e1       	ldi	r24, 0x14	; 20
    2026:	91 e0       	ldi	r25, 0x01	; 1
cmd_whoami():
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_function.h:257

void cmd_whoami() {
  if (loggedIn){
    printCurrentUser();
  } else {
    Serial.println("[i] Logged in as: guest");
    2028:	0e 94 80 0a 	call	0x1500	; 0x1500 <Print::println(char const*) [clone .constprop.27]>
    202c:	da cf       	rjmp	.-76     	; 0x1fe2 <main+0x408>
logout():
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_function.h:240

void logout(){
  if (!loggedIn){
    Serial.println("[!] You already logging out! Execute failed");
  } else if (loggedIn){
    loggedIn = false;
    202e:	10 92 34 02 	sts	0x0234, r1	; 0x800234 <loggedIn>
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_function.h:241
    Serial.println("[S] Logging out success!");
    2032:	80 e4       	ldi	r24, 0x40	; 64
    2034:	91 e0       	ldi	r25, 0x01	; 1
    2036:	f8 cf       	rjmp	.-16     	; 0x2028 <main+0x44e>
_ZNK6StringeqEPKc():
C:\Users\LENOVO\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/WString.h:143
    2038:	69 e5       	ldi	r22, 0x59	; 89
    203a:	71 e0       	ldi	r23, 0x01	; 1
    203c:	ce 01       	movw	r24, r28
    203e:	c7 96       	adiw	r24, 0x37	; 55
    2040:	0e 94 41 0b 	call	0x1682	; 0x1682 <String::equals(char const*) const>
handleCommand():
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_function.h:495
    showDangerousHelp();
  } else if (command == "login"){
    elenaUserStartup(); 
  } else if (command == "logout"){
    logout();
  } else if (command == "stat") {
    2044:	88 23       	and	r24, r24
    2046:	09 f4       	brne	.+2      	; 0x204a <main+0x470>
    2048:	db c0       	rjmp	.+438    	; 0x2200 <main+0x626>
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_function.h:496
    cmd_stat(loggedIn);
    204a:	f0 90 34 02 	lds	r15, 0x0234	; 0x800234 <loggedIn>
cmd_stat():
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_function.h:172
    Serial.println(result, 6);  // 6 digit presisi
  }
}

void cmd_stat(bool logged) {
  Serial.println(F("\n--------- System Status ---------"));
    204e:	88 e4       	ldi	r24, 0x48	; 72
    2050:	9f e0       	ldi	r25, 0x0F	; 15
    2052:	0e 94 8e 0a 	call	0x151c	; 0x151c <Print::println(__FlashStringHelper const*) [clone .constprop.25]>
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_function.h:175

  // 🧑‍💻 Login status
  if (logged) {
    2056:	ff 20       	and	r15, r15
    2058:	09 f4       	brne	.+2      	; 0x205c <main+0x482>
    205a:	cd c0       	rjmp	.+410    	; 0x21f6 <main+0x61c>
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_function.h:176
    printCurrentUser();
    205c:	0e 94 23 0b 	call	0x1646	; 0x1646 <printCurrentUser()>
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_function.h:182
  } else {
    Serial.println(F("[U] Not logged in"));
  }

  // 🧠 MCU info
    Serial.print(F("[M] MCU: "));
    2060:	8c e2       	ldi	r24, 0x2C	; 44
    2062:	9f e0       	ldi	r25, 0x0F	; 15
    2064:	0e 94 ef 09 	call	0x13de	; 0x13de <Print::print(__FlashStringHelper const*) [clone .constprop.26]>
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_function.h:184
  #if defined(__AVR_ATmega32__)
    Serial.println(F("ATmega32"));
    2068:	83 e2       	ldi	r24, 0x23	; 35
    206a:	9f e0       	ldi	r25, 0x0F	; 15
    206c:	0e 94 8e 0a 	call	0x151c	; 0x151c <Print::println(__FlashStringHelper const*) [clone .constprop.25]>
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_function.h:190
  #else
    Serial.println(F("Unknown MCU"));
  #endif

  // ⚙️ CPU Freq
  Serial.print(F("[C] CPU Freq: "));
    2070:	84 e1       	ldi	r24, 0x14	; 20
    2072:	9f e0       	ldi	r25, 0x0F	; 15
    2074:	0e 94 ef 09 	call	0x13de	; 0x13de <Print::print(__FlashStringHelper const*) [clone .constprop.26]>
print():
C:\Users\LENOVO\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/Print.cpp:97
    2078:	4a e0       	ldi	r20, 0x0A	; 10
    207a:	60 e1       	ldi	r22, 0x10	; 16
    207c:	70 e0       	ldi	r23, 0x00	; 0
    207e:	80 e0       	ldi	r24, 0x00	; 0
    2080:	90 e0       	ldi	r25, 0x00	; 0
    2082:	0e 94 3c 0a 	call	0x1478	; 0x1478 <Print::printNumber(unsigned long, unsigned char) [clone .constprop.13]>
cmd_stat():
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_function.h:192
  Serial.print(F_CPU / 1000000);
  Serial.println(F(" MHz"));
    2086:	8f e0       	ldi	r24, 0x0F	; 15
    2088:	9f e0       	ldi	r25, 0x0F	; 15
    208a:	0e 94 8e 0a 	call	0x151c	; 0x151c <Print::println(__FlashStringHelper const*) [clone .constprop.25]>
main():
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_function.h:38
  int v;
  return (int) &v - (__brkval == 0 ? (int) &__heap_start : (int) __brkval);
}

int getUsedEEPROM() {
  int used = 0;
    208e:	d1 2c       	mov	r13, r1
    2090:	c1 2c       	mov	r12, r1
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_function.h:39
  for (int i = 0; i < E2END; i++) {
    2092:	f1 2c       	mov	r15, r1
    2094:	e1 2c       	mov	r14, r1
getUsedEEPROM():
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_function.h:40
    if (eeprom_read_byte((uint8_t*)i) != 0xFF) used++;
    2096:	c7 01       	movw	r24, r14
    2098:	0e 94 7b 1b 	call	0x36f6	; 0x36f6 <eeprom_read_byte>
    209c:	8f 3f       	cpi	r24, 0xFF	; 255
    209e:	19 f0       	breq	.+6      	; 0x20a6 <main+0x4cc>
    20a0:	bf ef       	ldi	r27, 0xFF	; 255
    20a2:	cb 1a       	sub	r12, r27
    20a4:	db 0a       	sbc	r13, r27
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_function.h:39
  return (int) &v - (__brkval == 0 ? (int) &__heap_start : (int) __brkval);
}

int getUsedEEPROM() {
  int used = 0;
  for (int i = 0; i < E2END; i++) {
    20a6:	ef ef       	ldi	r30, 0xFF	; 255
    20a8:	ee 1a       	sub	r14, r30
    20aa:	fe 0a       	sbc	r15, r30
    20ac:	ff ef       	ldi	r31, 0xFF	; 255
    20ae:	ef 16       	cp	r14, r31
    20b0:	f3 e0       	ldi	r31, 0x03	; 3
    20b2:	ff 06       	cpc	r15, r31
    20b4:	81 f7       	brne	.-32     	; 0x2096 <main+0x4bc>
cmd_stat():
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_function.h:197
  Serial.println(F(" MHz"));

  // 📦 EEPROM usage
  int usedEEPROM = getUsedEEPROM();
  int totalEEPROM = E2END + 1;
  Serial.print(F("[E] EEPROM Used: "));
    20b6:	8d ef       	ldi	r24, 0xFD	; 253
    20b8:	9e e0       	ldi	r25, 0x0E	; 14
    20ba:	0e 94 ef 09 	call	0x13de	; 0x13de <Print::print(__FlashStringHelper const*) [clone .constprop.26]>
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_function.h:198
  Serial.print(usedEEPROM);
    20be:	c6 01       	movw	r24, r12
    20c0:	0e 94 c4 0a 	call	0x1588	; 0x1588 <Print::print(int, int) [clone .constprop.10]>
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_function.h:199
  Serial.print(F(" / "));
    20c4:	89 ef       	ldi	r24, 0xF9	; 249
    20c6:	9e e0       	ldi	r25, 0x0E	; 14
    20c8:	0e 94 ef 09 	call	0x13de	; 0x13de <Print::print(__FlashStringHelper const*) [clone .constprop.26]>
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_function.h:200
  Serial.print(totalEEPROM);
    20cc:	80 e0       	ldi	r24, 0x00	; 0
    20ce:	94 e0       	ldi	r25, 0x04	; 4
    20d0:	0e 94 c4 0a 	call	0x1588	; 0x1588 <Print::print(int, int) [clone .constprop.10]>
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_function.h:201
  Serial.println(F(" Bytes"));
    20d4:	82 ef       	ldi	r24, 0xF2	; 242
    20d6:	9e e0       	ldi	r25, 0x0E	; 14
    20d8:	0e 94 8e 0a 	call	0x151c	; 0x151c <Print::println(__FlashStringHelper const*) [clone .constprop.25]>
freeMemory():
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_function.h:34

// ===== Sub Functional ===== 
extern int __heap_start, *__brkval;
int freeMemory() {
  int v;
  return (int) &v - (__brkval == 0 ? (int) &__heap_start : (int) __brkval);
    20dc:	9e 01       	movw	r18, r28
    20de:	2f 5f       	subi	r18, 0xFF	; 255
    20e0:	3f 4f       	sbci	r19, 0xFF	; 255
    20e2:	69 01       	movw	r12, r18
    20e4:	e0 90 e1 02 	lds	r14, 0x02E1	; 0x8002e1 <__brkval>
    20e8:	f0 90 e2 02 	lds	r15, 0x02E2	; 0x8002e2 <__brkval+0x1>
    20ec:	e1 14       	cp	r14, r1
    20ee:	f1 04       	cpc	r15, r1
    20f0:	21 f4       	brne	.+8      	; 0x20fa <main+0x520>
    20f2:	97 ee       	ldi	r25, 0xE7	; 231
    20f4:	e9 2e       	mov	r14, r25
    20f6:	92 e0       	ldi	r25, 0x02	; 2
    20f8:	f9 2e       	mov	r15, r25
cmd_stat():
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_function.h:207

  // 💾 RAM usage
  int free = freeMemory();
  int totalRAM = RAMEND - 0x60 + 1;
  int used = totalRAM - free;
  Serial.print(F("[R] RAM Used: "));
    20fa:	83 ee       	ldi	r24, 0xE3	; 227
    20fc:	9e e0       	ldi	r25, 0x0E	; 14
    20fe:	0e 94 ef 09 	call	0x13de	; 0x13de <Print::print(__FlashStringHelper const*) [clone .constprop.26]>
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_function.h:206
  Serial.println(F(" Bytes"));

  // 💾 RAM usage
  int free = freeMemory();
  int totalRAM = RAMEND - 0x60 + 1;
  int used = totalRAM - free;
    2102:	c7 01       	movw	r24, r14
    2104:	8c 19       	sub	r24, r12
    2106:	9d 09       	sbc	r25, r13
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_function.h:208
  Serial.print(F("[R] RAM Used: "));
  Serial.print(used);
    2108:	98 5f       	subi	r25, 0xF8	; 248
    210a:	0e 94 c4 0a 	call	0x1588	; 0x1588 <Print::print(int, int) [clone .constprop.10]>
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_function.h:209
  Serial.print(F(" / "));
    210e:	8f ed       	ldi	r24, 0xDF	; 223
    2110:	9e e0       	ldi	r25, 0x0E	; 14
    2112:	0e 94 ef 09 	call	0x13de	; 0x13de <Print::print(__FlashStringHelper const*) [clone .constprop.26]>
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_function.h:210
  Serial.print(totalRAM);
    2116:	80 e0       	ldi	r24, 0x00	; 0
    2118:	98 e0       	ldi	r25, 0x08	; 8
    211a:	0e 94 c4 0a 	call	0x1588	; 0x1588 <Print::print(int, int) [clone .constprop.10]>
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_function.h:211
  Serial.println(F(" Bytes"));
    211e:	88 ed       	ldi	r24, 0xD8	; 216
    2120:	9e e0       	ldi	r25, 0x0E	; 14
    2122:	0e 94 8e 0a 	call	0x151c	; 0x151c <Print::println(__FlashStringHelper const*) [clone .constprop.25]>
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_function.h:214

  // 🕓 Uptime
  Serial.print(F("[T] Uptime: "));
    2126:	8b ec       	ldi	r24, 0xCB	; 203
    2128:	9e e0       	ldi	r25, 0x0E	; 14
    212a:	0e 94 ef 09 	call	0x13de	; 0x13de <Print::print(__FlashStringHelper const*) [clone .constprop.26]>
millis():
C:\Users\LENOVO\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/wiring.c:218
}

unsigned long millis()
{
  unsigned long m;
  uint8_t oldSREG = SREG;
    212e:	8f b7       	in	r24, 0x3f	; 63
C:\Users\LENOVO\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/wiring.c:222

  // disable interrupts while we read timer0_millis or we might get an
  // inconsistent value (e.g. in the middle of a write to timer0_millis)
  cli();
    2130:	f8 94       	cli
C:\Users\LENOVO\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/wiring.c:223
  m = timer0_millis;
    2132:	80 90 36 02 	lds	r8, 0x0236	; 0x800236 <timer0_millis>
    2136:	90 90 37 02 	lds	r9, 0x0237	; 0x800237 <timer0_millis+0x1>
    213a:	a0 90 38 02 	lds	r10, 0x0238	; 0x800238 <timer0_millis+0x2>
    213e:	b0 90 39 02 	lds	r11, 0x0239	; 0x800239 <timer0_millis+0x3>
C:\Users\LENOVO\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/wiring.c:224
  SREG = oldSREG;
    2142:	8f bf       	out	0x3f, r24	; 63
formatUptime():
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_function.h:106

  return result;
}

String formatUptime(unsigned long ms) {
  unsigned long seconds = ms / 1000;
    2144:	c5 01       	movw	r24, r10
    2146:	b4 01       	movw	r22, r8
    2148:	28 ee       	ldi	r18, 0xE8	; 232
    214a:	33 e0       	ldi	r19, 0x03	; 3
    214c:	40 e0       	ldi	r20, 0x00	; 0
    214e:	50 e0       	ldi	r21, 0x00	; 0
    2150:	0e 94 df 1e 	call	0x3dbe	; 0x3dbe <__udivmodsi4>
    2154:	29 01       	movw	r4, r18
    2156:	3a 01       	movw	r6, r20
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_function.h:107
  unsigned int minutes = seconds / 60;
    2158:	c5 01       	movw	r24, r10
    215a:	b4 01       	movw	r22, r8
    215c:	20 e6       	ldi	r18, 0x60	; 96
    215e:	3a ee       	ldi	r19, 0xEA	; 234
    2160:	40 e0       	ldi	r20, 0x00	; 0
    2162:	50 e0       	ldi	r21, 0x00	; 0
    2164:	0e 94 df 1e 	call	0x3dbe	; 0x3dbe <__udivmodsi4>
    2168:	49 01       	movw	r8, r18
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_function.h:109
  unsigned int hours = minutes / 60;
  seconds %= 60;
    216a:	c3 01       	movw	r24, r6
    216c:	b2 01       	movw	r22, r4
    216e:	2c e3       	ldi	r18, 0x3C	; 60
    2170:	30 e0       	ldi	r19, 0x00	; 0
    2172:	40 e0       	ldi	r20, 0x00	; 0
    2174:	50 e0       	ldi	r21, 0x00	; 0
    2176:	0e 94 df 1e 	call	0x3dbe	; 0x3dbe <__udivmodsi4>
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_function.h:113
  minutes %= 60;

  char buffer[20];
  sprintf(buffer, "%02u:%02u:%02u", hours, minutes, seconds);
    217a:	9f 93       	push	r25
    217c:	8f 93       	push	r24
    217e:	7f 93       	push	r23
    2180:	6f 93       	push	r22
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_function.h:110
String formatUptime(unsigned long ms) {
  unsigned long seconds = ms / 1000;
  unsigned int minutes = seconds / 60;
  unsigned int hours = minutes / 60;
  seconds %= 60;
  minutes %= 60;
    2182:	c4 01       	movw	r24, r8
    2184:	6c e3       	ldi	r22, 0x3C	; 60
    2186:	70 e0       	ldi	r23, 0x00	; 0
    2188:	0e 94 cb 1e 	call	0x3d96	; 0x3d96 <__udivmodhi4>
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_function.h:113

  char buffer[20];
  sprintf(buffer, "%02u:%02u:%02u", hours, minutes, seconds);
    218c:	9f 93       	push	r25
    218e:	8f 93       	push	r24
    2190:	7f 93       	push	r23
    2192:	6f 93       	push	r22
    2194:	8e e5       	ldi	r24, 0x5E	; 94
    2196:	91 e0       	ldi	r25, 0x01	; 1
    2198:	9f 93       	push	r25
    219a:	8f 93       	push	r24
    219c:	df 92       	push	r13
    219e:	cf 92       	push	r12
    21a0:	0e 94 fb 1f 	call	0x3ff6	; 0x3ff6 <sprintf>
_ZN6String4initEv():
C:\Users\LENOVO\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/WString.cpp:134
/*  Memory Management                        */
/*********************************************/

inline void String::init(void)
{
  buffer = NULL;
    21a4:	1a aa       	std	Y+50, r1	; 0x32
    21a6:	19 aa       	std	Y+49, r1	; 0x31
C:\Users\LENOVO\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/WString.cpp:135
  capacity = 0;
    21a8:	1c aa       	std	Y+52, r1	; 0x34
    21aa:	1b aa       	std	Y+51, r1	; 0x33
C:\Users\LENOVO\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/WString.cpp:136
  len = 0;
    21ac:	1e aa       	std	Y+54, r1	; 0x36
    21ae:	1d aa       	std	Y+53, r1	; 0x35
__base_ctor ():
C:\Users\LENOVO\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/WString.cpp:31
/*********************************************/

String::String(const char *cstr)
{
  init();
  if (cstr) copy(cstr, strlen(cstr));
    21b0:	f6 01       	movw	r30, r12
    21b2:	01 90       	ld	r0, Z+
    21b4:	00 20       	and	r0, r0
    21b6:	e9 f7       	brne	.-6      	; 0x21b2 <main+0x5d8>
    21b8:	31 97       	sbiw	r30, 0x01	; 1
    21ba:	af 01       	movw	r20, r30
    21bc:	4c 19       	sub	r20, r12
    21be:	5d 09       	sbc	r21, r13
    21c0:	b6 01       	movw	r22, r12
    21c2:	ce 01       	movw	r24, r28
    21c4:	c1 96       	adiw	r24, 0x31	; 49
    21c6:	0e 94 1c 0c 	call	0x1838	; 0x1838 <String::copy(char const*, unsigned int)>
println():
C:\Users\LENOVO\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/Print.cpp:133
  return write("\r\n");
}

size_t Print::println(const String &s)
{
  size_t n = print(s);
    21ca:	ce 01       	movw	r24, r28
    21cc:	c1 96       	adiw	r24, 0x31	; 49
    21ce:	0e 94 28 09 	call	0x1250	; 0x1250 <Print::print(String const&) [clone .constprop.15]>
write():
    21d2:	88 e7       	ldi	r24, 0x78	; 120
    21d4:	90 e0       	ldi	r25, 0x00	; 0
    21d6:	0e 94 2f 0a 	call	0x145e	; 0x145e <Print::write(char const*) [clone .part.2] [clone .constprop.30]>
cmd_stat():
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_function.h:215
  Serial.print(totalRAM);
  Serial.println(F(" Bytes"));

  // 🕓 Uptime
  Serial.print(F("[T] Uptime: "));
  Serial.println(formatUptime(millis()));
    21da:	ce 01       	movw	r24, r28
    21dc:	c1 96       	adiw	r24, 0x31	; 49
    21de:	0e 94 ec 0b 	call	0x17d8	; 0x17d8 <String::~String()>
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_function.h:217

  Serial.println(F("---------------------------------"));
    21e2:	89 ea       	ldi	r24, 0xA9	; 169
    21e4:	9e e0       	ldi	r25, 0x0E	; 14
    21e6:	0e 94 8e 0a 	call	0x151c	; 0x151c <Print::println(__FlashStringHelper const*) [clone .constprop.25]>
    21ea:	0f b6       	in	r0, 0x3f	; 63
    21ec:	f8 94       	cli
    21ee:	de bf       	out	0x3e, r29	; 62
    21f0:	0f be       	out	0x3f, r0	; 63
    21f2:	cd bf       	out	0x3d, r28	; 61
    21f4:	f6 ce       	rjmp	.-532    	; 0x1fe2 <main+0x408>
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_function.h:178

  // 🧑‍💻 Login status
  if (logged) {
    printCurrentUser();
  } else {
    Serial.println(F("[U] Not logged in"));
    21f6:	86 e3       	ldi	r24, 0x36	; 54
    21f8:	9f e0       	ldi	r25, 0x0F	; 15
    21fa:	0e 94 8e 0a 	call	0x151c	; 0x151c <Print::println(__FlashStringHelper const*) [clone .constprop.25]>
    21fe:	30 cf       	rjmp	.-416    	; 0x2060 <main+0x486>
_ZNK6StringeqEPKc():
C:\Users\LENOVO\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/WString.h:143
    2200:	6d e6       	ldi	r22, 0x6D	; 109
    2202:	71 e0       	ldi	r23, 0x01	; 1
    2204:	ce 01       	movw	r24, r28
    2206:	c7 96       	adiw	r24, 0x37	; 55
    2208:	0e 94 41 0b 	call	0x1682	; 0x1682 <String::equals(char const*) const>
handleCommand():
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_function.h:497
    elenaUserStartup(); 
  } else if (command == "logout"){
    logout();
  } else if (command == "stat") {
    cmd_stat(loggedIn);
  } else if (command == "rns-acc") {
    220c:	88 23       	and	r24, r24
    220e:	d9 f0       	breq	.+54     	; 0x2246 <main+0x66c>
cmd_resetandset():
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_function.h:221

  Serial.println(F("---------------------------------"));
}

void cmd_resetandset() {
  if (!loggedIn) {
    2210:	80 91 34 02 	lds	r24, 0x0234	; 0x800234 <loggedIn>
    2214:	81 11       	cpse	r24, r1
    2216:	0e c0       	rjmp	.+28     	; 0x2234 <main+0x65a>
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_function.h:222
    Serial.println(F("[!] You must login to reset your account!"));
    2218:	8f e7       	ldi	r24, 0x7F	; 127
    221a:	9e e0       	ldi	r25, 0x0E	; 14
    221c:	0e 94 8e 0a 	call	0x151c	; 0x151c <Print::println(__FlashStringHelper const*) [clone .constprop.25]>
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_function.h:224

    if (elenaUserStartup()) {
    2220:	0e 94 47 0c 	call	0x188e	; 0x188e <elenaUserStartup()>
    2224:	88 23       	and	r24, r24
    2226:	19 f0       	breq	.+6      	; 0x222e <main+0x654>
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_function.h:225
      registerUser();  // Cuma jalan kalau login berhasil
    2228:	0e 94 90 0b 	call	0x1720	; 0x1720 <registerUser()>
    222c:	da ce       	rjmp	.-588    	; 0x1fe2 <main+0x408>
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_function.h:227
    } else {
      Serial.println(F("[X] Register cancelled because login failed."));
    222e:	84 e1       	ldi	r24, 0x14	; 20
    2230:	9e e0       	ldi	r25, 0x0E	; 14
    2232:	70 ce       	rjmp	.-800    	; 0x1f14 <main+0x33a>
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_function.h:230
    }
  } else {
    registerUser(); // Kalau udah login
    2234:	0e 94 90 0b 	call	0x1720	; 0x1720 <registerUser()>
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_function.h:231
    Serial.println(F("[S] Reset account success, you can relog to your new account!"));
    2238:	81 e4       	ldi	r24, 0x41	; 65
    223a:	9e e0       	ldi	r25, 0x0E	; 14
    223c:	0e 94 8e 0a 	call	0x151c	; 0x151c <Print::println(__FlashStringHelper const*) [clone .constprop.25]>
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_function.h:232
    loggedIn = false;
    2240:	10 92 34 02 	sts	0x0234, r1	; 0x800234 <loggedIn>
    2244:	ce ce       	rjmp	.-612    	; 0x1fe2 <main+0x408>
_ZNK6StringeqEPKc():
C:\Users\LENOVO\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/WString.h:143
    2246:	65 e7       	ldi	r22, 0x75	; 117
    2248:	71 e0       	ldi	r23, 0x01	; 1
    224a:	ce 01       	movw	r24, r28
    224c:	c7 96       	adiw	r24, 0x37	; 55
    224e:	0e 94 41 0b 	call	0x1682	; 0x1682 <String::equals(char const*) const>
handleCommand():
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_function.h:499
    logout();
  } else if (command == "stat") {
    cmd_stat(loggedIn);
  } else if (command == "rns-acc") {
    cmd_resetandset();
  } else if (command == "reboot") {
    2252:	88 23       	and	r24, r24
    2254:	49 f0       	breq	.+18     	; 0x2268 <main+0x68e>
wdt_enable():
c:\users\lenovo\appdata\local\arduino15\packages\arduino\tools\avr-gcc\7.3.0-atmel3.6.1-arduino7\avr\include\avr/wdt.h:469
				: "I" (_SFR_IO_ADDR(_WD_CONTROL_REG)),
				"r" ((uint8_t)(_BV(_WD_CHANGE_BIT) | _BV(WDE))),
				"r" ((uint8_t) ((value & 0x08 ? _WD_PS3_MASK : 0x00) |
						_BV(WDE) | (value & 0x07)) )
				: "r0"
		);
    2256:	88 e1       	ldi	r24, 0x18	; 24
    2258:	98 e0       	ldi	r25, 0x08	; 8
    225a:	0f b6       	in	r0, 0x3f	; 63
    225c:	f8 94       	cli
    225e:	a8 95       	wdr
    2260:	81 bd       	out	0x21, r24	; 33
    2262:	0f be       	out	0x3f, r0	; 63
    2264:	91 bd       	out	0x21, r25	; 33
    2266:	ff cf       	rjmp	.-2      	; 0x2266 <main+0x68c>
_ZNK6StringeqEPKc():
C:\Users\LENOVO\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/WString.h:143
    2268:	6c e7       	ldi	r22, 0x7C	; 124
    226a:	71 e0       	ldi	r23, 0x01	; 1
    226c:	ce 01       	movw	r24, r28
    226e:	c7 96       	adiw	r24, 0x37	; 55
    2270:	0e 94 41 0b 	call	0x1682	; 0x1682 <String::equals(char const*) const>
handleCommand():
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_function.h:501
    cmd_reboot();
  } else if (command == "whoami") {
    2274:	88 23       	and	r24, r24
    2276:	51 f0       	breq	.+20     	; 0x228c <main+0x6b2>
cmd_whoami():
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_function.h:254
  // Serial.print("[H"); // move cursor to home
  softwareReset();
}

void cmd_whoami() {
  if (loggedIn){
    2278:	80 91 34 02 	lds	r24, 0x0234	; 0x800234 <loggedIn>
    227c:	88 23       	and	r24, r24
    227e:	19 f0       	breq	.+6      	; 0x2286 <main+0x6ac>
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_function.h:255
    printCurrentUser();
    2280:	0e 94 23 0b 	call	0x1646	; 0x1646 <printCurrentUser()>
    2284:	ae ce       	rjmp	.-676    	; 0x1fe2 <main+0x408>
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_function.h:257
  } else {
    Serial.println("[i] Logged in as: guest");
    2286:	83 e8       	ldi	r24, 0x83	; 131
    2288:	91 e0       	ldi	r25, 0x01	; 1
    228a:	ce ce       	rjmp	.-612    	; 0x2028 <main+0x44e>
_ZNK6StringeqEPKc():
C:\Users\LENOVO\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/WString.h:143
    228c:	6f e9       	ldi	r22, 0x9F	; 159
    228e:	71 e0       	ldi	r23, 0x01	; 1
    2290:	ce 01       	movw	r24, r28
    2292:	c7 96       	adiw	r24, 0x37	; 55
    2294:	0e 94 41 0b 	call	0x1682	; 0x1682 <String::equals(char const*) const>
handleCommand():
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_function.h:503
    cmd_resetandset();
  } else if (command == "reboot") {
    cmd_reboot();
  } else if (command == "whoami") {
    cmd_whoami();
  } else if (command == "time"){
    2298:	88 23       	and	r24, r24
    229a:	19 f0       	breq	.+6      	; 0x22a2 <main+0x6c8>
cmd_time():
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_function.h:144
  Serial.println(F(" │ eeprom-wipe  → Wipe all internal EEPROM data "));
  Serial.println(F(" └────────────────────┘"));
}

void cmd_time(){
  Serial.println(F("ELENA> Aww, i'm sorry, this feature is under development :( "));
    229c:	87 ed       	ldi	r24, 0xD7	; 215
    229e:	9d e0       	ldi	r25, 0x0D	; 13
    22a0:	39 ce       	rjmp	.-910    	; 0x1f14 <main+0x33a>
_ZNK6StringeqEPKc():
C:\Users\LENOVO\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/WString.h:143
    22a2:	6b e9       	ldi	r22, 0x9B	; 155
    22a4:	71 e0       	ldi	r23, 0x01	; 1
    22a6:	ce 01       	movw	r24, r28
    22a8:	c7 96       	adiw	r24, 0x37	; 55
    22aa:	0e 94 41 0b 	call	0x1682	; 0x1682 <String::equals(char const*) const>
handleCommand():
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_function.h:505
    cmd_reboot();
  } else if (command == "whoami") {
    cmd_whoami();
  } else if (command == "time"){
    cmd_time();
  } else if (command == "set-time"){
    22ae:	88 23       	and	r24, r24
    22b0:	19 f0       	breq	.+6      	; 0x22b8 <main+0x6de>
cmd_set_time():
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_function.h:148
void cmd_time(){
  Serial.println(F("ELENA> Aww, i'm sorry, this feature is under development :( "));
}

void cmd_set_time() {
  Serial.println(F("ELENA> Aww, i'm sorry, this feature is under development :("));
    22b2:	8b e9       	ldi	r24, 0x9B	; 155
    22b4:	9d e0       	ldi	r25, 0x0D	; 13
    22b6:	2e ce       	rjmp	.-932    	; 0x1f14 <main+0x33a>
_ZNK6StringeqEPKc():
C:\Users\LENOVO\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/WString.h:143
    22b8:	64 ea       	ldi	r22, 0xA4	; 164
    22ba:	71 e0       	ldi	r23, 0x01	; 1
    22bc:	ce 01       	movw	r24, r28
    22be:	c7 96       	adiw	r24, 0x37	; 55
    22c0:	0e 94 41 0b 	call	0x1682	; 0x1682 <String::equals(char const*) const>
handleCommand():
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_function.h:507
    cmd_whoami();
  } else if (command == "time"){
    cmd_time();
  } else if (command == "set-time"){
    cmd_set_time();
  } else if (command == "calc"){
    22c4:	88 23       	and	r24, r24
    22c6:	09 f4       	brne	.+2      	; 0x22ca <main+0x6f0>
    22c8:	4f c1       	rjmp	.+670    	; 0x2568 <main+0x98e>
cmd_calc():
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_function.h:153
  Serial.println(F("ELENA> Aww, i'm sorry, this feature is under development :("));
}

void cmd_calc() {
  char input[32];
  Serial.println(F("Calculator Mode. Type a math expression (e.g. 8 + 2 * sqrt25 - 4 / 2 ^ 2) or 'exit'."));
    22ca:	86 e4       	ldi	r24, 0x46	; 70
    22cc:	9d e0       	ldi	r25, 0x0D	; 13
    22ce:	0e 94 8e 0a 	call	0x151c	; 0x151c <Print::println(__FlashStringHelper const*) [clone .constprop.25]>
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_function.h:156

  while (true) {
    Serial.print(F("calc>> "));
    22d2:	8e e3       	ldi	r24, 0x3E	; 62
    22d4:	9d e0       	ldi	r25, 0x0D	; 13
    22d6:	0e 94 ef 09 	call	0x13de	; 0x13de <Print::print(__FlashStringHelper const*) [clone .constprop.26]>
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_function.h:157
    readLine(input, sizeof(input));
    22da:	60 e2       	ldi	r22, 0x20	; 32
    22dc:	70 e0       	ldi	r23, 0x00	; 0
    22de:	ce 01       	movw	r24, r28
    22e0:	01 96       	adiw	r24, 0x01	; 1
    22e2:	0e 94 56 0b 	call	0x16ac	; 0x16ac <readLine(char*, int)>
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_function.h:159

    if (strcmp(input, "exit") == 0) {
    22e6:	60 e9       	ldi	r22, 0x90	; 144
    22e8:	70 e0       	ldi	r23, 0x00	; 0
    22ea:	ce 01       	movw	r24, r28
    22ec:	01 96       	adiw	r24, 0x01	; 1
    22ee:	0e 94 dd 1f 	call	0x3fba	; 0x3fba <strcmp>
    22f2:	89 2b       	or	r24, r25
    22f4:	19 f4       	brne	.+6      	; 0x22fc <main+0x722>
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_function.h:160
      Serial.println(F("[X] Exit from Calculator Mode."));
    22f6:	8f e1       	ldi	r24, 0x1F	; 31
    22f8:	9d e0       	ldi	r25, 0x0D	; 13
    22fa:	0c ce       	rjmp	.-1000   	; 0x1f14 <main+0x33a>
main():
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_function.h:53
}

float evaluateExpression(const char* expr) {
  float result = 0;
  float current = 0;
  char op = '+';  
    22fc:	8b e2       	ldi	r24, 0x2B	; 43
    22fe:	98 2e       	mov	r9, r24
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_function.h:51
  wdt_enable(WDTO_15MS); 
  while (1);             
}

float evaluateExpression(const char* expr) {
  float result = 0;
    2300:	c1 2c       	mov	r12, r1
    2302:	d1 2c       	mov	r13, r1
    2304:	76 01       	movw	r14, r12
cmd_calc():
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_function.h:159

  while (true) {
    Serial.print(F("calc>> "));
    readLine(input, sizeof(input));

    if (strcmp(input, "exit") == 0) {
    2306:	fe 01       	movw	r30, r28
    2308:	31 96       	adiw	r30, 0x01	; 1
evaluateExpression():
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_function.h:56
  float result = 0;
  float current = 0;
  char op = '+';  
  bool error = false;

  while (*expr) {
    230a:	80 81       	ld	r24, Z
    230c:	88 23       	and	r24, r24
    230e:	51 f1       	breq	.+84     	; 0x2364 <main+0x78a>
    2310:	5f 01       	movw	r10, r30
    2312:	31 96       	adiw	r30, 0x01	; 1
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_function.h:57
    while (*expr == ' ') expr++;  
    2314:	d5 01       	movw	r26, r10
    2316:	8c 91       	ld	r24, X
    2318:	80 32       	cpi	r24, 0x20	; 32
    231a:	d1 f3       	breq	.-12     	; 0x2310 <main+0x736>
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_function.h:62

    float value = 0;
    char* endPtr;

    if (strncmp(expr, "sqrt", 4) == 0) {
    231c:	44 e0       	ldi	r20, 0x04	; 4
    231e:	50 e0       	ldi	r21, 0x00	; 0
    2320:	69 ea       	ldi	r22, 0xA9	; 169
    2322:	71 e0       	ldi	r23, 0x01	; 1
    2324:	c5 01       	movw	r24, r10
    2326:	0e 94 ed 1f 	call	0x3fda	; 0x3fda <strncmp>
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_function.h:64
      expr += 4; 
      value = strtod(expr, &endPtr);
    232a:	be 01       	movw	r22, r28
    232c:	6f 5c       	subi	r22, 0xCF	; 207
    232e:	7f 4f       	sbci	r23, 0xFF	; 255
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_function.h:62
    while (*expr == ' ') expr++;  

    float value = 0;
    char* endPtr;

    if (strncmp(expr, "sqrt", 4) == 0) {
    2330:	89 2b       	or	r24, r25
    2332:	09 f0       	breq	.+2      	; 0x2336 <main+0x75c>
    2334:	4c c0       	rjmp	.+152    	; 0x23ce <main+0x7f4>
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_function.h:64
      expr += 4; 
      value = strtod(expr, &endPtr);
    2336:	c5 01       	movw	r24, r10
    2338:	04 96       	adiw	r24, 0x04	; 4
    233a:	0e 94 65 16 	call	0x2cca	; 0x2cca <strtod>
    233e:	2b 01       	movw	r4, r22
    2340:	3c 01       	movw	r6, r24
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_function.h:65
      if (value < 0) {
    2342:	20 e0       	ldi	r18, 0x00	; 0
    2344:	30 e0       	ldi	r19, 0x00	; 0
    2346:	a9 01       	movw	r20, r18
    2348:	0e 94 d6 17 	call	0x2fac	; 0x2fac <__cmpsf2>
    234c:	87 ff       	sbrs	r24, 7
    234e:	20 c0       	rjmp	.+64     	; 0x2390 <main+0x7b6>
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_function.h:66
        Serial.println(F("[!] sqrt() of negative number!"));
    2350:	87 ef       	ldi	r24, 0xF7	; 247
    2352:	9c e0       	ldi	r25, 0x0C	; 12
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_function.h:82
      case '+': result += value; break;
      case '-': result -= value; break;
      case '*': result *= value; break;
      case '/':
        if (value == 0) {
          Serial.println(F("[X] Divide by zero!"));
    2354:	0e 94 8e 0a 	call	0x151c	; 0x151c <Print::println(__FlashStringHelper const*) [clone .constprop.25]>
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_function.h:67
    if (strncmp(expr, "sqrt", 4) == 0) {
      expr += 4; 
      value = strtod(expr, &endPtr);
      if (value < 0) {
        Serial.println(F("[!] sqrt() of negative number!"));
        return NAN;
    2358:	c1 2c       	mov	r12, r1
    235a:	d1 2c       	mov	r13, r1
    235c:	b0 ec       	ldi	r27, 0xC0	; 192
    235e:	eb 2e       	mov	r14, r27
    2360:	bf e7       	ldi	r27, 0x7F	; 127
    2362:	fb 2e       	mov	r15, r27
cmd_calc():
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_function.h:166
      break;
    }

    // Eksekusi ekspresi
    float result = evaluateExpression(input);
    Serial.print(F("Result: "));
    2364:	86 e1       	ldi	r24, 0x16	; 22
    2366:	9d e0       	ldi	r25, 0x0D	; 13
    2368:	0e 94 ef 09 	call	0x13de	; 0x13de <Print::print(__FlashStringHelper const*) [clone .constprop.26]>
printFloat():
C:\Users\LENOVO\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/Print.cpp:256

size_t Print::printFloat(double number, uint8_t digits) 
{ 
  size_t n = 0;
  
  if (isnan(number)) return print("nan");
    236c:	a7 01       	movw	r20, r14
    236e:	96 01       	movw	r18, r12
    2370:	c7 01       	movw	r24, r14
    2372:	b6 01       	movw	r22, r12
    2374:	0e 94 8a 1d 	call	0x3b14	; 0x3b14 <__unordsf2>
    2378:	88 23       	and	r24, r24
    237a:	09 f4       	brne	.+2      	; 0x237e <main+0x7a4>
    237c:	6c c0       	rjmp	.+216    	; 0x2456 <main+0x87c>
write():
    237e:	8e ea       	ldi	r24, 0xAE	; 174
    2380:	91 e0       	ldi	r25, 0x01	; 1
    2382:	0e 94 2f 0a 	call	0x145e	; 0x145e <Print::write(char const*) [clone .part.2] [clone .constprop.30]>
    2386:	88 e7       	ldi	r24, 0x78	; 120
    2388:	90 e0       	ldi	r25, 0x00	; 0
    238a:	0e 94 2f 0a 	call	0x145e	; 0x145e <Print::write(char const*) [clone .part.2] [clone .constprop.30]>
    238e:	a1 cf       	rjmp	.-190    	; 0x22d2 <main+0x6f8>
evaluateExpression():
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_function.h:69
      value = strtod(expr, &endPtr);
      if (value < 0) {
        Serial.println(F("[!] sqrt() of negative number!"));
        return NAN;
      }
      value = sqrt(value);
    2390:	c3 01       	movw	r24, r6
    2392:	b2 01       	movw	r22, r4
    2394:	0e 94 4a 1d 	call	0x3a94	; 0x3a94 <sqrt>
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_function.h:71
    } else {
      value = strtod(expr, &endPtr);
    2398:	2b 01       	movw	r4, r22
    239a:	3c 01       	movw	r6, r24
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_function.h:74
    }

    expr = endPtr;
    239c:	a9 a8       	ldd	r10, Y+49	; 0x31
    239e:	ba a8       	ldd	r11, Y+50	; 0x32
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_function.h:76

    switch (op) {
    23a0:	bd e2       	ldi	r27, 0x2D	; 45
    23a2:	9b 16       	cp	r9, r27
    23a4:	c9 f1       	breq	.+114    	; 0x2418 <main+0x83e>
    23a6:	b9 15       	cp	r27, r9
    23a8:	b4 f0       	brlt	.+44     	; 0x23d6 <main+0x7fc>
    23aa:	ea e2       	ldi	r30, 0x2A	; 42
    23ac:	9e 16       	cp	r9, r30
    23ae:	d9 f1       	breq	.+118    	; 0x2426 <main+0x84c>
    23b0:	fb e2       	ldi	r31, 0x2B	; 43
    23b2:	9f 16       	cp	r9, r31
    23b4:	e9 f0       	breq	.+58     	; 0x23f0 <main+0x816>
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_function.h:91
        break;
      case '^':
        result = pow(result, value);
        break;
      default:
        Serial.print(F("[X] Invalid operator: "));
    23b6:	8c ec       	ldi	r24, 0xCC	; 204
    23b8:	9c e0       	ldi	r25, 0x0C	; 12
    23ba:	0e 94 ef 09 	call	0x13de	; 0x13de <Print::print(__FlashStringHelper const*) [clone .constprop.26]>
println():
C:\Users\LENOVO\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/Print.cpp:147
  return n;
}

size_t Print::println(char c)
{
  size_t n = print(c);
    23be:	89 2d       	mov	r24, r9
    23c0:	0e 94 0a 0a 	call	0x1414	; 0x1414 <Print::print(char) [clone .constprop.18]>
write():
    23c4:	88 e7       	ldi	r24, 0x78	; 120
    23c6:	90 e0       	ldi	r25, 0x00	; 0
    23c8:	0e 94 2f 0a 	call	0x145e	; 0x145e <Print::write(char const*) [clone .part.2] [clone .constprop.30]>
    23cc:	c5 cf       	rjmp	.-118    	; 0x2358 <main+0x77e>
evaluateExpression():
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_function.h:71
        Serial.println(F("[!] sqrt() of negative number!"));
        return NAN;
      }
      value = sqrt(value);
    } else {
      value = strtod(expr, &endPtr);
    23ce:	c5 01       	movw	r24, r10
    23d0:	0e 94 65 16 	call	0x2cca	; 0x2cca <strtod>
    23d4:	e1 cf       	rjmp	.-62     	; 0x2398 <main+0x7be>
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_function.h:76
    }

    expr = endPtr;

    switch (op) {
    23d6:	2f e2       	ldi	r18, 0x2F	; 47
    23d8:	92 16       	cp	r9, r18
    23da:	61 f1       	breq	.+88     	; 0x2434 <main+0x85a>
    23dc:	3e e5       	ldi	r19, 0x5E	; 94
    23de:	93 12       	cpse	r9, r19
    23e0:	ea cf       	rjmp	.-44     	; 0x23b6 <main+0x7dc>
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_function.h:88
          return NAN;
        }
        result /= value;
        break;
      case '^':
        result = pow(result, value);
    23e2:	ac 01       	movw	r20, r24
    23e4:	9b 01       	movw	r18, r22
    23e6:	c7 01       	movw	r24, r14
    23e8:	b6 01       	movw	r22, r12
    23ea:	0e 94 f4 1c 	call	0x39e8	; 0x39e8 <pow>
    23ee:	06 c0       	rjmp	.+12     	; 0x23fc <main+0x822>
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_function.h:77
    }

    expr = endPtr;

    switch (op) {
      case '+': result += value; break;
    23f0:	ac 01       	movw	r20, r24
    23f2:	9b 01       	movw	r18, r22
    23f4:	c7 01       	movw	r24, r14
    23f6:	b6 01       	movw	r22, r12
    23f8:	0e 94 e2 1b 	call	0x37c4	; 0x37c4 <__addsf3>
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_function.h:88
          return NAN;
        }
        result /= value;
        break;
      case '^':
        result = pow(result, value);
    23fc:	6b 01       	movw	r12, r22
    23fe:	7c 01       	movw	r14, r24
    2400:	c5 01       	movw	r24, r10
    2402:	fc 01       	movw	r30, r24
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_function.h:96
        Serial.print(F("[X] Invalid operator: "));
        Serial.println(op);
        return NAN;
    }

    while (*expr == ' ') expr++;
    2404:	90 80       	ld	r9, Z
    2406:	01 96       	adiw	r24, 0x01	; 1
    2408:	a0 e2       	ldi	r26, 0x20	; 32
    240a:	9a 16       	cp	r9, r26
    240c:	d1 f3       	breq	.-12     	; 0x2402 <main+0x828>
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_function.h:99

    op = *expr;
    if (*expr) expr++;
    240e:	99 20       	and	r9, r9
    2410:	09 f4       	brne	.+2      	; 0x2414 <main+0x83a>
    2412:	7b cf       	rjmp	.-266    	; 0x230a <main+0x730>
    2414:	fc 01       	movw	r30, r24
    2416:	79 cf       	rjmp	.-270    	; 0x230a <main+0x730>
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_function.h:78

    expr = endPtr;

    switch (op) {
      case '+': result += value; break;
      case '-': result -= value; break;
    2418:	ac 01       	movw	r20, r24
    241a:	9b 01       	movw	r18, r22
    241c:	c7 01       	movw	r24, r14
    241e:	b6 01       	movw	r22, r12
    2420:	0e 94 e1 1b 	call	0x37c2	; 0x37c2 <__subsf3>
    2424:	eb cf       	rjmp	.-42     	; 0x23fc <main+0x822>
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_function.h:79
      case '*': result *= value; break;
    2426:	ac 01       	movw	r20, r24
    2428:	9b 01       	movw	r18, r22
    242a:	c7 01       	movw	r24, r14
    242c:	b6 01       	movw	r22, r12
    242e:	0e 94 3c 18 	call	0x3078	; 0x3078 <__mulsf3>
    2432:	e4 cf       	rjmp	.-56     	; 0x23fc <main+0x822>
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_function.h:81
      case '/':
        if (value == 0) {
    2434:	20 e0       	ldi	r18, 0x00	; 0
    2436:	30 e0       	ldi	r19, 0x00	; 0
    2438:	a9 01       	movw	r20, r18
    243a:	0e 94 d6 17 	call	0x2fac	; 0x2fac <__cmpsf2>
    243e:	81 11       	cpse	r24, r1
    2440:	03 c0       	rjmp	.+6      	; 0x2448 <main+0x86e>
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_function.h:82
          Serial.println(F("[X] Divide by zero!"));
    2442:	83 ee       	ldi	r24, 0xE3	; 227
    2444:	9c e0       	ldi	r25, 0x0C	; 12
    2446:	86 cf       	rjmp	.-244    	; 0x2354 <main+0x77a>
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_function.h:85
          return NAN;
        }
        result /= value;
    2448:	a3 01       	movw	r20, r6
    244a:	92 01       	movw	r18, r4
    244c:	c7 01       	movw	r24, r14
    244e:	b6 01       	movw	r22, r12
    2450:	0e 94 4e 1c 	call	0x389c	; 0x389c <__divsf3>
    2454:	d3 cf       	rjmp	.-90     	; 0x23fc <main+0x822>
printFloat():
C:\Users\LENOVO\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/Print.cpp:257
size_t Print::printFloat(double number, uint8_t digits) 
{ 
  size_t n = 0;
  
  if (isnan(number)) return print("nan");
  if (isinf(number)) return print("inf");
    2456:	46 01       	movw	r8, r12
    2458:	57 01       	movw	r10, r14
    245a:	e8 94       	clt
    245c:	b7 f8       	bld	r11, 7
    245e:	2f ef       	ldi	r18, 0xFF	; 255
    2460:	3f ef       	ldi	r19, 0xFF	; 255
    2462:	4f e7       	ldi	r20, 0x7F	; 127
    2464:	5f e7       	ldi	r21, 0x7F	; 127
    2466:	c5 01       	movw	r24, r10
    2468:	b4 01       	movw	r22, r8
    246a:	0e 94 8a 1d 	call	0x3b14	; 0x3b14 <__unordsf2>
    246e:	81 11       	cpse	r24, r1
    2470:	0d c0       	rjmp	.+26     	; 0x248c <main+0x8b2>
    2472:	2f ef       	ldi	r18, 0xFF	; 255
    2474:	3f ef       	ldi	r19, 0xFF	; 255
    2476:	4f e7       	ldi	r20, 0x7F	; 127
    2478:	5f e7       	ldi	r21, 0x7F	; 127
    247a:	c5 01       	movw	r24, r10
    247c:	b4 01       	movw	r22, r8
    247e:	0e 94 d6 17 	call	0x2fac	; 0x2fac <__cmpsf2>
    2482:	18 16       	cp	r1, r24
    2484:	1c f4       	brge	.+6      	; 0x248c <main+0x8b2>
write():
    2486:	82 eb       	ldi	r24, 0xB2	; 178
    2488:	91 e0       	ldi	r25, 0x01	; 1
    248a:	7b cf       	rjmp	.-266    	; 0x2382 <main+0x7a8>
printFloat():
C:\Users\LENOVO\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/Print.cpp:258
  if (number > 4294967040.0) return print ("ovf");  // constant determined empirically
    248c:	2f ef       	ldi	r18, 0xFF	; 255
    248e:	3f ef       	ldi	r19, 0xFF	; 255
    2490:	4f e7       	ldi	r20, 0x7F	; 127
    2492:	5f e4       	ldi	r21, 0x4F	; 79
    2494:	c7 01       	movw	r24, r14
    2496:	b6 01       	movw	r22, r12
    2498:	0e 94 ef 1c 	call	0x39de	; 0x39de <__gesf2>
    249c:	18 16       	cp	r1, r24
    249e:	1c f4       	brge	.+6      	; 0x24a6 <main+0x8cc>
write():
    24a0:	86 eb       	ldi	r24, 0xB6	; 182
    24a2:	91 e0       	ldi	r25, 0x01	; 1
    24a4:	6e cf       	rjmp	.-292    	; 0x2382 <main+0x7a8>
printFloat():
C:\Users\LENOVO\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/Print.cpp:259
  if (number <-4294967040.0) return print ("ovf");  // constant determined empirically
    24a6:	2f ef       	ldi	r18, 0xFF	; 255
    24a8:	3f ef       	ldi	r19, 0xFF	; 255
    24aa:	4f e7       	ldi	r20, 0x7F	; 127
    24ac:	5f ec       	ldi	r21, 0xCF	; 207
    24ae:	c7 01       	movw	r24, r14
    24b0:	b6 01       	movw	r22, r12
    24b2:	0e 94 d6 17 	call	0x2fac	; 0x2fac <__cmpsf2>
    24b6:	87 fd       	sbrc	r24, 7
    24b8:	f3 cf       	rjmp	.-26     	; 0x24a0 <main+0x8c6>
C:\Users\LENOVO\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/Print.cpp:262
  
  // Handle negative numbers
  if (number < 0.0)
    24ba:	20 e0       	ldi	r18, 0x00	; 0
    24bc:	30 e0       	ldi	r19, 0x00	; 0
    24be:	a9 01       	movw	r20, r18
    24c0:	c7 01       	movw	r24, r14
    24c2:	b6 01       	movw	r22, r12
    24c4:	0e 94 d6 17 	call	0x2fac	; 0x2fac <__cmpsf2>
    24c8:	87 ff       	sbrs	r24, 7
    24ca:	07 c0       	rjmp	.+14     	; 0x24da <main+0x900>
C:\Users\LENOVO\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/Print.cpp:264
  {
     n += print('-');
    24cc:	8d e2       	ldi	r24, 0x2D	; 45
    24ce:	0e 94 0a 0a 	call	0x1414	; 0x1414 <Print::print(char) [clone .constprop.18]>
C:\Users\LENOVO\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/Print.cpp:265
     number = -number;
    24d2:	f7 fa       	bst	r15, 7
    24d4:	f0 94       	com	r15
    24d6:	f7 f8       	bld	r15, 7
    24d8:	f0 94       	com	r15
C:\Users\LENOVO\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/Print.cpp:273
  // Round correctly so that print(1.999, 2) prints as "2.00"
  double rounding = 0.5;
  for (uint8_t i=0; i<digits; ++i)
    rounding /= 10.0;
  
  number += rounding;
    24da:	2c eb       	ldi	r18, 0xBC	; 188
    24dc:	37 e3       	ldi	r19, 0x37	; 55
    24de:	46 e0       	ldi	r20, 0x06	; 6
    24e0:	55 e3       	ldi	r21, 0x35	; 53
    24e2:	c7 01       	movw	r24, r14
    24e4:	b6 01       	movw	r22, r12
    24e6:	0e 94 e2 1b 	call	0x37c4	; 0x37c4 <__addsf3>
    24ea:	6b 01       	movw	r12, r22
    24ec:	7c 01       	movw	r14, r24
C:\Users\LENOVO\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/Print.cpp:276

  // Extract the integer part of the number and print it
  unsigned long int_part = (unsigned long)number;
    24ee:	0e 94 c0 1c 	call	0x3980	; 0x3980 <__fixunssfsi>
    24f2:	4b 01       	movw	r8, r22
    24f4:	5c 01       	movw	r10, r24
C:\Users\LENOVO\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/Print.cpp:277
  double remainder = number - (double)int_part;
    24f6:	0e 94 db 17 	call	0x2fb6	; 0x2fb6 <__floatunsisf>
    24fa:	9b 01       	movw	r18, r22
    24fc:	ac 01       	movw	r20, r24
    24fe:	c7 01       	movw	r24, r14
    2500:	b6 01       	movw	r22, r12
    2502:	0e 94 e1 1b 	call	0x37c2	; 0x37c2 <__subsf3>
    2506:	6b 01       	movw	r12, r22
    2508:	7c 01       	movw	r14, r24
print():
C:\Users\LENOVO\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/Print.cpp:106
}

size_t Print::print(unsigned long n, int base)
{
  if (base == 0) return write(n);
  else return printNumber(n, base);
    250a:	4a e0       	ldi	r20, 0x0A	; 10
    250c:	c5 01       	movw	r24, r10
    250e:	b4 01       	movw	r22, r8
    2510:	0e 94 3c 0a 	call	0x1478	; 0x1478 <Print::printNumber(unsigned long, unsigned char) [clone .constprop.13]>
printFloat():
C:\Users\LENOVO\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/Print.cpp:282
  double remainder = number - (double)int_part;
  n += print(int_part);

  // Print the decimal point, but only if there are digits beyond
  if (digits > 0) {
    n += print('.'); 
    2514:	8e e2       	ldi	r24, 0x2E	; 46
    2516:	0e 94 0a 0a 	call	0x1414	; 0x1414 <Print::print(char) [clone .constprop.18]>
    251a:	a7 e0       	ldi	r26, 0x07	; 7
    251c:	ba 2e       	mov	r11, r26
    251e:	ba 94       	dec	r11
C:\Users\LENOVO\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/Print.cpp:286
  }

  // Extract digits from the remainder one at a time
  while (digits-- > 0)
    2520:	bb 20       	and	r11, r11
    2522:	09 f4       	brne	.+2      	; 0x2526 <main+0x94c>
    2524:	30 cf       	rjmp	.-416    	; 0x2386 <main+0x7ac>
C:\Users\LENOVO\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/Print.cpp:288
  {
    remainder *= 10.0;
    2526:	20 e0       	ldi	r18, 0x00	; 0
    2528:	30 e0       	ldi	r19, 0x00	; 0
    252a:	40 e2       	ldi	r20, 0x20	; 32
    252c:	51 e4       	ldi	r21, 0x41	; 65
    252e:	c7 01       	movw	r24, r14
    2530:	b6 01       	movw	r22, r12
    2532:	0e 94 3c 18 	call	0x3078	; 0x3078 <__mulsf3>
    2536:	2b 01       	movw	r4, r22
    2538:	3c 01       	movw	r6, r24
C:\Users\LENOVO\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/Print.cpp:289
    unsigned int toPrint = (unsigned int)(remainder);
    253a:	0e 94 c0 1c 	call	0x3980	; 0x3980 <__fixunssfsi>
print():
C:\Users\LENOVO\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/Print.cpp:84
  return print((long) n, base);
}

size_t Print::print(unsigned int n, int base)
{
  return print((unsigned long) n, base);
    253e:	6b 01       	movw	r12, r22
    2540:	f1 2c       	mov	r15, r1
    2542:	e1 2c       	mov	r14, r1
C:\Users\LENOVO\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/Print.cpp:106
}

size_t Print::print(unsigned long n, int base)
{
  if (base == 0) return write(n);
  else return printNumber(n, base);
    2544:	4a e0       	ldi	r20, 0x0A	; 10
    2546:	c7 01       	movw	r24, r14
    2548:	b6 01       	movw	r22, r12
    254a:	0e 94 3c 0a 	call	0x1478	; 0x1478 <Print::printNumber(unsigned long, unsigned char) [clone .constprop.13]>
printFloat():
C:\Users\LENOVO\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/Print.cpp:291
  while (digits-- > 0)
  {
    remainder *= 10.0;
    unsigned int toPrint = (unsigned int)(remainder);
    n += print(toPrint);
    remainder -= toPrint; 
    254e:	c7 01       	movw	r24, r14
    2550:	b6 01       	movw	r22, r12
    2552:	0e 94 db 17 	call	0x2fb6	; 0x2fb6 <__floatunsisf>
    2556:	9b 01       	movw	r18, r22
    2558:	ac 01       	movw	r20, r24
    255a:	c3 01       	movw	r24, r6
    255c:	b2 01       	movw	r22, r4
    255e:	0e 94 e1 1b 	call	0x37c2	; 0x37c2 <__subsf3>
    2562:	6b 01       	movw	r12, r22
    2564:	7c 01       	movw	r14, r24
    2566:	db cf       	rjmp	.-74     	; 0x251e <main+0x944>
_ZNK6StringeqEPKc():
C:\Users\LENOVO\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/WString.h:143
    2568:	6a eb       	ldi	r22, 0xBA	; 186
    256a:	71 e0       	ldi	r23, 0x01	; 1
    256c:	ce 01       	movw	r24, r28
    256e:	c7 96       	adiw	r24, 0x37	; 55
    2570:	0e 94 41 0b 	call	0x1682	; 0x1682 <String::equals(char const*) const>
handleCommand():
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_function.h:509
    cmd_time();
  } else if (command == "set-time"){
    cmd_set_time();
  } else if (command == "calc"){
    cmd_calc();
  } else if (command == "gpio-write"){
    2574:	88 23       	and	r24, r24
    2576:	09 f4       	brne	.+2      	; 0x257a <main+0x9a0>
    2578:	3e c1       	rjmp	.+636    	; 0x27f6 <main+0xc1c>
cmd_gpioWrite():
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_function.h:263
  }
}

void cmd_gpioWrite() {
  char input[32];
  Serial.println(F("[i] Entering GPIO Mode (Write). Type 'gpio [pin] [h/l]', 'gpio all [h/l]', or 'exit'."));
    257a:	86 e7       	ldi	r24, 0x76	; 118
    257c:	9c e0       	ldi	r25, 0x0C	; 12
    257e:	0e 94 8e 0a 	call	0x151c	; 0x151c <Print::println(__FlashStringHelper const*) [clone .constprop.25]>
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_function.h:278

    // ========================
    // HANDLE gpio all h/l
    // ========================
    char stateAll;
    if (sscanf(input, "gpio all %c", &stateAll) == 1) {
    2582:	5e 01       	movw	r10, r28
    2584:	b5 e4       	ldi	r27, 0x45	; 69
    2586:	ab 0e       	add	r10, r27
    2588:	b1 1c       	adc	r11, r1
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_function.h:322
    // ========================
    char portChar;
    int pinNum;
    char stateChar;

    if (sscanf(input, "gpio p%c%d %c", &portChar, &pinNum, &stateChar) == 3) {
    258a:	6e 01       	movw	r12, r28
    258c:	e4 e4       	ldi	r30, 0x44	; 68
    258e:	ce 0e       	add	r12, r30
    2590:	d1 1c       	adc	r13, r1
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_function.h:346
      if (toupper(portChar) == 'D' && (pinNum == 0 || pinNum == 1)) {
        Serial.println(F("[!] Can't modify PD0 or PD1 (used for Serial)."));
        continue;
      }

      *ddr |= (1 << pinNum); // Set output
    2592:	88 24       	eor	r8, r8
    2594:	83 94       	inc	r8
    2596:	91 2c       	mov	r9, r1
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_function.h:266
void cmd_gpioWrite() {
  char input[32];
  Serial.println(F("[i] Entering GPIO Mode (Write). Type 'gpio [pin] [h/l]', 'gpio all [h/l]', or 'exit'."));

  while (true) {
    Serial.print(F("gpio_write>> "));
    2598:	88 e6       	ldi	r24, 0x68	; 104
    259a:	9c e0       	ldi	r25, 0x0C	; 12
    259c:	0e 94 ef 09 	call	0x13de	; 0x13de <Print::print(__FlashStringHelper const*) [clone .constprop.26]>
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_function.h:267
    readLine(input, sizeof(input));  // Harus udah ada ya
    25a0:	60 e2       	ldi	r22, 0x20	; 32
    25a2:	70 e0       	ldi	r23, 0x00	; 0
    25a4:	9e 01       	movw	r18, r28
    25a6:	2f 5f       	subi	r18, 0xFF	; 255
    25a8:	3f 4f       	sbci	r19, 0xFF	; 255
    25aa:	79 01       	movw	r14, r18
    25ac:	c9 01       	movw	r24, r18
    25ae:	0e 94 56 0b 	call	0x16ac	; 0x16ac <readLine(char*, int)>
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_function.h:269

    if (strcmp(input, "exit") == 0) {
    25b2:	60 e9       	ldi	r22, 0x90	; 144
    25b4:	70 e0       	ldi	r23, 0x00	; 0
    25b6:	c7 01       	movw	r24, r14
    25b8:	0e 94 dd 1f 	call	0x3fba	; 0x3fba <strcmp>
    25bc:	89 2b       	or	r24, r25
    25be:	19 f4       	brne	.+6      	; 0x25c6 <main+0x9ec>
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_function.h:270
      Serial.println(F("[!] Exit from GPIO Mode (out)."));
    25c0:	89 e4       	ldi	r24, 0x49	; 73
    25c2:	9c e0       	ldi	r25, 0x0C	; 12
    25c4:	a7 cc       	rjmp	.-1714   	; 0x1f14 <main+0x33a>
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_function.h:278

    // ========================
    // HANDLE gpio all h/l
    // ========================
    char stateAll;
    if (sscanf(input, "gpio all %c", &stateAll) == 1) {
    25c6:	bf 92       	push	r11
    25c8:	af 92       	push	r10
    25ca:	85 ec       	ldi	r24, 0xC5	; 197
    25cc:	91 e0       	ldi	r25, 0x01	; 1
    25ce:	9f 93       	push	r25
    25d0:	8f 93       	push	r24
    25d2:	ff 92       	push	r15
    25d4:	ef 92       	push	r14
    25d6:	0e 94 1e 20 	call	0x403c	; 0x403c <sscanf>
    25da:	0f 90       	pop	r0
    25dc:	0f 90       	pop	r0
    25de:	0f 90       	pop	r0
    25e0:	0f 90       	pop	r0
    25e2:	0f 90       	pop	r0
    25e4:	0f 90       	pop	r0
    25e6:	01 97       	sbiw	r24, 0x01	; 1
    25e8:	09 f0       	breq	.+2      	; 0x25ec <main+0xa12>
    25ea:	62 c0       	rjmp	.+196    	; 0x26b0 <main+0xad6>
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_function.h:279
      if (tolower(stateAll) != 'h' && tolower(stateAll) != 'l') {
    25ec:	d5 01       	movw	r26, r10
    25ee:	8c 91       	ld	r24, X
    25f0:	08 2e       	mov	r0, r24
    25f2:	00 0c       	add	r0, r0
    25f4:	99 0b       	sbc	r25, r25
    25f6:	0e 94 c4 1f 	call	0x3f88	; 0x3f88 <tolower>
    25fa:	bc 01       	movw	r22, r24
    25fc:	8b 7f       	andi	r24, 0xFB	; 251
    25fe:	88 36       	cpi	r24, 0x68	; 104
    2600:	91 05       	cpc	r25, r1
    2602:	09 f4       	brne	.+2      	; 0x2606 <main+0xa2c>
    2604:	4d c0       	rjmp	.+154    	; 0x26a0 <main+0xac6>
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_function.h:280
        Serial.println(F("[!] Status invalid. Use 'h' or 'l' for gpio all."));
    2606:	88 e1       	ldi	r24, 0x18	; 24
    2608:	9c e0       	ldi	r25, 0x0C	; 12
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_function.h:365
      } else {
        Serial.println(F("[!] Status invalid. Use 'h' or 'l'."));
      }

    } else {
      Serial.println(F("[!] Invalid format. Use 'gpio pa1 h' or 'gpio all l'."));
    260a:	0e 94 8e 0a 	call	0x151c	; 0x151c <Print::println(__FlashStringHelper const*) [clone .constprop.25]>
    260e:	c4 cf       	rjmp	.-120    	; 0x2598 <main+0x9be>
main():
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_function.h:292
        volatile uint8_t *port;

        switch (portChar) {
          case 'A': ddr = &DDRA; port = &PORTA; break;
          case 'B': ddr = &DDRB; port = &PORTB; break;
          case 'C': ddr = &DDRC; port = &PORTC; break;
    2610:	e5 e3       	ldi	r30, 0x35	; 53
    2612:	f0 e0       	ldi	r31, 0x00	; 0
    2614:	a4 e3       	ldi	r26, 0x34	; 52
    2616:	b0 e0       	ldi	r27, 0x00	; 0
cmd_gpioWrite():
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_function.h:289
      // Loop semua PORT A-D dan pin 0-7, kecuali PD0 dan PD1
      for (char portChar = 'A'; portChar <= 'D'; portChar++) {
        volatile uint8_t *ddr;
        volatile uint8_t *port;

        switch (portChar) {
    2618:	93 34       	cpi	r25, 0x43	; 67
    261a:	89 f0       	breq	.+34     	; 0x263e <main+0xa64>
main():
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_function.h:293
          case 'A': ddr = &DDRA; port = &PORTA; break;
          case 'B': ddr = &DDRB; port = &PORTB; break;
          case 'C': ddr = &DDRC; port = &PORTC; break;
          case 'D': ddr = &DDRD; port = &PORTD; break;
    261c:	e2 e3       	ldi	r30, 0x32	; 50
    261e:	f0 e0       	ldi	r31, 0x00	; 0
    2620:	a1 e3       	ldi	r26, 0x31	; 49
    2622:	b0 e0       	ldi	r27, 0x00	; 0
cmd_gpioWrite():
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_function.h:289
      // Loop semua PORT A-D dan pin 0-7, kecuali PD0 dan PD1
      for (char portChar = 'A'; portChar <= 'D'; portChar++) {
        volatile uint8_t *ddr;
        volatile uint8_t *port;

        switch (portChar) {
    2624:	94 34       	cpi	r25, 0x44	; 68
    2626:	59 f0       	breq	.+22     	; 0x263e <main+0xa64>
    2628:	92 34       	cpi	r25, 0x42	; 66
    262a:	29 f0       	breq	.+10     	; 0x2636 <main+0xa5c>
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_function.h:279
    // ========================
    // HANDLE gpio all h/l
    // ========================
    char stateAll;
    if (sscanf(input, "gpio all %c", &stateAll) == 1) {
      if (tolower(stateAll) != 'h' && tolower(stateAll) != 'l') {
    262c:	eb e3       	ldi	r30, 0x3B	; 59
    262e:	f0 e0       	ldi	r31, 0x00	; 0
    2630:	aa e3       	ldi	r26, 0x3A	; 58
    2632:	b0 e0       	ldi	r27, 0x00	; 0
    2634:	04 c0       	rjmp	.+8      	; 0x263e <main+0xa64>
main():
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_function.h:291
        volatile uint8_t *ddr;
        volatile uint8_t *port;

        switch (portChar) {
          case 'A': ddr = &DDRA; port = &PORTA; break;
          case 'B': ddr = &DDRB; port = &PORTB; break;
    2636:	e8 e3       	ldi	r30, 0x38	; 56
    2638:	f0 e0       	ldi	r31, 0x00	; 0
    263a:	a7 e3       	ldi	r26, 0x37	; 55
    263c:	b0 e0       	ldi	r27, 0x00	; 0
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_function.h:296
          case 'C': ddr = &DDRC; port = &PORTC; break;
          case 'D': ddr = &DDRD; port = &PORTD; break;
        }

        for (int pinNum = 0; pinNum < 8; pinNum++) {
    263e:	50 e0       	ldi	r21, 0x00	; 0
    2640:	40 e0       	ldi	r20, 0x00	; 0
cmd_gpioWrite():
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_function.h:298
          // Skip PD0 dan PD1
          if (portChar == 'D' && (pinNum == 0 || pinNum == 1)) continue;
    2642:	94 34       	cpi	r25, 0x44	; 68
    2644:	19 f4       	brne	.+6      	; 0x264c <main+0xa72>
    2646:	42 30       	cpi	r20, 0x02	; 2
    2648:	51 05       	cpc	r21, r1
    264a:	7c f0       	brlt	.+30     	; 0x266a <main+0xa90>
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_function.h:300

          *ddr |= (1 << pinNum); // Set output
    264c:	8c 91       	ld	r24, X
    264e:	94 01       	movw	r18, r8
    2650:	04 2e       	mov	r0, r20
    2652:	01 c0       	rjmp	.+2      	; 0x2656 <main+0xa7c>
    2654:	22 0f       	add	r18, r18
    2656:	0a 94       	dec	r0
    2658:	ea f7       	brpl	.-6      	; 0x2654 <main+0xa7a>
    265a:	82 2b       	or	r24, r18
    265c:	8c 93       	st	X, r24
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_function.h:303

          if (tolower(stateAll) == 'h') {
            *port |= (1 << pinNum);
    265e:	80 81       	ld	r24, Z
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_function.h:302
          // Skip PD0 dan PD1
          if (portChar == 'D' && (pinNum == 0 || pinNum == 1)) continue;

          *ddr |= (1 << pinNum); // Set output

          if (tolower(stateAll) == 'h') {
    2660:	68 36       	cpi	r22, 0x68	; 104
    2662:	71 05       	cpc	r23, r1
    2664:	f9 f4       	brne	.+62     	; 0x26a4 <main+0xaca>
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_function.h:303
            *port |= (1 << pinNum);
    2666:	28 2b       	or	r18, r24
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_function.h:305
          } else {
            *port &= ~(1 << pinNum);
    2668:	20 83       	st	Z, r18
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_function.h:296
          case 'B': ddr = &DDRB; port = &PORTB; break;
          case 'C': ddr = &DDRC; port = &PORTC; break;
          case 'D': ddr = &DDRD; port = &PORTD; break;
        }

        for (int pinNum = 0; pinNum < 8; pinNum++) {
    266a:	4f 5f       	subi	r20, 0xFF	; 255
    266c:	5f 4f       	sbci	r21, 0xFF	; 255
    266e:	48 30       	cpi	r20, 0x08	; 8
    2670:	51 05       	cpc	r21, r1
    2672:	39 f7       	brne	.-50     	; 0x2642 <main+0xa68>
    2674:	9f 5f       	subi	r25, 0xFF	; 255
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_function.h:285
        Serial.println(F("[!] Status invalid. Use 'h' or 'l' for gpio all."));
        continue;
      }

      // Loop semua PORT A-D dan pin 0-7, kecuali PD0 dan PD1
      for (char portChar = 'A'; portChar <= 'D'; portChar++) {
    2676:	95 34       	cpi	r25, 0x45	; 69
    2678:	59 f6       	brne	.-106    	; 0x2610 <main+0xa36>
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_function.h:310
            *port &= ~(1 << pinNum);
          }
        }
      }

      Serial.print(F("[S] All GPIO set to "));
    267a:	83 e0       	ldi	r24, 0x03	; 3
    267c:	9c e0       	ldi	r25, 0x0C	; 12
    267e:	0e 94 ef 09 	call	0x13de	; 0x13de <Print::print(__FlashStringHelper const*) [clone .constprop.26]>
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_function.h:311
      Serial.println(tolower(stateAll) == 'h' ? "HIGH." : "LOW (except PD0 & PD1).");
    2682:	f5 01       	movw	r30, r10
    2684:	80 81       	ld	r24, Z
    2686:	08 2e       	mov	r0, r24
    2688:	00 0c       	add	r0, r0
    268a:	99 0b       	sbc	r25, r25
    268c:	0e 94 c4 1f 	call	0x3f88	; 0x3f88 <tolower>
    2690:	88 36       	cpi	r24, 0x68	; 104
    2692:	91 05       	cpc	r25, r1
    2694:	51 f4       	brne	.+20     	; 0x26aa <main+0xad0>
main():
    2696:	81 ec       	ldi	r24, 0xC1	; 193
    2698:	90 e0       	ldi	r25, 0x00	; 0
cmd_gpioWrite():
    269a:	0e 94 80 0a 	call	0x1500	; 0x1500 <Print::println(char const*) [clone .constprop.27]>
    269e:	7c cf       	rjmp	.-264    	; 0x2598 <main+0x9be>
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_function.h:279
    // ========================
    // HANDLE gpio all h/l
    // ========================
    char stateAll;
    if (sscanf(input, "gpio all %c", &stateAll) == 1) {
      if (tolower(stateAll) != 'h' && tolower(stateAll) != 'l') {
    26a0:	91 e4       	ldi	r25, 0x41	; 65
    26a2:	c4 cf       	rjmp	.-120    	; 0x262c <main+0xa52>
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_function.h:305
          *ddr |= (1 << pinNum); // Set output

          if (tolower(stateAll) == 'h') {
            *port |= (1 << pinNum);
          } else {
            *port &= ~(1 << pinNum);
    26a4:	20 95       	com	r18
    26a6:	28 23       	and	r18, r24
    26a8:	df cf       	rjmp	.-66     	; 0x2668 <main+0xa8e>
main():
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_function.h:311
          }
        }
      }

      Serial.print(F("[S] All GPIO set to "));
      Serial.println(tolower(stateAll) == 'h' ? "HIGH." : "LOW (except PD0 & PD1).");
    26aa:	87 ec       	ldi	r24, 0xC7	; 199
    26ac:	90 e0       	ldi	r25, 0x00	; 0
    26ae:	f5 cf       	rjmp	.-22     	; 0x269a <main+0xac0>
cmd_gpioWrite():
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_function.h:322
    // ========================
    char portChar;
    int pinNum;
    char stateChar;

    if (sscanf(input, "gpio p%c%d %c", &portChar, &pinNum, &stateChar) == 3) {
    26b0:	1f 93       	push	r17
    26b2:	0f 93       	push	r16
    26b4:	ce 01       	movw	r24, r28
    26b6:	c1 96       	adiw	r24, 0x31	; 49
    26b8:	9f 93       	push	r25
    26ba:	8f 93       	push	r24
    26bc:	df 92       	push	r13
    26be:	cf 92       	push	r12
    26c0:	81 ed       	ldi	r24, 0xD1	; 209
    26c2:	91 e0       	ldi	r25, 0x01	; 1
    26c4:	9f 93       	push	r25
    26c6:	8f 93       	push	r24
    26c8:	ff 92       	push	r15
    26ca:	ef 92       	push	r14
    26cc:	0e 94 1e 20 	call	0x403c	; 0x403c <sscanf>
    26d0:	0f b6       	in	r0, 0x3f	; 63
    26d2:	f8 94       	cli
    26d4:	de bf       	out	0x3e, r29	; 62
    26d6:	0f be       	out	0x3f, r0	; 63
    26d8:	cd bf       	out	0x3d, r28	; 61
    26da:	03 97       	sbiw	r24, 0x03	; 3
    26dc:	09 f0       	breq	.+2      	; 0x26e0 <main+0xb06>
    26de:	88 c0       	rjmp	.+272    	; 0x27f0 <main+0xc16>
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_function.h:326
      volatile uint8_t *ddr;
      volatile uint8_t *port;

      switch (toupper(portChar)) {
    26e0:	d6 01       	movw	r26, r12
    26e2:	8c 91       	ld	r24, X
    26e4:	08 2e       	mov	r0, r24
    26e6:	00 0c       	add	r0, r0
    26e8:	99 0b       	sbc	r25, r25
    26ea:	0e 94 cc 1f 	call	0x3f98	; 0x3f98 <toupper>
    26ee:	82 34       	cpi	r24, 0x42	; 66
    26f0:	91 05       	cpc	r25, r1
    26f2:	31 f1       	breq	.+76     	; 0x2740 <main+0xb66>
    26f4:	5c f4       	brge	.+22     	; 0x270c <main+0xb32>
main():
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_function.h:327
        case 'A': ddr = &DDRA; port = &PORTA; break;
    26f6:	6b e3       	ldi	r22, 0x3B	; 59
    26f8:	e6 2e       	mov	r14, r22
    26fa:	f1 2c       	mov	r15, r1
    26fc:	ea e3       	ldi	r30, 0x3A	; 58
    26fe:	f0 e0       	ldi	r31, 0x00	; 0
cmd_gpioWrite():
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_function.h:326

    if (sscanf(input, "gpio p%c%d %c", &portChar, &pinNum, &stateChar) == 3) {
      volatile uint8_t *ddr;
      volatile uint8_t *port;

      switch (toupper(portChar)) {
    2700:	81 34       	cpi	r24, 0x41	; 65
    2702:	91 05       	cpc	r25, r1
    2704:	71 f0       	breq	.+28     	; 0x2722 <main+0xb48>
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_function.h:332
        case 'A': ddr = &DDRA; port = &PORTA; break;
        case 'B': ddr = &DDRB; port = &PORTB; break;
        case 'C': ddr = &DDRC; port = &PORTC; break;
        case 'D': ddr = &DDRD; port = &PORTD; break;
        default:
          Serial.println(F("[!] Port invalid. Use PA, PB, PC, or PD."));
    2706:	8a ed       	ldi	r24, 0xDA	; 218
    2708:	9b e0       	ldi	r25, 0x0B	; 11
    270a:	7f cf       	rjmp	.-258    	; 0x260a <main+0xa30>
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_function.h:326

    if (sscanf(input, "gpio p%c%d %c", &portChar, &pinNum, &stateChar) == 3) {
      volatile uint8_t *ddr;
      volatile uint8_t *port;

      switch (toupper(portChar)) {
    270c:	83 34       	cpi	r24, 0x43	; 67
    270e:	91 05       	cpc	r25, r1
    2710:	89 f0       	breq	.+34     	; 0x2734 <main+0xb5a>
main():
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_function.h:330
        case 'A': ddr = &DDRA; port = &PORTA; break;
        case 'B': ddr = &DDRB; port = &PORTB; break;
        case 'C': ddr = &DDRC; port = &PORTC; break;
        case 'D': ddr = &DDRD; port = &PORTD; break;
    2712:	72 e3       	ldi	r23, 0x32	; 50
    2714:	e7 2e       	mov	r14, r23
    2716:	f1 2c       	mov	r15, r1
    2718:	e1 e3       	ldi	r30, 0x31	; 49
    271a:	f0 e0       	ldi	r31, 0x00	; 0
cmd_gpioWrite():
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_function.h:326

    if (sscanf(input, "gpio p%c%d %c", &portChar, &pinNum, &stateChar) == 3) {
      volatile uint8_t *ddr;
      volatile uint8_t *port;

      switch (toupper(portChar)) {
    271c:	84 34       	cpi	r24, 0x44	; 68
    271e:	91 05       	cpc	r25, r1
    2720:	91 f7       	brne	.-28     	; 0x2706 <main+0xb2c>
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_function.h:336
        default:
          Serial.println(F("[!] Port invalid. Use PA, PB, PC, or PD."));
          continue;
      }

      if (pinNum < 0 || pinNum > 7) {
    2722:	49 a9       	ldd	r20, Y+49	; 0x31
    2724:	24 2f       	mov	r18, r20
    2726:	3a a9       	ldd	r19, Y+50	; 0x32
    2728:	28 30       	cpi	r18, 0x08	; 8
    272a:	31 05       	cpc	r19, r1
    272c:	78 f0       	brcs	.+30     	; 0x274c <main+0xb72>
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_function.h:337
        Serial.println(F("[!] Pin number must be 0-7."));
    272e:	8e eb       	ldi	r24, 0xBE	; 190
    2730:	9b e0       	ldi	r25, 0x0B	; 11
    2732:	6b cf       	rjmp	.-298    	; 0x260a <main+0xa30>
main():
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_function.h:329
      volatile uint8_t *port;

      switch (toupper(portChar)) {
        case 'A': ddr = &DDRA; port = &PORTA; break;
        case 'B': ddr = &DDRB; port = &PORTB; break;
        case 'C': ddr = &DDRC; port = &PORTC; break;
    2734:	e5 e3       	ldi	r30, 0x35	; 53
    2736:	ee 2e       	mov	r14, r30
    2738:	f1 2c       	mov	r15, r1
    273a:	e4 e3       	ldi	r30, 0x34	; 52
    273c:	f0 e0       	ldi	r31, 0x00	; 0
    273e:	f1 cf       	rjmp	.-30     	; 0x2722 <main+0xb48>
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_function.h:328
      volatile uint8_t *ddr;
      volatile uint8_t *port;

      switch (toupper(portChar)) {
        case 'A': ddr = &DDRA; port = &PORTA; break;
        case 'B': ddr = &DDRB; port = &PORTB; break;
    2740:	58 e3       	ldi	r21, 0x38	; 56
    2742:	e5 2e       	mov	r14, r21
    2744:	f1 2c       	mov	r15, r1
    2746:	e7 e3       	ldi	r30, 0x37	; 55
    2748:	f0 e0       	ldi	r31, 0x00	; 0
    274a:	eb cf       	rjmp	.-42     	; 0x2722 <main+0xb48>
cmd_gpioWrite():
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_function.h:341
      if (pinNum < 0 || pinNum > 7) {
        Serial.println(F("[!] Pin number must be 0-7."));
        continue;
      }

      if (toupper(portChar) == 'D' && (pinNum == 0 || pinNum == 1)) {
    274c:	84 34       	cpi	r24, 0x44	; 68
    274e:	91 05       	cpc	r25, r1
    2750:	31 f4       	brne	.+12     	; 0x275e <main+0xb84>
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_function.h:342
        Serial.println(F("[!] Can't modify PD0 or PD1 (used for Serial)."));
    2752:	8f e8       	ldi	r24, 0x8F	; 143
    2754:	9b e0       	ldi	r25, 0x0B	; 11
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_function.h:341
      if (pinNum < 0 || pinNum > 7) {
        Serial.println(F("[!] Pin number must be 0-7."));
        continue;
      }

      if (toupper(portChar) == 'D' && (pinNum == 0 || pinNum == 1)) {
    2756:	22 30       	cpi	r18, 0x02	; 2
    2758:	31 05       	cpc	r19, r1
    275a:	08 f4       	brcc	.+2      	; 0x275e <main+0xb84>
    275c:	56 cf       	rjmp	.-340    	; 0x260a <main+0xa30>
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_function.h:346
        Serial.println(F("[!] Can't modify PD0 or PD1 (used for Serial)."));
        continue;
      }

      *ddr |= (1 << pinNum); // Set output
    275e:	80 81       	ld	r24, Z
    2760:	34 01       	movw	r6, r8
    2762:	01 c0       	rjmp	.+2      	; 0x2766 <main+0xb8c>
    2764:	66 0c       	add	r6, r6
    2766:	4a 95       	dec	r20
    2768:	ea f7       	brpl	.-6      	; 0x2764 <main+0xb8a>
    276a:	86 29       	or	r24, r6
    276c:	80 83       	st	Z, r24
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_function.h:348

      if (tolower(stateChar) == 'h') {
    276e:	f8 01       	movw	r30, r16
    2770:	80 81       	ld	r24, Z
    2772:	08 2e       	mov	r0, r24
    2774:	00 0c       	add	r0, r0
    2776:	99 0b       	sbc	r25, r25
    2778:	0e 94 c4 1f 	call	0x3f88	; 0x3f88 <tolower>
    277c:	88 36       	cpi	r24, 0x68	; 104
    277e:	91 05       	cpc	r25, r1
    2780:	c1 f4       	brne	.+48     	; 0x27b2 <main+0xbd8>
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_function.h:349
        *port |= (1 << pinNum); // HIGH
    2782:	d7 01       	movw	r26, r14
    2784:	8c 91       	ld	r24, X
    2786:	68 2a       	or	r6, r24
    2788:	6c 92       	st	X, r6
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_function.h:350
        Serial.print(F("[S] GPIO P"));
    278a:	84 e8       	ldi	r24, 0x84	; 132
    278c:	9b e0       	ldi	r25, 0x0B	; 11
    278e:	0e 94 ef 09 	call	0x13de	; 0x13de <Print::print(__FlashStringHelper const*) [clone .constprop.26]>
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_function.h:351
        Serial.print((char)toupper(portChar));
    2792:	f6 01       	movw	r30, r12
    2794:	80 81       	ld	r24, Z
    2796:	08 2e       	mov	r0, r24
    2798:	00 0c       	add	r0, r0
    279a:	99 0b       	sbc	r25, r25
    279c:	0e 94 cc 1f 	call	0x3f98	; 0x3f98 <toupper>
    27a0:	0e 94 0a 0a 	call	0x1414	; 0x1414 <Print::print(char) [clone .constprop.18]>
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_function.h:352
        Serial.print(pinNum);
    27a4:	89 a9       	ldd	r24, Y+49	; 0x31
    27a6:	9a a9       	ldd	r25, Y+50	; 0x32
    27a8:	0e 94 c4 0a 	call	0x1588	; 0x1588 <Print::print(int, int) [clone .constprop.10]>
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_function.h:353
        Serial.println(F(" set HIGH."));
    27ac:	89 e7       	ldi	r24, 0x79	; 121
    27ae:	9b e0       	ldi	r25, 0x0B	; 11
    27b0:	2c cf       	rjmp	.-424    	; 0x260a <main+0xa30>
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_function.h:354
      } else if (tolower(stateChar) == 'l') {
    27b2:	8c 36       	cpi	r24, 0x6C	; 108
    27b4:	91 05       	cpc	r25, r1
    27b6:	c9 f4       	brne	.+50     	; 0x27ea <main+0xc10>
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_function.h:355
        *port &= ~(1 << pinNum); // LOW
    27b8:	d7 01       	movw	r26, r14
    27ba:	8c 91       	ld	r24, X
    27bc:	60 94       	com	r6
    27be:	68 22       	and	r6, r24
    27c0:	6c 92       	st	X, r6
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_function.h:356
        Serial.print(F("[S] GPIO P"));
    27c2:	8e e6       	ldi	r24, 0x6E	; 110
    27c4:	9b e0       	ldi	r25, 0x0B	; 11
    27c6:	0e 94 ef 09 	call	0x13de	; 0x13de <Print::print(__FlashStringHelper const*) [clone .constprop.26]>
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_function.h:357
        Serial.print((char)toupper(portChar));
    27ca:	f6 01       	movw	r30, r12
    27cc:	80 81       	ld	r24, Z
    27ce:	08 2e       	mov	r0, r24
    27d0:	00 0c       	add	r0, r0
    27d2:	99 0b       	sbc	r25, r25
    27d4:	0e 94 cc 1f 	call	0x3f98	; 0x3f98 <toupper>
    27d8:	0e 94 0a 0a 	call	0x1414	; 0x1414 <Print::print(char) [clone .constprop.18]>
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_function.h:358
        Serial.print(pinNum);
    27dc:	89 a9       	ldd	r24, Y+49	; 0x31
    27de:	9a a9       	ldd	r25, Y+50	; 0x32
    27e0:	0e 94 c4 0a 	call	0x1588	; 0x1588 <Print::print(int, int) [clone .constprop.10]>
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_function.h:359
        Serial.println(F(" set LOW."));
    27e4:	84 e6       	ldi	r24, 0x64	; 100
    27e6:	9b e0       	ldi	r25, 0x0B	; 11
    27e8:	10 cf       	rjmp	.-480    	; 0x260a <main+0xa30>
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_function.h:361
      } else {
        Serial.println(F("[!] Status invalid. Use 'h' or 'l'."));
    27ea:	80 e4       	ldi	r24, 0x40	; 64
    27ec:	9b e0       	ldi	r25, 0x0B	; 11
    27ee:	0d cf       	rjmp	.-486    	; 0x260a <main+0xa30>
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_function.h:365
      }

    } else {
      Serial.println(F("[!] Invalid format. Use 'gpio pa1 h' or 'gpio all l'."));
    27f0:	8a e0       	ldi	r24, 0x0A	; 10
    27f2:	9b e0       	ldi	r25, 0x0B	; 11
    27f4:	0a cf       	rjmp	.-492    	; 0x260a <main+0xa30>
_ZNK6StringeqEPKc():
C:\Users\LENOVO\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/WString.h:143
    27f6:	6f ed       	ldi	r22, 0xDF	; 223
    27f8:	71 e0       	ldi	r23, 0x01	; 1
    27fa:	ce 01       	movw	r24, r28
    27fc:	c7 96       	adiw	r24, 0x37	; 55
    27fe:	0e 94 41 0b 	call	0x1682	; 0x1682 <String::equals(char const*) const>
handleCommand():
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_function.h:511
    cmd_set_time();
  } else if (command == "calc"){
    cmd_calc();
  } else if (command == "gpio-write"){
    cmd_gpioWrite();
  } else if( command == "gpio-read"){
    2802:	88 23       	and	r24, r24
    2804:	09 f4       	brne	.+2      	; 0x2808 <main+0xc2e>
    2806:	e3 c0       	rjmp	.+454    	; 0x29ce <main+0xdf4>
cmd_gpioRead():
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_function.h:372
  }
}

void cmd_gpioRead() {
  char input[32];
  Serial.println(F("[i] Entering GPIO Read Mode. Type 'gpio [pin]' or 'gpio all'. Type 'exit' to quit."));
    2808:	87 eb       	ldi	r24, 0xB7	; 183
    280a:	9a e0       	ldi	r25, 0x0A	; 10
    280c:	0e 94 8e 0a 	call	0x151c	; 0x151c <Print::println(__FlashStringHelper const*) [clone .constprop.25]>
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_function.h:375

  // 🛠️ Set semua pin jadi INPUT dulu
  DDRA = 0x00;
    2810:	1a ba       	out	0x1a, r1	; 26
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_function.h:376
  DDRB = 0x00;
    2812:	17 ba       	out	0x17, r1	; 23
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_function.h:377
  DDRC = 0x00;
    2814:	14 ba       	out	0x14, r1	; 20
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_function.h:378
  DDRD = 0x00;
    2816:	11 ba       	out	0x11, r1	; 17
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_function.h:382

  while (true) {
    Serial.print(F("gpio_read>> "));
    readLine(input, sizeof(input));
    2818:	9e 01       	movw	r18, r28
    281a:	2f 5f       	subi	r18, 0xFF	; 255
    281c:	3f 4f       	sbci	r19, 0xFF	; 255
    281e:	49 01       	movw	r8, r18
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_function.h:381
  DDRB = 0x00;
  DDRC = 0x00;
  DDRD = 0x00;

  while (true) {
    Serial.print(F("gpio_read>> "));
    2820:	8a ea       	ldi	r24, 0xAA	; 170
    2822:	9a e0       	ldi	r25, 0x0A	; 10
    2824:	0e 94 ef 09 	call	0x13de	; 0x13de <Print::print(__FlashStringHelper const*) [clone .constprop.26]>
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_function.h:382
    readLine(input, sizeof(input));
    2828:	60 e2       	ldi	r22, 0x20	; 32
    282a:	70 e0       	ldi	r23, 0x00	; 0
    282c:	c4 01       	movw	r24, r8
    282e:	0e 94 56 0b 	call	0x16ac	; 0x16ac <readLine(char*, int)>
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_function.h:384

    if (strcmp(input, "exit") == 0) {
    2832:	60 e9       	ldi	r22, 0x90	; 144
    2834:	70 e0       	ldi	r23, 0x00	; 0
    2836:	c4 01       	movw	r24, r8
    2838:	0e 94 dd 1f 	call	0x3fba	; 0x3fba <strcmp>
    283c:	89 2b       	or	r24, r25
    283e:	19 f4       	brne	.+6      	; 0x2846 <main+0xc6c>
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_function.h:385
      Serial.println(F("[X] Exit from GPIO Read Mode."));
    2840:	8c e8       	ldi	r24, 0x8C	; 140
    2842:	9a e0       	ldi	r25, 0x0A	; 10
    2844:	67 cb       	rjmp	.-2354   	; 0x1f14 <main+0x33a>
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_function.h:393

    char portChar;
    int pinNum;

    // Baca satu pin: gpio pa2
    if (sscanf(input, "gpio p%c%d", &portChar, &pinNum) == 2) {
    2846:	ce 01       	movw	r24, r28
    2848:	c1 96       	adiw	r24, 0x31	; 49
    284a:	9f 93       	push	r25
    284c:	8f 93       	push	r24
    284e:	1f 93       	push	r17
    2850:	0f 93       	push	r16
    2852:	89 ee       	ldi	r24, 0xE9	; 233
    2854:	91 e0       	ldi	r25, 0x01	; 1
    2856:	9f 93       	push	r25
    2858:	8f 93       	push	r24
    285a:	9f 92       	push	r9
    285c:	8f 92       	push	r8
    285e:	0e 94 1e 20 	call	0x403c	; 0x403c <sscanf>
    2862:	0f b6       	in	r0, 0x3f	; 63
    2864:	f8 94       	cli
    2866:	de bf       	out	0x3e, r29	; 62
    2868:	0f be       	out	0x3f, r0	; 63
    286a:	cd bf       	out	0x3d, r28	; 61
    286c:	02 97       	sbiw	r24, 0x02	; 2
    286e:	09 f0       	breq	.+2      	; 0x2872 <main+0xc98>
    2870:	53 c0       	rjmp	.+166    	; 0x2918 <main+0xd3e>
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_function.h:396
      volatile uint8_t* pin;

      switch (toupper(portChar)) {
    2872:	f8 01       	movw	r30, r16
    2874:	80 81       	ld	r24, Z
    2876:	08 2e       	mov	r0, r24
    2878:	00 0c       	add	r0, r0
    287a:	99 0b       	sbc	r25, r25
    287c:	0e 94 cc 1f 	call	0x3f98	; 0x3f98 <toupper>
    2880:	82 34       	cpi	r24, 0x42	; 66
    2882:	91 05       	cpc	r25, r1
    2884:	f9 f0       	breq	.+62     	; 0x28c4 <main+0xcea>
    2886:	54 f4       	brge	.+20     	; 0x289c <main+0xcc2>
main():
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_function.h:397
        case 'A': pin = &PINA; break;
    2888:	e9 e3       	ldi	r30, 0x39	; 57
    288a:	f0 e0       	ldi	r31, 0x00	; 0
cmd_gpioRead():
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_function.h:396

    // Baca satu pin: gpio pa2
    if (sscanf(input, "gpio p%c%d", &portChar, &pinNum) == 2) {
      volatile uint8_t* pin;

      switch (toupper(portChar)) {
    288c:	81 34       	cpi	r24, 0x41	; 65
    288e:	91 05       	cpc	r25, r1
    2890:	69 f0       	breq	.+26     	; 0x28ac <main+0xcd2>
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_function.h:402
        case 'A': pin = &PINA; break;
        case 'B': pin = &PINB; break;
        case 'C': pin = &PINC; break;
        case 'D': pin = &PIND; break;
        default:
          Serial.println(F("[!] Port invalid. Use PA, PB, PC, or PD."));
    2892:	83 e6       	ldi	r24, 0x63	; 99
    2894:	9a e0       	ldi	r25, 0x0A	; 10
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_function.h:407
          continue;
      }

      if (pinNum < 0 || pinNum > 7) {
        Serial.println(F("[!] Pin number must be 0-7."));
    2896:	0e 94 8e 0a 	call	0x151c	; 0x151c <Print::println(__FlashStringHelper const*) [clone .constprop.25]>
    289a:	c2 cf       	rjmp	.-124    	; 0x2820 <main+0xc46>
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_function.h:396

    // Baca satu pin: gpio pa2
    if (sscanf(input, "gpio p%c%d", &portChar, &pinNum) == 2) {
      volatile uint8_t* pin;

      switch (toupper(portChar)) {
    289c:	83 34       	cpi	r24, 0x43	; 67
    289e:	91 05       	cpc	r25, r1
    28a0:	71 f0       	breq	.+28     	; 0x28be <main+0xce4>
main():
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_function.h:400
        case 'A': pin = &PINA; break;
        case 'B': pin = &PINB; break;
        case 'C': pin = &PINC; break;
        case 'D': pin = &PIND; break;
    28a2:	e0 e3       	ldi	r30, 0x30	; 48
    28a4:	f0 e0       	ldi	r31, 0x00	; 0
cmd_gpioRead():
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_function.h:396

    // Baca satu pin: gpio pa2
    if (sscanf(input, "gpio p%c%d", &portChar, &pinNum) == 2) {
      volatile uint8_t* pin;

      switch (toupper(portChar)) {
    28a6:	84 34       	cpi	r24, 0x44	; 68
    28a8:	91 05       	cpc	r25, r1
    28aa:	99 f7       	brne	.-26     	; 0x2892 <main+0xcb8>
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_function.h:406
        default:
          Serial.println(F("[!] Port invalid. Use PA, PB, PC, or PD."));
          continue;
      }

      if (pinNum < 0 || pinNum > 7) {
    28ac:	e9 a8       	ldd	r14, Y+49	; 0x31
    28ae:	fa a8       	ldd	r15, Y+50	; 0x32
    28b0:	28 e0       	ldi	r18, 0x08	; 8
    28b2:	e2 16       	cp	r14, r18
    28b4:	f1 04       	cpc	r15, r1
    28b6:	48 f0       	brcs	.+18     	; 0x28ca <main+0xcf0>
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_function.h:407
        Serial.println(F("[!] Pin number must be 0-7."));
    28b8:	87 e4       	ldi	r24, 0x47	; 71
    28ba:	9a e0       	ldi	r25, 0x0A	; 10
    28bc:	ec cf       	rjmp	.-40     	; 0x2896 <main+0xcbc>
main():
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_function.h:399
      volatile uint8_t* pin;

      switch (toupper(portChar)) {
        case 'A': pin = &PINA; break;
        case 'B': pin = &PINB; break;
        case 'C': pin = &PINC; break;
    28be:	e3 e3       	ldi	r30, 0x33	; 51
    28c0:	f0 e0       	ldi	r31, 0x00	; 0
    28c2:	f4 cf       	rjmp	.-24     	; 0x28ac <main+0xcd2>
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_function.h:398
    if (sscanf(input, "gpio p%c%d", &portChar, &pinNum) == 2) {
      volatile uint8_t* pin;

      switch (toupper(portChar)) {
        case 'A': pin = &PINA; break;
        case 'B': pin = &PINB; break;
    28c4:	e6 e3       	ldi	r30, 0x36	; 54
    28c6:	f0 e0       	ldi	r31, 0x00	; 0
    28c8:	f1 cf       	rjmp	.-30     	; 0x28ac <main+0xcd2>
cmd_gpioRead():
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_function.h:411
      if (pinNum < 0 || pinNum > 7) {
        Serial.println(F("[!] Pin number must be 0-7."));
        continue;
      }

      bool state = (*pin & (1 << pinNum));
    28ca:	f0 80       	ld	r15, Z
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_function.h:412
      Serial.print(F("[i] GPIO P"));
    28cc:	8c e3       	ldi	r24, 0x3C	; 60
    28ce:	9a e0       	ldi	r25, 0x0A	; 10
    28d0:	0e 94 ef 09 	call	0x13de	; 0x13de <Print::print(__FlashStringHelper const*) [clone .constprop.26]>
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_function.h:413
      Serial.print((char)toupper(portChar));
    28d4:	d8 01       	movw	r26, r16
    28d6:	8c 91       	ld	r24, X
    28d8:	08 2e       	mov	r0, r24
    28da:	00 0c       	add	r0, r0
    28dc:	99 0b       	sbc	r25, r25
    28de:	0e 94 cc 1f 	call	0x3f98	; 0x3f98 <toupper>
    28e2:	0e 94 0a 0a 	call	0x1414	; 0x1414 <Print::print(char) [clone .constprop.18]>
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_function.h:414
      Serial.print(pinNum);
    28e6:	89 a9       	ldd	r24, Y+49	; 0x31
    28e8:	9a a9       	ldd	r25, Y+50	; 0x32
    28ea:	0e 94 c4 0a 	call	0x1588	; 0x1588 <Print::print(int, int) [clone .constprop.10]>
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_function.h:415
      Serial.print(F(" is "));
    28ee:	87 e3       	ldi	r24, 0x37	; 55
    28f0:	9a e0       	ldi	r25, 0x0A	; 10
    28f2:	0e 94 ef 09 	call	0x13de	; 0x13de <Print::print(__FlashStringHelper const*) [clone .constprop.26]>
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_function.h:411
      if (pinNum < 0 || pinNum > 7) {
        Serial.println(F("[!] Pin number must be 0-7."));
        continue;
      }

      bool state = (*pin & (1 << pinNum));
    28f6:	8f 2d       	mov	r24, r15
    28f8:	90 e0       	ldi	r25, 0x00	; 0
    28fa:	02 c0       	rjmp	.+4      	; 0x2900 <main+0xd26>
    28fc:	95 95       	asr	r25
    28fe:	87 95       	ror	r24
    2900:	ea 94       	dec	r14
    2902:	e2 f7       	brpl	.-8      	; 0x28fc <main+0xd22>
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_function.h:416
      Serial.print(F("[i] GPIO P"));
      Serial.print((char)toupper(portChar));
      Serial.print(pinNum);
      Serial.print(F(" is "));
      Serial.println(state ? "HIGH [1]" : "LOW  [0]");
    2904:	80 ff       	sbrs	r24, 0
    2906:	05 c0       	rjmp	.+10     	; 0x2912 <main+0xd38>
main():
    2908:	8f ed       	ldi	r24, 0xDF	; 223
    290a:	90 e0       	ldi	r25, 0x00	; 0
cmd_gpioRead():
    290c:	0e 94 80 0a 	call	0x1500	; 0x1500 <Print::println(char const*) [clone .constprop.27]>
    2910:	87 cf       	rjmp	.-242    	; 0x2820 <main+0xc46>
main():
    2912:	88 ee       	ldi	r24, 0xE8	; 232
    2914:	90 e0       	ldi	r25, 0x00	; 0
    2916:	fa cf       	rjmp	.-12     	; 0x290c <main+0xd32>
cmd_gpioRead():
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_function.h:421
      continue;
    }

    // Baca semua pin: gpio all
    if (strcmp(input, "gpio all") == 0) {
    2918:	64 ef       	ldi	r22, 0xF4	; 244
    291a:	71 e0       	ldi	r23, 0x01	; 1
    291c:	c4 01       	movw	r24, r8
    291e:	0e 94 dd 1f 	call	0x3fba	; 0x3fba <strcmp>
    2922:	89 2b       	or	r24, r25
    2924:	09 f0       	breq	.+2      	; 0x2928 <main+0xd4e>
    2926:	50 c0       	rjmp	.+160    	; 0x29c8 <main+0xdee>
main():
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_function.h:422
      for (char portChar = 'A'; portChar <= 'D'; portChar++) {
    2928:	91 e4       	ldi	r25, 0x41	; 65
    292a:	f9 2e       	mov	r15, r25
    292c:	46 c0       	rjmp	.+140    	; 0x29ba <main+0xde0>
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_function.h:427
        volatile uint8_t* pin;

        switch (portChar) {
          case 'A': pin = &PINA; break;
          case 'B': pin = &PINB; break;
    292e:	26 e3       	ldi	r18, 0x36	; 54
    2930:	a2 2e       	mov	r10, r18
    2932:	b1 2c       	mov	r11, r1
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_function.h:432
          case 'C': pin = &PINC; break;
          case 'D': pin = &PIND; break;
        }

        for (int pinNum = 0; pinNum < 8; pinNum++) {
    2934:	d1 2c       	mov	r13, r1
    2936:	c1 2c       	mov	r12, r1
cmd_gpioRead():
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_function.h:433
          if (portChar == 'D' && (pinNum == 0 || pinNum == 1)) continue;
    2938:	24 e4       	ldi	r18, 0x44	; 68
    293a:	f2 12       	cpse	r15, r18
    293c:	04 c0       	rjmp	.+8      	; 0x2946 <main+0xd6c>
    293e:	32 e0       	ldi	r19, 0x02	; 2
    2940:	c3 16       	cp	r12, r19
    2942:	d1 04       	cpc	r13, r1
    2944:	f4 f0       	brlt	.+60     	; 0x2982 <main+0xda8>
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_function.h:435

          bool state = (*pin & (1 << pinNum));
    2946:	d5 01       	movw	r26, r10
    2948:	ec 90       	ld	r14, X
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_function.h:436
          Serial.print(F("[i] P"));
    294a:	81 e3       	ldi	r24, 0x31	; 49
    294c:	9a e0       	ldi	r25, 0x0A	; 10
    294e:	0e 94 ef 09 	call	0x13de	; 0x13de <Print::print(__FlashStringHelper const*) [clone .constprop.26]>
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_function.h:437
          Serial.print(portChar);
    2952:	8f 2d       	mov	r24, r15
    2954:	0e 94 0a 0a 	call	0x1414	; 0x1414 <Print::print(char) [clone .constprop.18]>
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_function.h:438
          Serial.print(pinNum);
    2958:	c6 01       	movw	r24, r12
    295a:	0e 94 c4 0a 	call	0x1588	; 0x1588 <Print::print(int, int) [clone .constprop.10]>
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_function.h:439
          Serial.print(F(": "));
    295e:	8e e2       	ldi	r24, 0x2E	; 46
    2960:	9a e0       	ldi	r25, 0x0A	; 10
    2962:	0e 94 ef 09 	call	0x13de	; 0x13de <Print::print(__FlashStringHelper const*) [clone .constprop.26]>
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_function.h:435
        }

        for (int pinNum = 0; pinNum < 8; pinNum++) {
          if (portChar == 'D' && (pinNum == 0 || pinNum == 1)) continue;

          bool state = (*pin & (1 << pinNum));
    2966:	8e 2d       	mov	r24, r14
    2968:	90 e0       	ldi	r25, 0x00	; 0
    296a:	0c 2c       	mov	r0, r12
    296c:	02 c0       	rjmp	.+4      	; 0x2972 <main+0xd98>
    296e:	95 95       	asr	r25
    2970:	87 95       	ror	r24
    2972:	0a 94       	dec	r0
    2974:	e2 f7       	brpl	.-8      	; 0x296e <main+0xd94>
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_function.h:440
          Serial.print(F("[i] P"));
          Serial.print(portChar);
          Serial.print(pinNum);
          Serial.print(F(": "));
          Serial.println(state ? "HIGH [1]" : "LOW  [0]");
    2976:	80 ff       	sbrs	r24, 0
    2978:	24 c0       	rjmp	.+72     	; 0x29c2 <main+0xde8>
main():
    297a:	8f ed       	ldi	r24, 0xDF	; 223
    297c:	90 e0       	ldi	r25, 0x00	; 0
cmd_gpioRead():
    297e:	0e 94 80 0a 	call	0x1500	; 0x1500 <Print::println(char const*) [clone .constprop.27]>
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_function.h:432
          case 'B': pin = &PINB; break;
          case 'C': pin = &PINC; break;
          case 'D': pin = &PIND; break;
        }

        for (int pinNum = 0; pinNum < 8; pinNum++) {
    2982:	bf ef       	ldi	r27, 0xFF	; 255
    2984:	cb 1a       	sub	r12, r27
    2986:	db 0a       	sbc	r13, r27
    2988:	e8 e0       	ldi	r30, 0x08	; 8
    298a:	ce 16       	cp	r12, r30
    298c:	d1 04       	cpc	r13, r1
    298e:	a1 f6       	brne	.-88     	; 0x2938 <main+0xd5e>
    2990:	f3 94       	inc	r15
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_function.h:422
      continue;
    }

    // Baca semua pin: gpio all
    if (strcmp(input, "gpio all") == 0) {
      for (char portChar = 'A'; portChar <= 'D'; portChar++) {
    2992:	f5 e4       	ldi	r31, 0x45	; 69
    2994:	ff 16       	cp	r15, r31
    2996:	09 f4       	brne	.+2      	; 0x299a <main+0xdc0>
    2998:	43 cf       	rjmp	.-378    	; 0x2820 <main+0xc46>
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_function.h:425
        volatile uint8_t* pin;

        switch (portChar) {
    299a:	b3 e4       	ldi	r27, 0x43	; 67
main():
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_function.h:428
          case 'A': pin = &PINA; break;
          case 'B': pin = &PINB; break;
          case 'C': pin = &PINC; break;
    299c:	43 e3       	ldi	r20, 0x33	; 51
    299e:	a4 2e       	mov	r10, r20
    29a0:	b1 2c       	mov	r11, r1
cmd_gpioRead():
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_function.h:425
    // Baca semua pin: gpio all
    if (strcmp(input, "gpio all") == 0) {
      for (char portChar = 'A'; portChar <= 'D'; portChar++) {
        volatile uint8_t* pin;

        switch (portChar) {
    29a2:	fb 16       	cp	r15, r27
    29a4:	39 f2       	breq	.-114    	; 0x2934 <main+0xd5a>
    29a6:	e4 e4       	ldi	r30, 0x44	; 68
main():
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_function.h:429
          case 'A': pin = &PINA; break;
          case 'B': pin = &PINB; break;
          case 'C': pin = &PINC; break;
          case 'D': pin = &PIND; break;
    29a8:	30 e3       	ldi	r19, 0x30	; 48
    29aa:	a3 2e       	mov	r10, r19
    29ac:	b1 2c       	mov	r11, r1
cmd_gpioRead():
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_function.h:425
    // Baca semua pin: gpio all
    if (strcmp(input, "gpio all") == 0) {
      for (char portChar = 'A'; portChar <= 'D'; portChar++) {
        volatile uint8_t* pin;

        switch (portChar) {
    29ae:	fe 16       	cp	r15, r30
    29b0:	09 f2       	breq	.-126    	; 0x2934 <main+0xd5a>
    29b2:	f2 e4       	ldi	r31, 0x42	; 66
    29b4:	ff 16       	cp	r15, r31
    29b6:	09 f4       	brne	.+2      	; 0x29ba <main+0xde0>
    29b8:	ba cf       	rjmp	.-140    	; 0x292e <main+0xd54>
main():
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_function.h:426
          case 'A': pin = &PINA; break;
    29ba:	89 e3       	ldi	r24, 0x39	; 57
    29bc:	a8 2e       	mov	r10, r24
    29be:	b1 2c       	mov	r11, r1
    29c0:	b9 cf       	rjmp	.-142    	; 0x2934 <main+0xd5a>
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_function.h:440
          bool state = (*pin & (1 << pinNum));
          Serial.print(F("[i] P"));
          Serial.print(portChar);
          Serial.print(pinNum);
          Serial.print(F(": "));
          Serial.println(state ? "HIGH [1]" : "LOW  [0]");
    29c2:	88 ee       	ldi	r24, 0xE8	; 232
    29c4:	90 e0       	ldi	r25, 0x00	; 0
    29c6:	db cf       	rjmp	.-74     	; 0x297e <main+0xda4>
cmd_gpioRead():
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_function.h:447
      }
      continue;
    }

    // Format gak valid
    Serial.println(F("[!] Format invalid. Try: 'gpio pa0' or 'gpio all'."));
    29c8:	8b ef       	ldi	r24, 0xFB	; 251
    29ca:	99 e0       	ldi	r25, 0x09	; 9
    29cc:	64 cf       	rjmp	.-312    	; 0x2896 <main+0xcbc>
_ZNK6StringeqEPKc():
C:\Users\LENOVO\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/WString.h:143
    29ce:	6d ef       	ldi	r22, 0xFD	; 253
    29d0:	71 e0       	ldi	r23, 0x01	; 1
    29d2:	ce 01       	movw	r24, r28
    29d4:	c7 96       	adiw	r24, 0x37	; 55
    29d6:	0e 94 41 0b 	call	0x1682	; 0x1682 <String::equals(char const*) const>
handleCommand():
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_function.h:513
    cmd_calc();
  } else if (command == "gpio-write"){
    cmd_gpioWrite();
  } else if( command == "gpio-read"){
    cmd_gpioRead();
  } else if ( command == "eeprom-wipe"){
    29da:	88 23       	and	r24, r24
    29dc:	09 f4       	brne	.+2      	; 0x29e0 <main+0xe06>
    29de:	41 c0       	rjmp	.+130    	; 0x2a62 <main+0xe88>
cmd_eeprom_wipe():
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_function.h:453
  }
}

// ===== Dangerous Command =====
void cmd_eeprom_wipe() {
  Serial.println(F("[!] WARNING: This will erase ALL INTERNAL EEPROM data!"));
    29e0:	84 ec       	ldi	r24, 0xC4	; 196
    29e2:	99 e0       	ldi	r25, 0x09	; 9
    29e4:	0e 94 8e 0a 	call	0x151c	; 0x151c <Print::println(__FlashStringHelper const*) [clone .constprop.25]>
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_function.h:455

  if (!loggedIn){
    29e8:	80 91 34 02 	lds	r24, 0x0234	; 0x800234 <loggedIn>
    29ec:	81 11       	cpse	r24, r1
    29ee:	03 c0       	rjmp	.+6      	; 0x29f6 <main+0xe1c>
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_function.h:456
    Serial.println(F("[i] You need to login first! Type 'login' to login."));
    29f0:	80 e9       	ldi	r24, 0x90	; 144
    29f2:	99 e0       	ldi	r25, 0x09	; 9
    29f4:	8f ca       	rjmp	.-2786   	; 0x1f14 <main+0x33a>
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_function.h:458
  } else {
    Serial.println(F("Type 'CONFIRM' to proceed:"));
    29f6:	85 e7       	ldi	r24, 0x75	; 117
    29f8:	99 e0       	ldi	r25, 0x09	; 9
    29fa:	0e 94 8e 0a 	call	0x151c	; 0x151c <Print::println(__FlashStringHelper const*) [clone .constprop.25]>
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_function.h:461

    char input[16];
    readLine(input, sizeof(input)); // Fungsi baca string dari Serial
    29fe:	60 e1       	ldi	r22, 0x10	; 16
    2a00:	70 e0       	ldi	r23, 0x00	; 0
    2a02:	ce 01       	movw	r24, r28
    2a04:	81 96       	adiw	r24, 0x21	; 33
    2a06:	0e 94 56 0b 	call	0x16ac	; 0x16ac <readLine(char*, int)>
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_function.h:463

    if (strcmp(input, "CONFIRM") != 0) {
    2a0a:	69 e0       	ldi	r22, 0x09	; 9
    2a0c:	72 e0       	ldi	r23, 0x02	; 2
    2a0e:	ce 01       	movw	r24, r28
    2a10:	81 96       	adiw	r24, 0x21	; 33
    2a12:	0e 94 dd 1f 	call	0x3fba	; 0x3fba <strcmp>
    2a16:	7c 01       	movw	r14, r24
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_function.h:464
      Serial.println(F("[X] Cancelled. EEPROM not erased."));
    2a18:	83 e5       	ldi	r24, 0x53	; 83
    2a1a:	99 e0       	ldi	r25, 0x09	; 9
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_function.h:463
    Serial.println(F("Type 'CONFIRM' to proceed:"));

    char input[16];
    readLine(input, sizeof(input)); // Fungsi baca string dari Serial

    if (strcmp(input, "CONFIRM") != 0) {
    2a1c:	e1 14       	cp	r14, r1
    2a1e:	f1 04       	cpc	r15, r1
    2a20:	09 f0       	breq	.+2      	; 0x2a24 <main+0xe4a>
    2a22:	78 ca       	rjmp	.-2832   	; 0x1f14 <main+0x33a>
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_function.h:468
      Serial.println(F("[X] Cancelled. EEPROM not erased."));
      return;
    }

    Serial.println(F("[DC] Erasing EEPROM..."));
    2a24:	8c e3       	ldi	r24, 0x3C	; 60
    2a26:	99 e0       	ldi	r25, 0x09	; 9
    2a28:	0e 94 8e 0a 	call	0x151c	; 0x151c <Print::println(__FlashStringHelper const*) [clone .constprop.25]>
operator=():
C:\Users\LENOVO\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\3.0.2\libraries\EEPROM\src/EEPROM.h:47
    operator uint8_t() const             { return **this; }
    
    //Assignment/write members.
    EERef &operator=( const EERef &ref ) { return *this = *ref; }
    EERef &operator=( uint8_t in )       { return eeprom_write_byte( (uint8_t*) index, in ), *this;  }
    2a2c:	6f ef       	ldi	r22, 0xFF	; 255
    2a2e:	c7 01       	movw	r24, r14
    2a30:	0e 94 83 1b 	call	0x3706	; 0x3706 <eeprom_write_byte>
cmd_eeprom_wipe():
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_function.h:472

    for (int i = 0; i < 1024; i++) {
      EEPROM.write(i, 0xFF); // Biasanya default EEPROM kosong = 0xFF
      if (i % 64 == 0) Serial.print("."); // Progress dot tiap 64 byte
    2a34:	c7 01       	movw	r24, r14
    2a36:	8f 73       	andi	r24, 0x3F	; 63
    2a38:	99 27       	eor	r25, r25
    2a3a:	89 2b       	or	r24, r25
    2a3c:	21 f4       	brne	.+8      	; 0x2a46 <main+0xe6c>
write():
    2a3e:	8d ed       	ldi	r24, 0xDD	; 221
    2a40:	90 e0       	ldi	r25, 0x00	; 0
    2a42:	0e 94 2f 0a 	call	0x145e	; 0x145e <Print::write(char const*) [clone .part.2] [clone .constprop.30]>
cmd_eeprom_wipe():
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_function.h:470
      return;
    }

    Serial.println(F("[DC] Erasing EEPROM..."));

    for (int i = 0; i < 1024; i++) {
    2a46:	2f ef       	ldi	r18, 0xFF	; 255
    2a48:	e2 1a       	sub	r14, r18
    2a4a:	f2 0a       	sbc	r15, r18
    2a4c:	e1 14       	cp	r14, r1
    2a4e:	34 e0       	ldi	r19, 0x04	; 4
    2a50:	f3 06       	cpc	r15, r19
    2a52:	61 f7       	brne	.-40     	; 0x2a2c <main+0xe52>
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_function.h:474
      EEPROM.write(i, 0xFF); // Biasanya default EEPROM kosong = 0xFF
      if (i % 64 == 0) Serial.print("."); // Progress dot tiap 64 byte
    }
    Serial.println(F(""));
    2a54:	8b e3       	ldi	r24, 0x3B	; 59
    2a56:	99 e0       	ldi	r25, 0x09	; 9
    2a58:	0e 94 8e 0a 	call	0x151c	; 0x151c <Print::println(__FlashStringHelper const*) [clone .constprop.25]>
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_function.h:475
    Serial.println(F("[S] EEPROM wiped successfully."));
    2a5c:	8c e1       	ldi	r24, 0x1C	; 28
    2a5e:	99 e0       	ldi	r25, 0x09	; 9
    2a60:	59 ca       	rjmp	.-2894   	; 0x1f14 <main+0x33a>
handleCommand():
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_function.h:516
  } else if( command == "gpio-read"){
    cmd_gpioRead();
  } else if ( command == "eeprom-wipe"){
    cmd_eeprom_wipe();
  } else {
    Serial.print(F("[X] Unknown command with '"));
    2a62:	8e e6       	ldi	r24, 0x6E	; 110
    2a64:	90 e1       	ldi	r25, 0x10	; 16
    2a66:	0e 94 ef 09 	call	0x13de	; 0x13de <Print::print(__FlashStringHelper const*) [clone .constprop.26]>
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_function.h:517
    Serial.print(command);
    2a6a:	ce 01       	movw	r24, r28
    2a6c:	c7 96       	adiw	r24, 0x37	; 55
    2a6e:	0e 94 28 09 	call	0x1250	; 0x1250 <Print::print(String const&) [clone .constprop.15]>
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_function.h:518
    Serial.println(F("'. Try 'help' to see all commands."));
    2a72:	8b e4       	ldi	r24, 0x4B	; 75
    2a74:	90 e1       	ldi	r25, 0x10	; 16
    2a76:	4e ca       	rjmp	.-2916   	; 0x1f14 <main+0x33a>

00002a78 <_GLOBAL__sub_D_username_now>:
_GLOBAL__sub_D_username_now():
Z:\PROJECT ASSET\Project\ELENA CLI COM (.ino)\main/elena_user.h:7
#define ELENA_USER_H

#include "elena_eeprom.h"

bool loggedIn = false;
String usernow;
    2a78:	8b ed       	ldi	r24, 0xDB	; 219
    2a7a:	92 e0       	ldi	r25, 0x02	; 2
    2a7c:	0c 94 ec 0b 	jmp	0x17d8	; 0x17d8 <String::~String()>

00002a80 <malloc>:
malloc():
    2a80:	0f 93       	push	r16
    2a82:	1f 93       	push	r17
    2a84:	cf 93       	push	r28
    2a86:	df 93       	push	r29
    2a88:	82 30       	cpi	r24, 0x02	; 2
    2a8a:	91 05       	cpc	r25, r1
    2a8c:	10 f4       	brcc	.+4      	; 0x2a92 <malloc+0x12>
    2a8e:	82 e0       	ldi	r24, 0x02	; 2
    2a90:	90 e0       	ldi	r25, 0x00	; 0
    2a92:	e0 91 e3 02 	lds	r30, 0x02E3	; 0x8002e3 <__flp>
    2a96:	f0 91 e4 02 	lds	r31, 0x02E4	; 0x8002e4 <__flp+0x1>
    2a9a:	30 e0       	ldi	r19, 0x00	; 0
    2a9c:	20 e0       	ldi	r18, 0x00	; 0
    2a9e:	b0 e0       	ldi	r27, 0x00	; 0
    2aa0:	a0 e0       	ldi	r26, 0x00	; 0
    2aa2:	30 97       	sbiw	r30, 0x00	; 0
    2aa4:	99 f4       	brne	.+38     	; 0x2acc <malloc+0x4c>
    2aa6:	21 15       	cp	r18, r1
    2aa8:	31 05       	cpc	r19, r1
    2aaa:	09 f4       	brne	.+2      	; 0x2aae <malloc+0x2e>
    2aac:	4a c0       	rjmp	.+148    	; 0x2b42 <malloc+0xc2>
    2aae:	28 1b       	sub	r18, r24
    2ab0:	39 0b       	sbc	r19, r25
    2ab2:	24 30       	cpi	r18, 0x04	; 4
    2ab4:	31 05       	cpc	r19, r1
    2ab6:	d8 f5       	brcc	.+118    	; 0x2b2e <malloc+0xae>
    2ab8:	8a 81       	ldd	r24, Y+2	; 0x02
    2aba:	9b 81       	ldd	r25, Y+3	; 0x03
    2abc:	61 15       	cp	r22, r1
    2abe:	71 05       	cpc	r23, r1
    2ac0:	89 f1       	breq	.+98     	; 0x2b24 <malloc+0xa4>
    2ac2:	fb 01       	movw	r30, r22
    2ac4:	93 83       	std	Z+3, r25	; 0x03
    2ac6:	82 83       	std	Z+2, r24	; 0x02
    2ac8:	fe 01       	movw	r30, r28
    2aca:	11 c0       	rjmp	.+34     	; 0x2aee <malloc+0x6e>
    2acc:	40 81       	ld	r20, Z
    2ace:	51 81       	ldd	r21, Z+1	; 0x01
    2ad0:	02 81       	ldd	r16, Z+2	; 0x02
    2ad2:	13 81       	ldd	r17, Z+3	; 0x03
    2ad4:	48 17       	cp	r20, r24
    2ad6:	59 07       	cpc	r21, r25
    2ad8:	e0 f0       	brcs	.+56     	; 0x2b12 <malloc+0x92>
    2ada:	48 17       	cp	r20, r24
    2adc:	59 07       	cpc	r21, r25
    2ade:	99 f4       	brne	.+38     	; 0x2b06 <malloc+0x86>
    2ae0:	10 97       	sbiw	r26, 0x00	; 0
    2ae2:	61 f0       	breq	.+24     	; 0x2afc <malloc+0x7c>
    2ae4:	12 96       	adiw	r26, 0x02	; 2
    2ae6:	0c 93       	st	X, r16
    2ae8:	12 97       	sbiw	r26, 0x02	; 2
    2aea:	13 96       	adiw	r26, 0x03	; 3
    2aec:	1c 93       	st	X, r17
    2aee:	32 96       	adiw	r30, 0x02	; 2
    2af0:	cf 01       	movw	r24, r30
    2af2:	df 91       	pop	r29
    2af4:	cf 91       	pop	r28
    2af6:	1f 91       	pop	r17
    2af8:	0f 91       	pop	r16
    2afa:	08 95       	ret
    2afc:	00 93 e3 02 	sts	0x02E3, r16	; 0x8002e3 <__flp>
    2b00:	10 93 e4 02 	sts	0x02E4, r17	; 0x8002e4 <__flp+0x1>
    2b04:	f4 cf       	rjmp	.-24     	; 0x2aee <malloc+0x6e>
    2b06:	21 15       	cp	r18, r1
    2b08:	31 05       	cpc	r19, r1
    2b0a:	51 f0       	breq	.+20     	; 0x2b20 <malloc+0xa0>
    2b0c:	42 17       	cp	r20, r18
    2b0e:	53 07       	cpc	r21, r19
    2b10:	38 f0       	brcs	.+14     	; 0x2b20 <malloc+0xa0>
    2b12:	a9 01       	movw	r20, r18
    2b14:	db 01       	movw	r26, r22
    2b16:	9a 01       	movw	r18, r20
    2b18:	bd 01       	movw	r22, r26
    2b1a:	df 01       	movw	r26, r30
    2b1c:	f8 01       	movw	r30, r16
    2b1e:	c1 cf       	rjmp	.-126    	; 0x2aa2 <malloc+0x22>
    2b20:	ef 01       	movw	r28, r30
    2b22:	f9 cf       	rjmp	.-14     	; 0x2b16 <malloc+0x96>
    2b24:	90 93 e4 02 	sts	0x02E4, r25	; 0x8002e4 <__flp+0x1>
    2b28:	80 93 e3 02 	sts	0x02E3, r24	; 0x8002e3 <__flp>
    2b2c:	cd cf       	rjmp	.-102    	; 0x2ac8 <malloc+0x48>
    2b2e:	fe 01       	movw	r30, r28
    2b30:	e2 0f       	add	r30, r18
    2b32:	f3 1f       	adc	r31, r19
    2b34:	81 93       	st	Z+, r24
    2b36:	91 93       	st	Z+, r25
    2b38:	22 50       	subi	r18, 0x02	; 2
    2b3a:	31 09       	sbc	r19, r1
    2b3c:	39 83       	std	Y+1, r19	; 0x01
    2b3e:	28 83       	st	Y, r18
    2b40:	d7 cf       	rjmp	.-82     	; 0x2af0 <malloc+0x70>
    2b42:	20 91 e1 02 	lds	r18, 0x02E1	; 0x8002e1 <__brkval>
    2b46:	30 91 e2 02 	lds	r19, 0x02E2	; 0x8002e2 <__brkval+0x1>
    2b4a:	23 2b       	or	r18, r19
    2b4c:	41 f4       	brne	.+16     	; 0x2b5e <malloc+0xde>
    2b4e:	20 91 62 00 	lds	r18, 0x0062	; 0x800062 <__malloc_heap_start>
    2b52:	30 91 63 00 	lds	r19, 0x0063	; 0x800063 <__malloc_heap_start+0x1>
    2b56:	30 93 e2 02 	sts	0x02E2, r19	; 0x8002e2 <__brkval+0x1>
    2b5a:	20 93 e1 02 	sts	0x02E1, r18	; 0x8002e1 <__brkval>
    2b5e:	20 91 60 00 	lds	r18, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
    2b62:	30 91 61 00 	lds	r19, 0x0061	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
    2b66:	21 15       	cp	r18, r1
    2b68:	31 05       	cpc	r19, r1
    2b6a:	41 f4       	brne	.+16     	; 0x2b7c <malloc+0xfc>
    2b6c:	2d b7       	in	r18, 0x3d	; 61
    2b6e:	3e b7       	in	r19, 0x3e	; 62
    2b70:	40 91 64 00 	lds	r20, 0x0064	; 0x800064 <__malloc_margin>
    2b74:	50 91 65 00 	lds	r21, 0x0065	; 0x800065 <__malloc_margin+0x1>
    2b78:	24 1b       	sub	r18, r20
    2b7a:	35 0b       	sbc	r19, r21
    2b7c:	e0 91 e1 02 	lds	r30, 0x02E1	; 0x8002e1 <__brkval>
    2b80:	f0 91 e2 02 	lds	r31, 0x02E2	; 0x8002e2 <__brkval+0x1>
    2b84:	e2 17       	cp	r30, r18
    2b86:	f3 07       	cpc	r31, r19
    2b88:	a0 f4       	brcc	.+40     	; 0x2bb2 <malloc+0x132>
    2b8a:	2e 1b       	sub	r18, r30
    2b8c:	3f 0b       	sbc	r19, r31
    2b8e:	28 17       	cp	r18, r24
    2b90:	39 07       	cpc	r19, r25
    2b92:	78 f0       	brcs	.+30     	; 0x2bb2 <malloc+0x132>
    2b94:	ac 01       	movw	r20, r24
    2b96:	4e 5f       	subi	r20, 0xFE	; 254
    2b98:	5f 4f       	sbci	r21, 0xFF	; 255
    2b9a:	24 17       	cp	r18, r20
    2b9c:	35 07       	cpc	r19, r21
    2b9e:	48 f0       	brcs	.+18     	; 0x2bb2 <malloc+0x132>
    2ba0:	4e 0f       	add	r20, r30
    2ba2:	5f 1f       	adc	r21, r31
    2ba4:	50 93 e2 02 	sts	0x02E2, r21	; 0x8002e2 <__brkval+0x1>
    2ba8:	40 93 e1 02 	sts	0x02E1, r20	; 0x8002e1 <__brkval>
    2bac:	81 93       	st	Z+, r24
    2bae:	91 93       	st	Z+, r25
    2bb0:	9f cf       	rjmp	.-194    	; 0x2af0 <malloc+0x70>
    2bb2:	f0 e0       	ldi	r31, 0x00	; 0
    2bb4:	e0 e0       	ldi	r30, 0x00	; 0
    2bb6:	9c cf       	rjmp	.-200    	; 0x2af0 <malloc+0x70>

00002bb8 <free>:
free():
    2bb8:	cf 93       	push	r28
    2bba:	df 93       	push	r29
    2bbc:	00 97       	sbiw	r24, 0x00	; 0
    2bbe:	e9 f0       	breq	.+58     	; 0x2bfa <free+0x42>
    2bc0:	fc 01       	movw	r30, r24
    2bc2:	32 97       	sbiw	r30, 0x02	; 2
    2bc4:	13 82       	std	Z+3, r1	; 0x03
    2bc6:	12 82       	std	Z+2, r1	; 0x02
    2bc8:	a0 91 e3 02 	lds	r26, 0x02E3	; 0x8002e3 <__flp>
    2bcc:	b0 91 e4 02 	lds	r27, 0x02E4	; 0x8002e4 <__flp+0x1>
    2bd0:	ed 01       	movw	r28, r26
    2bd2:	30 e0       	ldi	r19, 0x00	; 0
    2bd4:	20 e0       	ldi	r18, 0x00	; 0
    2bd6:	10 97       	sbiw	r26, 0x00	; 0
    2bd8:	a1 f4       	brne	.+40     	; 0x2c02 <free+0x4a>
    2bda:	20 81       	ld	r18, Z
    2bdc:	31 81       	ldd	r19, Z+1	; 0x01
    2bde:	82 0f       	add	r24, r18
    2be0:	93 1f       	adc	r25, r19
    2be2:	20 91 e1 02 	lds	r18, 0x02E1	; 0x8002e1 <__brkval>
    2be6:	30 91 e2 02 	lds	r19, 0x02E2	; 0x8002e2 <__brkval+0x1>
    2bea:	28 17       	cp	r18, r24
    2bec:	39 07       	cpc	r19, r25
    2bee:	09 f0       	breq	.+2      	; 0x2bf2 <free+0x3a>
    2bf0:	61 c0       	rjmp	.+194    	; 0x2cb4 <free+0xfc>
    2bf2:	f0 93 e2 02 	sts	0x02E2, r31	; 0x8002e2 <__brkval+0x1>
    2bf6:	e0 93 e1 02 	sts	0x02E1, r30	; 0x8002e1 <__brkval>
    2bfa:	df 91       	pop	r29
    2bfc:	cf 91       	pop	r28
    2bfe:	08 95       	ret
    2c00:	ea 01       	movw	r28, r20
    2c02:	ce 17       	cp	r28, r30
    2c04:	df 07       	cpc	r29, r31
    2c06:	e8 f5       	brcc	.+122    	; 0x2c82 <free+0xca>
    2c08:	4a 81       	ldd	r20, Y+2	; 0x02
    2c0a:	5b 81       	ldd	r21, Y+3	; 0x03
    2c0c:	9e 01       	movw	r18, r28
    2c0e:	41 15       	cp	r20, r1
    2c10:	51 05       	cpc	r21, r1
    2c12:	b1 f7       	brne	.-20     	; 0x2c00 <free+0x48>
    2c14:	e9 01       	movw	r28, r18
    2c16:	fb 83       	std	Y+3, r31	; 0x03
    2c18:	ea 83       	std	Y+2, r30	; 0x02
    2c1a:	49 91       	ld	r20, Y+
    2c1c:	59 91       	ld	r21, Y+
    2c1e:	c4 0f       	add	r28, r20
    2c20:	d5 1f       	adc	r29, r21
    2c22:	ec 17       	cp	r30, r28
    2c24:	fd 07       	cpc	r31, r29
    2c26:	61 f4       	brne	.+24     	; 0x2c40 <free+0x88>
    2c28:	80 81       	ld	r24, Z
    2c2a:	91 81       	ldd	r25, Z+1	; 0x01
    2c2c:	02 96       	adiw	r24, 0x02	; 2
    2c2e:	84 0f       	add	r24, r20
    2c30:	95 1f       	adc	r25, r21
    2c32:	e9 01       	movw	r28, r18
    2c34:	99 83       	std	Y+1, r25	; 0x01
    2c36:	88 83       	st	Y, r24
    2c38:	82 81       	ldd	r24, Z+2	; 0x02
    2c3a:	93 81       	ldd	r25, Z+3	; 0x03
    2c3c:	9b 83       	std	Y+3, r25	; 0x03
    2c3e:	8a 83       	std	Y+2, r24	; 0x02
    2c40:	f0 e0       	ldi	r31, 0x00	; 0
    2c42:	e0 e0       	ldi	r30, 0x00	; 0
    2c44:	12 96       	adiw	r26, 0x02	; 2
    2c46:	8d 91       	ld	r24, X+
    2c48:	9c 91       	ld	r25, X
    2c4a:	13 97       	sbiw	r26, 0x03	; 3
    2c4c:	00 97       	sbiw	r24, 0x00	; 0
    2c4e:	b9 f5       	brne	.+110    	; 0x2cbe <free+0x106>
    2c50:	2d 91       	ld	r18, X+
    2c52:	3c 91       	ld	r19, X
    2c54:	11 97       	sbiw	r26, 0x01	; 1
    2c56:	cd 01       	movw	r24, r26
    2c58:	02 96       	adiw	r24, 0x02	; 2
    2c5a:	82 0f       	add	r24, r18
    2c5c:	93 1f       	adc	r25, r19
    2c5e:	20 91 e1 02 	lds	r18, 0x02E1	; 0x8002e1 <__brkval>
    2c62:	30 91 e2 02 	lds	r19, 0x02E2	; 0x8002e2 <__brkval+0x1>
    2c66:	28 17       	cp	r18, r24
    2c68:	39 07       	cpc	r19, r25
    2c6a:	39 f6       	brne	.-114    	; 0x2bfa <free+0x42>
    2c6c:	30 97       	sbiw	r30, 0x00	; 0
    2c6e:	51 f5       	brne	.+84     	; 0x2cc4 <free+0x10c>
    2c70:	10 92 e4 02 	sts	0x02E4, r1	; 0x8002e4 <__flp+0x1>
    2c74:	10 92 e3 02 	sts	0x02E3, r1	; 0x8002e3 <__flp>
    2c78:	b0 93 e2 02 	sts	0x02E2, r27	; 0x8002e2 <__brkval+0x1>
    2c7c:	a0 93 e1 02 	sts	0x02E1, r26	; 0x8002e1 <__brkval>
    2c80:	bc cf       	rjmp	.-136    	; 0x2bfa <free+0x42>
    2c82:	d3 83       	std	Z+3, r29	; 0x03
    2c84:	c2 83       	std	Z+2, r28	; 0x02
    2c86:	40 81       	ld	r20, Z
    2c88:	51 81       	ldd	r21, Z+1	; 0x01
    2c8a:	84 0f       	add	r24, r20
    2c8c:	95 1f       	adc	r25, r21
    2c8e:	c8 17       	cp	r28, r24
    2c90:	d9 07       	cpc	r29, r25
    2c92:	61 f4       	brne	.+24     	; 0x2cac <free+0xf4>
    2c94:	4e 5f       	subi	r20, 0xFE	; 254
    2c96:	5f 4f       	sbci	r21, 0xFF	; 255
    2c98:	88 81       	ld	r24, Y
    2c9a:	99 81       	ldd	r25, Y+1	; 0x01
    2c9c:	48 0f       	add	r20, r24
    2c9e:	59 1f       	adc	r21, r25
    2ca0:	51 83       	std	Z+1, r21	; 0x01
    2ca2:	40 83       	st	Z, r20
    2ca4:	8a 81       	ldd	r24, Y+2	; 0x02
    2ca6:	9b 81       	ldd	r25, Y+3	; 0x03
    2ca8:	93 83       	std	Z+3, r25	; 0x03
    2caa:	82 83       	std	Z+2, r24	; 0x02
    2cac:	21 15       	cp	r18, r1
    2cae:	31 05       	cpc	r19, r1
    2cb0:	09 f0       	breq	.+2      	; 0x2cb4 <free+0xfc>
    2cb2:	b0 cf       	rjmp	.-160    	; 0x2c14 <free+0x5c>
    2cb4:	f0 93 e4 02 	sts	0x02E4, r31	; 0x8002e4 <__flp+0x1>
    2cb8:	e0 93 e3 02 	sts	0x02E3, r30	; 0x8002e3 <__flp>
    2cbc:	9e cf       	rjmp	.-196    	; 0x2bfa <free+0x42>
    2cbe:	fd 01       	movw	r30, r26
    2cc0:	dc 01       	movw	r26, r24
    2cc2:	c0 cf       	rjmp	.-128    	; 0x2c44 <free+0x8c>
    2cc4:	13 82       	std	Z+3, r1	; 0x03
    2cc6:	12 82       	std	Z+2, r1	; 0x02
    2cc8:	d7 cf       	rjmp	.-82     	; 0x2c78 <free+0xc0>

00002cca <strtod>:
strtod():
    2cca:	b0 e0       	ldi	r27, 0x00	; 0
    2ccc:	a0 e0       	ldi	r26, 0x00	; 0
    2cce:	eb e6       	ldi	r30, 0x6B	; 107
    2cd0:	f6 e1       	ldi	r31, 0x16	; 22
    2cd2:	0c 94 a1 1b 	jmp	0x3742	; 0x3742 <__prologue_saves__+0xc>
    2cd6:	5c 01       	movw	r10, r24
    2cd8:	7b 01       	movw	r14, r22
    2cda:	61 15       	cp	r22, r1
    2cdc:	71 05       	cpc	r23, r1
    2cde:	19 f0       	breq	.+6      	; 0x2ce6 <strtod+0x1c>
    2ce0:	db 01       	movw	r26, r22
    2ce2:	8d 93       	st	X+, r24
    2ce4:	9c 93       	st	X, r25
    2ce6:	85 01       	movw	r16, r10
    2ce8:	0f 5f       	subi	r16, 0xFF	; 255
    2cea:	1f 4f       	sbci	r17, 0xFF	; 255
    2cec:	f5 01       	movw	r30, r10
    2cee:	d0 81       	ld	r29, Z
    2cf0:	8d 2f       	mov	r24, r29
    2cf2:	90 e0       	ldi	r25, 0x00	; 0
    2cf4:	0e 94 b5 17 	call	0x2f6a	; 0x2f6a <isspace>
    2cf8:	6c 01       	movw	r12, r24
    2cfa:	89 2b       	or	r24, r25
    2cfc:	b9 f5       	brne	.+110    	; 0x2d6c <strtod+0xa2>
    2cfe:	dd 32       	cpi	r29, 0x2D	; 45
    2d00:	b9 f5       	brne	.+110    	; 0x2d70 <strtod+0xa6>
    2d02:	0f 5f       	subi	r16, 0xFF	; 255
    2d04:	1f 4f       	sbci	r17, 0xFF	; 255
    2d06:	d5 01       	movw	r26, r10
    2d08:	11 96       	adiw	r26, 0x01	; 1
    2d0a:	dc 91       	ld	r29, X
    2d0c:	c1 e0       	ldi	r28, 0x01	; 1
    2d0e:	58 01       	movw	r10, r16
    2d10:	f1 e0       	ldi	r31, 0x01	; 1
    2d12:	af 1a       	sub	r10, r31
    2d14:	b1 08       	sbc	r11, r1
    2d16:	43 e0       	ldi	r20, 0x03	; 3
    2d18:	50 e0       	ldi	r21, 0x00	; 0
    2d1a:	6e ed       	ldi	r22, 0xDE	; 222
    2d1c:	70 e0       	ldi	r23, 0x00	; 0
    2d1e:	c5 01       	movw	r24, r10
    2d20:	0e 94 be 17 	call	0x2f7c	; 0x2f7c <strncasecmp_P>
    2d24:	89 2b       	or	r24, r25
    2d26:	69 f5       	brne	.+90     	; 0x2d82 <strtod+0xb8>
    2d28:	68 01       	movw	r12, r16
    2d2a:	82 e0       	ldi	r24, 0x02	; 2
    2d2c:	c8 0e       	add	r12, r24
    2d2e:	d1 1c       	adc	r13, r1
    2d30:	45 e0       	ldi	r20, 0x05	; 5
    2d32:	50 e0       	ldi	r21, 0x00	; 0
    2d34:	69 ed       	ldi	r22, 0xD9	; 217
    2d36:	70 e0       	ldi	r23, 0x00	; 0
    2d38:	c6 01       	movw	r24, r12
    2d3a:	0e 94 be 17 	call	0x2f7c	; 0x2f7c <strncasecmp_P>
    2d3e:	89 2b       	or	r24, r25
    2d40:	21 f4       	brne	.+8      	; 0x2d4a <strtod+0x80>
    2d42:	68 01       	movw	r12, r16
    2d44:	97 e0       	ldi	r25, 0x07	; 7
    2d46:	c9 0e       	add	r12, r25
    2d48:	d1 1c       	adc	r13, r1
    2d4a:	e1 14       	cp	r14, r1
    2d4c:	f1 04       	cpc	r15, r1
    2d4e:	19 f0       	breq	.+6      	; 0x2d56 <strtod+0x8c>
    2d50:	d7 01       	movw	r26, r14
    2d52:	cd 92       	st	X+, r12
    2d54:	dc 92       	st	X, r13
    2d56:	60 e0       	ldi	r22, 0x00	; 0
    2d58:	70 e0       	ldi	r23, 0x00	; 0
    2d5a:	80 e8       	ldi	r24, 0x80	; 128
    2d5c:	9f ef       	ldi	r25, 0xFF	; 255
    2d5e:	c1 11       	cpse	r28, r1
    2d60:	ff c0       	rjmp	.+510    	; 0x2f60 <strtod+0x296>
    2d62:	60 e0       	ldi	r22, 0x00	; 0
    2d64:	70 e0       	ldi	r23, 0x00	; 0
    2d66:	80 e8       	ldi	r24, 0x80	; 128
    2d68:	9f e7       	ldi	r25, 0x7F	; 127
    2d6a:	fa c0       	rjmp	.+500    	; 0x2f60 <strtod+0x296>
    2d6c:	58 01       	movw	r10, r16
    2d6e:	bb cf       	rjmp	.-138    	; 0x2ce6 <strtod+0x1c>
    2d70:	db 32       	cpi	r29, 0x2B	; 43
    2d72:	29 f4       	brne	.+10     	; 0x2d7e <strtod+0xb4>
    2d74:	85 01       	movw	r16, r10
    2d76:	0e 5f       	subi	r16, 0xFE	; 254
    2d78:	1f 4f       	sbci	r17, 0xFF	; 255
    2d7a:	f5 01       	movw	r30, r10
    2d7c:	d1 81       	ldd	r29, Z+1	; 0x01
    2d7e:	c0 e0       	ldi	r28, 0x00	; 0
    2d80:	c6 cf       	rjmp	.-116    	; 0x2d0e <strtod+0x44>
    2d82:	43 e0       	ldi	r20, 0x03	; 3
    2d84:	50 e0       	ldi	r21, 0x00	; 0
    2d86:	66 ed       	ldi	r22, 0xD6	; 214
    2d88:	70 e0       	ldi	r23, 0x00	; 0
    2d8a:	c5 01       	movw	r24, r10
    2d8c:	0e 94 be 17 	call	0x2f7c	; 0x2f7c <strncasecmp_P>
    2d90:	89 2b       	or	r24, r25
    2d92:	e9 f0       	breq	.+58     	; 0x2dce <strtod+0x104>
    2d94:	f8 01       	movw	r30, r16
    2d96:	10 e0       	ldi	r17, 0x00	; 0
    2d98:	00 e0       	ldi	r16, 0x00	; 0
    2d9a:	20 e0       	ldi	r18, 0x00	; 0
    2d9c:	30 e0       	ldi	r19, 0x00	; 0
    2d9e:	a9 01       	movw	r20, r18
    2da0:	5f 01       	movw	r10, r30
    2da2:	b0 ed       	ldi	r27, 0xD0	; 208
    2da4:	8b 2e       	mov	r8, r27
    2da6:	8d 0e       	add	r8, r29
    2da8:	89 e0       	ldi	r24, 0x09	; 9
    2daa:	88 15       	cp	r24, r8
    2dac:	c8 f1       	brcs	.+114    	; 0x2e20 <strtod+0x156>
    2dae:	9c 2e       	mov	r9, r28
    2db0:	68 94       	set
    2db2:	91 f8       	bld	r9, 1
    2db4:	8c 2f       	mov	r24, r28
    2db6:	88 70       	andi	r24, 0x08	; 8
    2db8:	c2 ff       	sbrs	r28, 2
    2dba:	16 c0       	rjmp	.+44     	; 0x2de8 <strtod+0x11e>
    2dbc:	81 11       	cpse	r24, r1
    2dbe:	02 c0       	rjmp	.+4      	; 0x2dc4 <strtod+0xfa>
    2dc0:	0f 5f       	subi	r16, 0xFF	; 255
    2dc2:	1f 4f       	sbci	r17, 0xFF	; 255
    2dc4:	31 96       	adiw	r30, 0x01	; 1
    2dc6:	d5 01       	movw	r26, r10
    2dc8:	dc 91       	ld	r29, X
    2dca:	c9 2d       	mov	r28, r9
    2dcc:	e9 cf       	rjmp	.-46     	; 0x2da0 <strtod+0xd6>
    2dce:	e1 14       	cp	r14, r1
    2dd0:	f1 04       	cpc	r15, r1
    2dd2:	29 f0       	breq	.+10     	; 0x2dde <strtod+0x114>
    2dd4:	0e 5f       	subi	r16, 0xFE	; 254
    2dd6:	1f 4f       	sbci	r17, 0xFF	; 255
    2dd8:	f7 01       	movw	r30, r14
    2dda:	11 83       	std	Z+1, r17	; 0x01
    2ddc:	00 83       	st	Z, r16
    2dde:	60 e0       	ldi	r22, 0x00	; 0
    2de0:	70 e0       	ldi	r23, 0x00	; 0
    2de2:	80 ec       	ldi	r24, 0xC0	; 192
    2de4:	9f e7       	ldi	r25, 0x7F	; 127
    2de6:	bc c0       	rjmp	.+376    	; 0x2f60 <strtod+0x296>
    2de8:	88 23       	and	r24, r24
    2dea:	11 f0       	breq	.+4      	; 0x2df0 <strtod+0x126>
    2dec:	01 50       	subi	r16, 0x01	; 1
    2dee:	11 09       	sbc	r17, r1
    2df0:	a5 e0       	ldi	r26, 0x05	; 5
    2df2:	b0 e0       	ldi	r27, 0x00	; 0
    2df4:	0e 94 90 1b 	call	0x3720	; 0x3720 <__muluhisi3>
    2df8:	9b 01       	movw	r18, r22
    2dfa:	ac 01       	movw	r20, r24
    2dfc:	22 0f       	add	r18, r18
    2dfe:	33 1f       	adc	r19, r19
    2e00:	44 1f       	adc	r20, r20
    2e02:	55 1f       	adc	r21, r21
    2e04:	28 0d       	add	r18, r8
    2e06:	31 1d       	adc	r19, r1
    2e08:	41 1d       	adc	r20, r1
    2e0a:	51 1d       	adc	r21, r1
    2e0c:	28 39       	cpi	r18, 0x98	; 152
    2e0e:	99 e9       	ldi	r25, 0x99	; 153
    2e10:	39 07       	cpc	r19, r25
    2e12:	49 07       	cpc	r20, r25
    2e14:	99 e1       	ldi	r25, 0x19	; 25
    2e16:	59 07       	cpc	r21, r25
    2e18:	a8 f2       	brcs	.-86     	; 0x2dc4 <strtod+0xfa>
    2e1a:	c6 60       	ori	r28, 0x06	; 6
    2e1c:	9c 2e       	mov	r9, r28
    2e1e:	d2 cf       	rjmp	.-92     	; 0x2dc4 <strtod+0xfa>
    2e20:	ae ef       	ldi	r26, 0xFE	; 254
    2e22:	8a 12       	cpse	r8, r26
    2e24:	06 c0       	rjmp	.+12     	; 0x2e32 <strtod+0x168>
    2e26:	c3 fd       	sbrc	r28, 3
    2e28:	3c c0       	rjmp	.+120    	; 0x2ea2 <strtod+0x1d8>
    2e2a:	9c 2e       	mov	r9, r28
    2e2c:	68 94       	set
    2e2e:	93 f8       	bld	r9, 3
    2e30:	c9 cf       	rjmp	.-110    	; 0x2dc4 <strtod+0xfa>
    2e32:	df 7d       	andi	r29, 0xDF	; 223
    2e34:	d5 34       	cpi	r29, 0x45	; 69
    2e36:	a9 f5       	brne	.+106    	; 0x2ea2 <strtod+0x1d8>
    2e38:	80 81       	ld	r24, Z
    2e3a:	8d 32       	cpi	r24, 0x2D	; 45
    2e3c:	39 f4       	brne	.+14     	; 0x2e4c <strtod+0x182>
    2e3e:	c0 61       	ori	r28, 0x10	; 16
    2e40:	df 01       	movw	r26, r30
    2e42:	12 96       	adiw	r26, 0x02	; 2
    2e44:	81 81       	ldd	r24, Z+1	; 0x01
    2e46:	62 e0       	ldi	r22, 0x02	; 2
    2e48:	70 e0       	ldi	r23, 0x00	; 0
    2e4a:	06 c0       	rjmp	.+12     	; 0x2e58 <strtod+0x18e>
    2e4c:	df 01       	movw	r26, r30
    2e4e:	8b 32       	cpi	r24, 0x2B	; 43
    2e50:	c1 f3       	breq	.-16     	; 0x2e42 <strtod+0x178>
    2e52:	11 96       	adiw	r26, 0x01	; 1
    2e54:	61 e0       	ldi	r22, 0x01	; 1
    2e56:	70 e0       	ldi	r23, 0x00	; 0
    2e58:	80 53       	subi	r24, 0x30	; 48
    2e5a:	5d 01       	movw	r10, r26
    2e5c:	a6 1a       	sub	r10, r22
    2e5e:	b7 0a       	sbc	r11, r23
    2e60:	8a 30       	cpi	r24, 0x0A	; 10
    2e62:	f8 f4       	brcc	.+62     	; 0x2ea2 <strtod+0x1d8>
    2e64:	e0 e8       	ldi	r30, 0x80	; 128
    2e66:	ce 16       	cp	r12, r30
    2e68:	ec e0       	ldi	r30, 0x0C	; 12
    2e6a:	de 06       	cpc	r13, r30
    2e6c:	5c f4       	brge	.+22     	; 0x2e84 <strtod+0x1ba>
    2e6e:	b6 01       	movw	r22, r12
    2e70:	66 0f       	add	r22, r22
    2e72:	77 1f       	adc	r23, r23
    2e74:	66 0f       	add	r22, r22
    2e76:	77 1f       	adc	r23, r23
    2e78:	c6 0e       	add	r12, r22
    2e7a:	d7 1e       	adc	r13, r23
    2e7c:	cc 0c       	add	r12, r12
    2e7e:	dd 1c       	adc	r13, r13
    2e80:	c8 0e       	add	r12, r24
    2e82:	d1 1c       	adc	r13, r1
    2e84:	5d 01       	movw	r10, r26
    2e86:	ff ef       	ldi	r31, 0xFF	; 255
    2e88:	af 1a       	sub	r10, r31
    2e8a:	bf 0a       	sbc	r11, r31
    2e8c:	8c 91       	ld	r24, X
    2e8e:	80 53       	subi	r24, 0x30	; 48
    2e90:	8a 30       	cpi	r24, 0x0A	; 10
    2e92:	a8 f1       	brcs	.+106    	; 0x2efe <strtod+0x234>
    2e94:	c4 ff       	sbrs	r28, 4
    2e96:	03 c0       	rjmp	.+6      	; 0x2e9e <strtod+0x1d4>
    2e98:	d1 94       	neg	r13
    2e9a:	c1 94       	neg	r12
    2e9c:	d1 08       	sbc	r13, r1
    2e9e:	0c 0d       	add	r16, r12
    2ea0:	1d 1d       	adc	r17, r13
    2ea2:	c1 ff       	sbrs	r28, 1
    2ea4:	09 c0       	rjmp	.+18     	; 0x2eb8 <strtod+0x1ee>
    2ea6:	e1 14       	cp	r14, r1
    2ea8:	f1 04       	cpc	r15, r1
    2eaa:	31 f0       	breq	.+12     	; 0x2eb8 <strtod+0x1ee>
    2eac:	81 e0       	ldi	r24, 0x01	; 1
    2eae:	a8 1a       	sub	r10, r24
    2eb0:	b1 08       	sbc	r11, r1
    2eb2:	d7 01       	movw	r26, r14
    2eb4:	ad 92       	st	X+, r10
    2eb6:	bc 92       	st	X, r11
    2eb8:	ca 01       	movw	r24, r20
    2eba:	b9 01       	movw	r22, r18
    2ebc:	0e 94 db 17 	call	0x2fb6	; 0x2fb6 <__floatunsisf>
    2ec0:	c3 70       	andi	r28, 0x03	; 3
    2ec2:	c3 30       	cpi	r28, 0x03	; 3
    2ec4:	09 f4       	brne	.+2      	; 0x2ec8 <strtod+0x1fe>
    2ec6:	90 58       	subi	r25, 0x80	; 128
    2ec8:	4b 01       	movw	r8, r22
    2eca:	5c 01       	movw	r10, r24
    2ecc:	20 e0       	ldi	r18, 0x00	; 0
    2ece:	30 e0       	ldi	r19, 0x00	; 0
    2ed0:	a9 01       	movw	r20, r18
    2ed2:	0e 94 d6 17 	call	0x2fac	; 0x2fac <__cmpsf2>
    2ed6:	88 23       	and	r24, r24
    2ed8:	09 f4       	brne	.+2      	; 0x2edc <strtod+0x212>
    2eda:	40 c0       	rjmp	.+128    	; 0x2f5c <strtod+0x292>
    2edc:	cd e0       	ldi	r28, 0x0D	; 13
    2ede:	d1 e0       	ldi	r29, 0x01	; 1
    2ee0:	17 ff       	sbrs	r17, 7
    2ee2:	05 c0       	rjmp	.+10     	; 0x2eee <strtod+0x224>
    2ee4:	11 95       	neg	r17
    2ee6:	01 95       	neg	r16
    2ee8:	11 09       	sbc	r17, r1
    2eea:	c5 ef       	ldi	r28, 0xF5	; 245
    2eec:	d0 e0       	ldi	r29, 0x00	; 0
    2eee:	6e 01       	movw	r12, r28
    2ef0:	b8 e1       	ldi	r27, 0x18	; 24
    2ef2:	cb 1a       	sub	r12, r27
    2ef4:	d1 08       	sbc	r13, r1
    2ef6:	80 e2       	ldi	r24, 0x20	; 32
    2ef8:	e8 2e       	mov	r14, r24
    2efa:	f1 2c       	mov	r15, r1
    2efc:	0f c0       	rjmp	.+30     	; 0x2f1c <strtod+0x252>
    2efe:	d5 01       	movw	r26, r10
    2f00:	b1 cf       	rjmp	.-158    	; 0x2e64 <strtod+0x19a>
    2f02:	fe 01       	movw	r30, r28
    2f04:	25 91       	lpm	r18, Z+
    2f06:	35 91       	lpm	r19, Z+
    2f08:	45 91       	lpm	r20, Z+
    2f0a:	54 91       	lpm	r21, Z
    2f0c:	0e 19       	sub	r16, r14
    2f0e:	1f 09       	sbc	r17, r15
    2f10:	c5 01       	movw	r24, r10
    2f12:	b4 01       	movw	r22, r8
    2f14:	0e 94 3c 18 	call	0x3078	; 0x3078 <__mulsf3>
    2f18:	4b 01       	movw	r8, r22
    2f1a:	5c 01       	movw	r10, r24
    2f1c:	d5 01       	movw	r26, r10
    2f1e:	c4 01       	movw	r24, r8
    2f20:	0e 15       	cp	r16, r14
    2f22:	1f 05       	cpc	r17, r15
    2f24:	74 f7       	brge	.-36     	; 0x2f02 <strtod+0x238>
    2f26:	24 97       	sbiw	r28, 0x04	; 4
    2f28:	f5 94       	asr	r15
    2f2a:	e7 94       	ror	r14
    2f2c:	cc 16       	cp	r12, r28
    2f2e:	dd 06       	cpc	r13, r29
    2f30:	a9 f7       	brne	.-22     	; 0x2f1c <strtod+0x252>
    2f32:	8a 2f       	mov	r24, r26
    2f34:	88 0f       	add	r24, r24
    2f36:	8b 2f       	mov	r24, r27
    2f38:	88 1f       	adc	r24, r24
    2f3a:	8f 3f       	cpi	r24, 0xFF	; 255
    2f3c:	49 f0       	breq	.+18     	; 0x2f50 <strtod+0x286>
    2f3e:	20 e0       	ldi	r18, 0x00	; 0
    2f40:	30 e0       	ldi	r19, 0x00	; 0
    2f42:	a9 01       	movw	r20, r18
    2f44:	c5 01       	movw	r24, r10
    2f46:	b4 01       	movw	r22, r8
    2f48:	0e 94 d6 17 	call	0x2fac	; 0x2fac <__cmpsf2>
    2f4c:	81 11       	cpse	r24, r1
    2f4e:	06 c0       	rjmp	.+12     	; 0x2f5c <strtod+0x292>
    2f50:	82 e2       	ldi	r24, 0x22	; 34
    2f52:	90 e0       	ldi	r25, 0x00	; 0
    2f54:	90 93 e6 02 	sts	0x02E6, r25	; 0x8002e6 <errno+0x1>
    2f58:	80 93 e5 02 	sts	0x02E5, r24	; 0x8002e5 <errno>
    2f5c:	c5 01       	movw	r24, r10
    2f5e:	b4 01       	movw	r22, r8
    2f60:	cd b7       	in	r28, 0x3d	; 61
    2f62:	de b7       	in	r29, 0x3e	; 62
    2f64:	ec e0       	ldi	r30, 0x0C	; 12
    2f66:	0c 94 bd 1b 	jmp	0x377a	; 0x377a <__epilogue_restores__+0xc>

00002f6a <isspace>:
isspace():
    2f6a:	91 11       	cpse	r25, r1
    2f6c:	0c 94 83 1a 	jmp	0x3506	; 0x3506 <__ctype_isfalse>
    2f70:	80 32       	cpi	r24, 0x20	; 32
    2f72:	19 f0       	breq	.+6      	; 0x2f7a <isspace+0x10>
    2f74:	89 50       	subi	r24, 0x09	; 9
    2f76:	85 50       	subi	r24, 0x05	; 5
    2f78:	c8 f7       	brcc	.-14     	; 0x2f6c <isspace+0x2>
    2f7a:	08 95       	ret

00002f7c <strncasecmp_P>:
strncasecmp_P():
    2f7c:	fb 01       	movw	r30, r22
    2f7e:	dc 01       	movw	r26, r24
    2f80:	41 50       	subi	r20, 0x01	; 1
    2f82:	50 40       	sbci	r21, 0x00	; 0
    2f84:	88 f0       	brcs	.+34     	; 0x2fa8 <strncasecmp_P+0x2c>
    2f86:	8d 91       	ld	r24, X+
    2f88:	81 34       	cpi	r24, 0x41	; 65
    2f8a:	1c f0       	brlt	.+6      	; 0x2f92 <strncasecmp_P+0x16>
    2f8c:	8b 35       	cpi	r24, 0x5B	; 91
    2f8e:	0c f4       	brge	.+2      	; 0x2f92 <strncasecmp_P+0x16>
    2f90:	80 5e       	subi	r24, 0xE0	; 224
    2f92:	65 91       	lpm	r22, Z+
    2f94:	61 34       	cpi	r22, 0x41	; 65
    2f96:	1c f0       	brlt	.+6      	; 0x2f9e <strncasecmp_P+0x22>
    2f98:	6b 35       	cpi	r22, 0x5B	; 91
    2f9a:	0c f4       	brge	.+2      	; 0x2f9e <strncasecmp_P+0x22>
    2f9c:	60 5e       	subi	r22, 0xE0	; 224
    2f9e:	86 1b       	sub	r24, r22
    2fa0:	61 11       	cpse	r22, r1
    2fa2:	71 f3       	breq	.-36     	; 0x2f80 <strncasecmp_P+0x4>
    2fa4:	99 0b       	sbc	r25, r25
    2fa6:	08 95       	ret
    2fa8:	88 1b       	sub	r24, r24
    2faa:	fc cf       	rjmp	.-8      	; 0x2fa4 <strncasecmp_P+0x28>

00002fac <__cmpsf2>:
__cmpsf2():
    2fac:	0e 94 18 18 	call	0x3030	; 0x3030 <__fp_cmp>
    2fb0:	08 f4       	brcc	.+2      	; 0x2fb4 <__cmpsf2+0x8>
    2fb2:	81 e0       	ldi	r24, 0x01	; 1
    2fb4:	08 95       	ret

00002fb6 <__floatunsisf>:
__floatunsisf():
    2fb6:	e8 94       	clt
    2fb8:	09 c0       	rjmp	.+18     	; 0x2fcc <__floatsisf+0x12>

00002fba <__floatsisf>:
    2fba:	97 fb       	bst	r25, 7
    2fbc:	3e f4       	brtc	.+14     	; 0x2fcc <__floatsisf+0x12>
    2fbe:	90 95       	com	r25
    2fc0:	80 95       	com	r24
    2fc2:	70 95       	com	r23
    2fc4:	61 95       	neg	r22
    2fc6:	7f 4f       	sbci	r23, 0xFF	; 255
    2fc8:	8f 4f       	sbci	r24, 0xFF	; 255
    2fca:	9f 4f       	sbci	r25, 0xFF	; 255
    2fcc:	99 23       	and	r25, r25
    2fce:	a9 f0       	breq	.+42     	; 0x2ffa <__floatsisf+0x40>
    2fd0:	f9 2f       	mov	r31, r25
    2fd2:	96 e9       	ldi	r25, 0x96	; 150
    2fd4:	bb 27       	eor	r27, r27
    2fd6:	93 95       	inc	r25
    2fd8:	f6 95       	lsr	r31
    2fda:	87 95       	ror	r24
    2fdc:	77 95       	ror	r23
    2fde:	67 95       	ror	r22
    2fe0:	b7 95       	ror	r27
    2fe2:	f1 11       	cpse	r31, r1
    2fe4:	f8 cf       	rjmp	.-16     	; 0x2fd6 <__floatsisf+0x1c>
    2fe6:	fa f4       	brpl	.+62     	; 0x3026 <__floatsisf+0x6c>
    2fe8:	bb 0f       	add	r27, r27
    2fea:	11 f4       	brne	.+4      	; 0x2ff0 <__floatsisf+0x36>
    2fec:	60 ff       	sbrs	r22, 0
    2fee:	1b c0       	rjmp	.+54     	; 0x3026 <__floatsisf+0x6c>
    2ff0:	6f 5f       	subi	r22, 0xFF	; 255
    2ff2:	7f 4f       	sbci	r23, 0xFF	; 255
    2ff4:	8f 4f       	sbci	r24, 0xFF	; 255
    2ff6:	9f 4f       	sbci	r25, 0xFF	; 255
    2ff8:	16 c0       	rjmp	.+44     	; 0x3026 <__floatsisf+0x6c>
    2ffa:	88 23       	and	r24, r24
    2ffc:	11 f0       	breq	.+4      	; 0x3002 <__floatsisf+0x48>
    2ffe:	96 e9       	ldi	r25, 0x96	; 150
    3000:	11 c0       	rjmp	.+34     	; 0x3024 <__floatsisf+0x6a>
    3002:	77 23       	and	r23, r23
    3004:	21 f0       	breq	.+8      	; 0x300e <__floatsisf+0x54>
    3006:	9e e8       	ldi	r25, 0x8E	; 142
    3008:	87 2f       	mov	r24, r23
    300a:	76 2f       	mov	r23, r22
    300c:	05 c0       	rjmp	.+10     	; 0x3018 <__floatsisf+0x5e>
    300e:	66 23       	and	r22, r22
    3010:	71 f0       	breq	.+28     	; 0x302e <__floatsisf+0x74>
    3012:	96 e8       	ldi	r25, 0x86	; 134
    3014:	86 2f       	mov	r24, r22
    3016:	70 e0       	ldi	r23, 0x00	; 0
    3018:	60 e0       	ldi	r22, 0x00	; 0
    301a:	2a f0       	brmi	.+10     	; 0x3026 <__floatsisf+0x6c>
    301c:	9a 95       	dec	r25
    301e:	66 0f       	add	r22, r22
    3020:	77 1f       	adc	r23, r23
    3022:	88 1f       	adc	r24, r24
    3024:	da f7       	brpl	.-10     	; 0x301c <__floatsisf+0x62>
    3026:	88 0f       	add	r24, r24
    3028:	96 95       	lsr	r25
    302a:	87 95       	ror	r24
    302c:	97 f9       	bld	r25, 7
    302e:	08 95       	ret

00003030 <__fp_cmp>:
__fp_cmp():
    3030:	99 0f       	add	r25, r25
    3032:	00 08       	sbc	r0, r0
    3034:	55 0f       	add	r21, r21
    3036:	aa 0b       	sbc	r26, r26
    3038:	e0 e8       	ldi	r30, 0x80	; 128
    303a:	fe ef       	ldi	r31, 0xFE	; 254
    303c:	16 16       	cp	r1, r22
    303e:	17 06       	cpc	r1, r23
    3040:	e8 07       	cpc	r30, r24
    3042:	f9 07       	cpc	r31, r25
    3044:	c0 f0       	brcs	.+48     	; 0x3076 <__fp_cmp+0x46>
    3046:	12 16       	cp	r1, r18
    3048:	13 06       	cpc	r1, r19
    304a:	e4 07       	cpc	r30, r20
    304c:	f5 07       	cpc	r31, r21
    304e:	98 f0       	brcs	.+38     	; 0x3076 <__fp_cmp+0x46>
    3050:	62 1b       	sub	r22, r18
    3052:	73 0b       	sbc	r23, r19
    3054:	84 0b       	sbc	r24, r20
    3056:	95 0b       	sbc	r25, r21
    3058:	39 f4       	brne	.+14     	; 0x3068 <__fp_cmp+0x38>
    305a:	0a 26       	eor	r0, r26
    305c:	61 f0       	breq	.+24     	; 0x3076 <__fp_cmp+0x46>
    305e:	23 2b       	or	r18, r19
    3060:	24 2b       	or	r18, r20
    3062:	25 2b       	or	r18, r21
    3064:	21 f4       	brne	.+8      	; 0x306e <__fp_cmp+0x3e>
    3066:	08 95       	ret
    3068:	0a 26       	eor	r0, r26
    306a:	09 f4       	brne	.+2      	; 0x306e <__fp_cmp+0x3e>
    306c:	a1 40       	sbci	r26, 0x01	; 1
    306e:	a6 95       	lsr	r26
    3070:	8f ef       	ldi	r24, 0xFF	; 255
    3072:	81 1d       	adc	r24, r1
    3074:	81 1d       	adc	r24, r1
    3076:	08 95       	ret

00003078 <__mulsf3>:
__mulsf3():
    3078:	0e 94 4f 18 	call	0x309e	; 0x309e <__mulsf3x>
    307c:	0c 94 41 1b 	jmp	0x3682	; 0x3682 <__fp_round>
    3080:	0e 94 33 1b 	call	0x3666	; 0x3666 <__fp_pscA>
    3084:	38 f0       	brcs	.+14     	; 0x3094 <__mulsf3+0x1c>
    3086:	0e 94 3a 1b 	call	0x3674	; 0x3674 <__fp_pscB>
    308a:	20 f0       	brcs	.+8      	; 0x3094 <__mulsf3+0x1c>
    308c:	95 23       	and	r25, r21
    308e:	11 f0       	breq	.+4      	; 0x3094 <__mulsf3+0x1c>
    3090:	0c 94 2a 1b 	jmp	0x3654	; 0x3654 <__fp_inf>
    3094:	0c 94 30 1b 	jmp	0x3660	; 0x3660 <__fp_nan>
    3098:	11 24       	eor	r1, r1
    309a:	0c 94 75 1b 	jmp	0x36ea	; 0x36ea <__fp_szero>

0000309e <__mulsf3x>:
__mulsf3x():
    309e:	0e 94 52 1b 	call	0x36a4	; 0x36a4 <__fp_split3>
    30a2:	70 f3       	brcs	.-36     	; 0x3080 <__mulsf3+0x8>

000030a4 <__mulsf3_pse>:
    30a4:	95 9f       	mul	r25, r21
    30a6:	c1 f3       	breq	.-16     	; 0x3098 <__mulsf3+0x20>
    30a8:	95 0f       	add	r25, r21
    30aa:	50 e0       	ldi	r21, 0x00	; 0
    30ac:	55 1f       	adc	r21, r21
    30ae:	62 9f       	mul	r22, r18
    30b0:	f0 01       	movw	r30, r0
    30b2:	72 9f       	mul	r23, r18
    30b4:	bb 27       	eor	r27, r27
    30b6:	f0 0d       	add	r31, r0
    30b8:	b1 1d       	adc	r27, r1
    30ba:	63 9f       	mul	r22, r19
    30bc:	aa 27       	eor	r26, r26
    30be:	f0 0d       	add	r31, r0
    30c0:	b1 1d       	adc	r27, r1
    30c2:	aa 1f       	adc	r26, r26
    30c4:	64 9f       	mul	r22, r20
    30c6:	66 27       	eor	r22, r22
    30c8:	b0 0d       	add	r27, r0
    30ca:	a1 1d       	adc	r26, r1
    30cc:	66 1f       	adc	r22, r22
    30ce:	82 9f       	mul	r24, r18
    30d0:	22 27       	eor	r18, r18
    30d2:	b0 0d       	add	r27, r0
    30d4:	a1 1d       	adc	r26, r1
    30d6:	62 1f       	adc	r22, r18
    30d8:	73 9f       	mul	r23, r19
    30da:	b0 0d       	add	r27, r0
    30dc:	a1 1d       	adc	r26, r1
    30de:	62 1f       	adc	r22, r18
    30e0:	83 9f       	mul	r24, r19
    30e2:	a0 0d       	add	r26, r0
    30e4:	61 1d       	adc	r22, r1
    30e6:	22 1f       	adc	r18, r18
    30e8:	74 9f       	mul	r23, r20
    30ea:	33 27       	eor	r19, r19
    30ec:	a0 0d       	add	r26, r0
    30ee:	61 1d       	adc	r22, r1
    30f0:	23 1f       	adc	r18, r19
    30f2:	84 9f       	mul	r24, r20
    30f4:	60 0d       	add	r22, r0
    30f6:	21 1d       	adc	r18, r1
    30f8:	82 2f       	mov	r24, r18
    30fa:	76 2f       	mov	r23, r22
    30fc:	6a 2f       	mov	r22, r26
    30fe:	11 24       	eor	r1, r1
    3100:	9f 57       	subi	r25, 0x7F	; 127
    3102:	50 40       	sbci	r21, 0x00	; 0
    3104:	9a f0       	brmi	.+38     	; 0x312c <__mulsf3_pse+0x88>
    3106:	f1 f0       	breq	.+60     	; 0x3144 <__mulsf3_pse+0xa0>
    3108:	88 23       	and	r24, r24
    310a:	4a f0       	brmi	.+18     	; 0x311e <__mulsf3_pse+0x7a>
    310c:	ee 0f       	add	r30, r30
    310e:	ff 1f       	adc	r31, r31
    3110:	bb 1f       	adc	r27, r27
    3112:	66 1f       	adc	r22, r22
    3114:	77 1f       	adc	r23, r23
    3116:	88 1f       	adc	r24, r24
    3118:	91 50       	subi	r25, 0x01	; 1
    311a:	50 40       	sbci	r21, 0x00	; 0
    311c:	a9 f7       	brne	.-22     	; 0x3108 <__mulsf3_pse+0x64>
    311e:	9e 3f       	cpi	r25, 0xFE	; 254
    3120:	51 05       	cpc	r21, r1
    3122:	80 f0       	brcs	.+32     	; 0x3144 <__mulsf3_pse+0xa0>
    3124:	0c 94 2a 1b 	jmp	0x3654	; 0x3654 <__fp_inf>
    3128:	0c 94 75 1b 	jmp	0x36ea	; 0x36ea <__fp_szero>
    312c:	5f 3f       	cpi	r21, 0xFF	; 255
    312e:	e4 f3       	brlt	.-8      	; 0x3128 <__mulsf3_pse+0x84>
    3130:	98 3e       	cpi	r25, 0xE8	; 232
    3132:	d4 f3       	brlt	.-12     	; 0x3128 <__mulsf3_pse+0x84>
    3134:	86 95       	lsr	r24
    3136:	77 95       	ror	r23
    3138:	67 95       	ror	r22
    313a:	b7 95       	ror	r27
    313c:	f7 95       	ror	r31
    313e:	e7 95       	ror	r30
    3140:	9f 5f       	subi	r25, 0xFF	; 255
    3142:	c1 f7       	brne	.-16     	; 0x3134 <__mulsf3_pse+0x90>
    3144:	fe 2b       	or	r31, r30
    3146:	88 0f       	add	r24, r24
    3148:	91 1d       	adc	r25, r1
    314a:	96 95       	lsr	r25
    314c:	87 95       	ror	r24
    314e:	97 f9       	bld	r25, 7
    3150:	08 95       	ret

00003152 <vfprintf>:
    3152:	ab e0       	ldi	r26, 0x0B	; 11
    3154:	b0 e0       	ldi	r27, 0x00	; 0
    3156:	ef ea       	ldi	r30, 0xAF	; 175
    3158:	f8 e1       	ldi	r31, 0x18	; 24
    315a:	0c 94 9b 1b 	jmp	0x3736	; 0x3736 <__prologue_saves__>
    315e:	7c 01       	movw	r14, r24
    3160:	3b 01       	movw	r6, r22
    3162:	8a 01       	movw	r16, r20
    3164:	fc 01       	movw	r30, r24
    3166:	17 82       	std	Z+7, r1	; 0x07
    3168:	16 82       	std	Z+6, r1	; 0x06
    316a:	83 81       	ldd	r24, Z+3	; 0x03
    316c:	81 ff       	sbrs	r24, 1
    316e:	c8 c1       	rjmp	.+912    	; 0x3500 <vfprintf+0x3ae>
vfprintf():
    3170:	ce 01       	movw	r24, r28
    3172:	01 96       	adiw	r24, 0x01	; 1
    3174:	5c 01       	movw	r10, r24
    3176:	f7 01       	movw	r30, r14
    3178:	93 81       	ldd	r25, Z+3	; 0x03
    317a:	f3 01       	movw	r30, r6
    317c:	93 fd       	sbrc	r25, 3
    317e:	85 91       	lpm	r24, Z+
    3180:	93 ff       	sbrs	r25, 3
    3182:	81 91       	ld	r24, Z+
    3184:	3f 01       	movw	r6, r30
    3186:	88 23       	and	r24, r24
    3188:	09 f4       	brne	.+2      	; 0x318c <vfprintf+0x3a>
    318a:	53 c1       	rjmp	.+678    	; 0x3432 <vfprintf+0x2e0>
    318c:	85 32       	cpi	r24, 0x25	; 37
    318e:	39 f4       	brne	.+14     	; 0x319e <vfprintf+0x4c>
    3190:	93 fd       	sbrc	r25, 3
    3192:	85 91       	lpm	r24, Z+
    3194:	93 ff       	sbrs	r25, 3
    3196:	81 91       	ld	r24, Z+
    3198:	3f 01       	movw	r6, r30
    319a:	85 32       	cpi	r24, 0x25	; 37
    319c:	29 f4       	brne	.+10     	; 0x31a8 <vfprintf+0x56>
    319e:	b7 01       	movw	r22, r14
    31a0:	90 e0       	ldi	r25, 0x00	; 0
    31a2:	0e 94 9c 1a 	call	0x3538	; 0x3538 <fputc>
    31a6:	e7 cf       	rjmp	.-50     	; 0x3176 <vfprintf+0x24>
    31a8:	91 2c       	mov	r9, r1
    31aa:	21 2c       	mov	r2, r1
    31ac:	31 2c       	mov	r3, r1
    31ae:	ff e1       	ldi	r31, 0x1F	; 31
    31b0:	f3 15       	cp	r31, r3
    31b2:	38 f0       	brcs	.+14     	; 0x31c2 <vfprintf+0x70>
    31b4:	8b 32       	cpi	r24, 0x2B	; 43
    31b6:	11 f1       	breq	.+68     	; 0x31fc <vfprintf+0xaa>
    31b8:	90 f4       	brcc	.+36     	; 0x31de <vfprintf+0x8c>
    31ba:	80 32       	cpi	r24, 0x20	; 32
    31bc:	09 f1       	breq	.+66     	; 0x3200 <vfprintf+0xae>
    31be:	83 32       	cpi	r24, 0x23	; 35
    31c0:	29 f1       	breq	.+74     	; 0x320c <vfprintf+0xba>
    31c2:	37 fc       	sbrc	r3, 7
    31c4:	3c c0       	rjmp	.+120    	; 0x323e <vfprintf+0xec>
    31c6:	20 ed       	ldi	r18, 0xD0	; 208
    31c8:	28 0f       	add	r18, r24
    31ca:	2a 30       	cpi	r18, 0x0A	; 10
    31cc:	50 f5       	brcc	.+84     	; 0x3222 <vfprintf+0xd0>
    31ce:	36 fe       	sbrs	r3, 6
    31d0:	20 c0       	rjmp	.+64     	; 0x3212 <vfprintf+0xc0>
    31d2:	8a e0       	ldi	r24, 0x0A	; 10
    31d4:	98 9e       	mul	r9, r24
    31d6:	20 0d       	add	r18, r0
    31d8:	11 24       	eor	r1, r1
    31da:	92 2e       	mov	r9, r18
    31dc:	06 c0       	rjmp	.+12     	; 0x31ea <vfprintf+0x98>
    31de:	8d 32       	cpi	r24, 0x2D	; 45
    31e0:	91 f0       	breq	.+36     	; 0x3206 <vfprintf+0xb4>
    31e2:	80 33       	cpi	r24, 0x30	; 48
    31e4:	71 f7       	brne	.-36     	; 0x31c2 <vfprintf+0x70>
    31e6:	68 94       	set
    31e8:	30 f8       	bld	r3, 0
    31ea:	f3 01       	movw	r30, r6
    31ec:	93 fd       	sbrc	r25, 3
    31ee:	85 91       	lpm	r24, Z+
    31f0:	93 ff       	sbrs	r25, 3
    31f2:	81 91       	ld	r24, Z+
    31f4:	3f 01       	movw	r6, r30
    31f6:	81 11       	cpse	r24, r1
    31f8:	da cf       	rjmp	.-76     	; 0x31ae <vfprintf+0x5c>
    31fa:	21 c0       	rjmp	.+66     	; 0x323e <vfprintf+0xec>
    31fc:	68 94       	set
    31fe:	31 f8       	bld	r3, 1
    3200:	68 94       	set
    3202:	32 f8       	bld	r3, 2
    3204:	f2 cf       	rjmp	.-28     	; 0x31ea <vfprintf+0x98>
    3206:	68 94       	set
    3208:	33 f8       	bld	r3, 3
    320a:	ef cf       	rjmp	.-34     	; 0x31ea <vfprintf+0x98>
    320c:	68 94       	set
    320e:	34 f8       	bld	r3, 4
    3210:	ec cf       	rjmp	.-40     	; 0x31ea <vfprintf+0x98>
    3212:	ea e0       	ldi	r30, 0x0A	; 10
    3214:	2e 9e       	mul	r2, r30
    3216:	20 0d       	add	r18, r0
    3218:	11 24       	eor	r1, r1
    321a:	22 2e       	mov	r2, r18
    321c:	68 94       	set
    321e:	35 f8       	bld	r3, 5
    3220:	e4 cf       	rjmp	.-56     	; 0x31ea <vfprintf+0x98>
    3222:	8e 32       	cpi	r24, 0x2E	; 46
    3224:	29 f4       	brne	.+10     	; 0x3230 <vfprintf+0xde>
    3226:	36 fc       	sbrc	r3, 6
    3228:	04 c1       	rjmp	.+520    	; 0x3432 <vfprintf+0x2e0>
    322a:	68 94       	set
    322c:	36 f8       	bld	r3, 6
    322e:	dd cf       	rjmp	.-70     	; 0x31ea <vfprintf+0x98>
    3230:	8c 36       	cpi	r24, 0x6C	; 108
    3232:	19 f4       	brne	.+6      	; 0x323a <vfprintf+0xe8>
    3234:	68 94       	set
    3236:	37 f8       	bld	r3, 7
    3238:	d8 cf       	rjmp	.-80     	; 0x31ea <vfprintf+0x98>
    323a:	88 36       	cpi	r24, 0x68	; 104
    323c:	b1 f2       	breq	.-84     	; 0x31ea <vfprintf+0x98>
    323e:	98 2f       	mov	r25, r24
    3240:	9f 7d       	andi	r25, 0xDF	; 223
    3242:	95 54       	subi	r25, 0x45	; 69
    3244:	93 30       	cpi	r25, 0x03	; 3
    3246:	e0 f0       	brcs	.+56     	; 0x3280 <vfprintf+0x12e>
    3248:	83 36       	cpi	r24, 0x63	; 99
    324a:	a1 f1       	breq	.+104    	; 0x32b4 <vfprintf+0x162>
    324c:	83 37       	cpi	r24, 0x73	; 115
    324e:	c1 f1       	breq	.+112    	; 0x32c0 <vfprintf+0x16e>
    3250:	83 35       	cpi	r24, 0x53	; 83
    3252:	09 f0       	breq	.+2      	; 0x3256 <vfprintf+0x104>
    3254:	63 c0       	rjmp	.+198    	; 0x331c <vfprintf+0x1ca>
    3256:	28 01       	movw	r4, r16
    3258:	f2 e0       	ldi	r31, 0x02	; 2
    325a:	4f 0e       	add	r4, r31
    325c:	51 1c       	adc	r5, r1
    325e:	f8 01       	movw	r30, r16
    3260:	c0 80       	ld	r12, Z
    3262:	d1 80       	ldd	r13, Z+1	; 0x01
    3264:	69 2d       	mov	r22, r9
    3266:	70 e0       	ldi	r23, 0x00	; 0
    3268:	36 fc       	sbrc	r3, 6
    326a:	02 c0       	rjmp	.+4      	; 0x3270 <vfprintf+0x11e>
    326c:	6f ef       	ldi	r22, 0xFF	; 255
    326e:	7f ef       	ldi	r23, 0xFF	; 255
    3270:	c6 01       	movw	r24, r12
    3272:	0e 94 86 1a 	call	0x350c	; 0x350c <strnlen_P>
    3276:	4c 01       	movw	r8, r24
    3278:	68 94       	set
    327a:	37 f8       	bld	r3, 7
    327c:	82 01       	movw	r16, r4
    327e:	0a c0       	rjmp	.+20     	; 0x3294 <vfprintf+0x142>
    3280:	0c 5f       	subi	r16, 0xFC	; 252
    3282:	1f 4f       	sbci	r17, 0xFF	; 255
    3284:	ff e3       	ldi	r31, 0x3F	; 63
    3286:	f9 83       	std	Y+1, r31	; 0x01
    3288:	88 24       	eor	r8, r8
    328a:	83 94       	inc	r8
    328c:	91 2c       	mov	r9, r1
    328e:	65 01       	movw	r12, r10
    3290:	e8 94       	clt
    3292:	37 f8       	bld	r3, 7
    3294:	33 fe       	sbrs	r3, 3
    3296:	2d c0       	rjmp	.+90     	; 0x32f2 <vfprintf+0x1a0>
    3298:	52 2c       	mov	r5, r2
    329a:	81 14       	cp	r8, r1
    329c:	91 04       	cpc	r9, r1
    329e:	71 f5       	brne	.+92     	; 0x32fc <vfprintf+0x1aa>
    32a0:	55 20       	and	r5, r5
    32a2:	09 f4       	brne	.+2      	; 0x32a6 <vfprintf+0x154>
    32a4:	68 cf       	rjmp	.-304    	; 0x3176 <vfprintf+0x24>
    32a6:	b7 01       	movw	r22, r14
    32a8:	80 e2       	ldi	r24, 0x20	; 32
    32aa:	90 e0       	ldi	r25, 0x00	; 0
    32ac:	0e 94 9c 1a 	call	0x3538	; 0x3538 <fputc>
    32b0:	5a 94       	dec	r5
    32b2:	f6 cf       	rjmp	.-20     	; 0x32a0 <vfprintf+0x14e>
    32b4:	f8 01       	movw	r30, r16
    32b6:	80 81       	ld	r24, Z
    32b8:	89 83       	std	Y+1, r24	; 0x01
    32ba:	0e 5f       	subi	r16, 0xFE	; 254
    32bc:	1f 4f       	sbci	r17, 0xFF	; 255
    32be:	e4 cf       	rjmp	.-56     	; 0x3288 <vfprintf+0x136>
    32c0:	28 01       	movw	r4, r16
    32c2:	f2 e0       	ldi	r31, 0x02	; 2
    32c4:	4f 0e       	add	r4, r31
    32c6:	51 1c       	adc	r5, r1
    32c8:	f8 01       	movw	r30, r16
    32ca:	c0 80       	ld	r12, Z
    32cc:	d1 80       	ldd	r13, Z+1	; 0x01
    32ce:	69 2d       	mov	r22, r9
    32d0:	70 e0       	ldi	r23, 0x00	; 0
    32d2:	36 fc       	sbrc	r3, 6
    32d4:	02 c0       	rjmp	.+4      	; 0x32da <vfprintf+0x188>
    32d6:	6f ef       	ldi	r22, 0xFF	; 255
    32d8:	7f ef       	ldi	r23, 0xFF	; 255
    32da:	c6 01       	movw	r24, r12
    32dc:	0e 94 91 1a 	call	0x3522	; 0x3522 <strnlen>
    32e0:	4c 01       	movw	r8, r24
    32e2:	82 01       	movw	r16, r4
    32e4:	d5 cf       	rjmp	.-86     	; 0x3290 <vfprintf+0x13e>
    32e6:	b7 01       	movw	r22, r14
    32e8:	80 e2       	ldi	r24, 0x20	; 32
    32ea:	90 e0       	ldi	r25, 0x00	; 0
    32ec:	0e 94 9c 1a 	call	0x3538	; 0x3538 <fputc>
    32f0:	2a 94       	dec	r2
    32f2:	28 14       	cp	r2, r8
    32f4:	19 04       	cpc	r1, r9
    32f6:	09 f0       	breq	.+2      	; 0x32fa <vfprintf+0x1a8>
    32f8:	b0 f7       	brcc	.-20     	; 0x32e6 <vfprintf+0x194>
    32fa:	ce cf       	rjmp	.-100    	; 0x3298 <vfprintf+0x146>
    32fc:	f6 01       	movw	r30, r12
    32fe:	37 fc       	sbrc	r3, 7
    3300:	85 91       	lpm	r24, Z+
    3302:	37 fe       	sbrs	r3, 7
    3304:	81 91       	ld	r24, Z+
    3306:	6f 01       	movw	r12, r30
    3308:	b7 01       	movw	r22, r14
    330a:	90 e0       	ldi	r25, 0x00	; 0
    330c:	0e 94 9c 1a 	call	0x3538	; 0x3538 <fputc>
    3310:	51 10       	cpse	r5, r1
    3312:	5a 94       	dec	r5
    3314:	f1 e0       	ldi	r31, 0x01	; 1
    3316:	8f 1a       	sub	r8, r31
    3318:	91 08       	sbc	r9, r1
    331a:	bf cf       	rjmp	.-130    	; 0x329a <vfprintf+0x148>
    331c:	84 36       	cpi	r24, 0x64	; 100
    331e:	19 f0       	breq	.+6      	; 0x3326 <vfprintf+0x1d4>
    3320:	89 36       	cpi	r24, 0x69	; 105
    3322:	09 f0       	breq	.+2      	; 0x3326 <vfprintf+0x1d4>
    3324:	77 c0       	rjmp	.+238    	; 0x3414 <vfprintf+0x2c2>
    3326:	f8 01       	movw	r30, r16
    3328:	37 fe       	sbrs	r3, 7
    332a:	6b c0       	rjmp	.+214    	; 0x3402 <vfprintf+0x2b0>
    332c:	60 81       	ld	r22, Z
    332e:	71 81       	ldd	r23, Z+1	; 0x01
    3330:	82 81       	ldd	r24, Z+2	; 0x02
    3332:	93 81       	ldd	r25, Z+3	; 0x03
    3334:	0c 5f       	subi	r16, 0xFC	; 252
    3336:	1f 4f       	sbci	r17, 0xFF	; 255
    3338:	f3 2d       	mov	r31, r3
    333a:	ff 76       	andi	r31, 0x6F	; 111
    333c:	3f 2e       	mov	r3, r31
    333e:	97 ff       	sbrs	r25, 7
    3340:	09 c0       	rjmp	.+18     	; 0x3354 <vfprintf+0x202>
    3342:	90 95       	com	r25
    3344:	80 95       	com	r24
    3346:	70 95       	com	r23
    3348:	61 95       	neg	r22
    334a:	7f 4f       	sbci	r23, 0xFF	; 255
    334c:	8f 4f       	sbci	r24, 0xFF	; 255
    334e:	9f 4f       	sbci	r25, 0xFF	; 255
    3350:	68 94       	set
    3352:	37 f8       	bld	r3, 7
    3354:	2a e0       	ldi	r18, 0x0A	; 10
    3356:	30 e0       	ldi	r19, 0x00	; 0
    3358:	a5 01       	movw	r20, r10
    335a:	0e 94 cc 1a 	call	0x3598	; 0x3598 <__ultoa_invert>
    335e:	c8 2e       	mov	r12, r24
    3360:	ca 18       	sub	r12, r10
    3362:	8c 2c       	mov	r8, r12
    3364:	43 2c       	mov	r4, r3
    3366:	36 fe       	sbrs	r3, 6
    3368:	0c c0       	rjmp	.+24     	; 0x3382 <vfprintf+0x230>
    336a:	e8 94       	clt
    336c:	40 f8       	bld	r4, 0
    336e:	c9 14       	cp	r12, r9
    3370:	40 f4       	brcc	.+16     	; 0x3382 <vfprintf+0x230>
    3372:	34 fe       	sbrs	r3, 4
    3374:	05 c0       	rjmp	.+10     	; 0x3380 <vfprintf+0x22e>
    3376:	32 fc       	sbrc	r3, 2
    3378:	03 c0       	rjmp	.+6      	; 0x3380 <vfprintf+0x22e>
    337a:	f3 2d       	mov	r31, r3
    337c:	fe 7e       	andi	r31, 0xEE	; 238
    337e:	4f 2e       	mov	r4, r31
    3380:	89 2c       	mov	r8, r9
    3382:	44 fe       	sbrs	r4, 4
    3384:	95 c0       	rjmp	.+298    	; 0x34b0 <vfprintf+0x35e>
    3386:	fe 01       	movw	r30, r28
    3388:	ec 0d       	add	r30, r12
    338a:	f1 1d       	adc	r31, r1
    338c:	80 81       	ld	r24, Z
    338e:	80 33       	cpi	r24, 0x30	; 48
    3390:	09 f0       	breq	.+2      	; 0x3394 <vfprintf+0x242>
    3392:	87 c0       	rjmp	.+270    	; 0x34a2 <vfprintf+0x350>
    3394:	24 2d       	mov	r18, r4
    3396:	29 7e       	andi	r18, 0xE9	; 233
    3398:	42 2e       	mov	r4, r18
    339a:	84 2d       	mov	r24, r4
    339c:	88 70       	andi	r24, 0x08	; 8
    339e:	58 2e       	mov	r5, r24
    33a0:	43 fc       	sbrc	r4, 3
    33a2:	95 c0       	rjmp	.+298    	; 0x34ce <vfprintf+0x37c>
    33a4:	40 fe       	sbrs	r4, 0
    33a6:	8f c0       	rjmp	.+286    	; 0x34c6 <vfprintf+0x374>
    33a8:	9c 2c       	mov	r9, r12
    33aa:	82 14       	cp	r8, r2
    33ac:	18 f4       	brcc	.+6      	; 0x33b4 <vfprintf+0x262>
    33ae:	2c 0c       	add	r2, r12
    33b0:	92 2c       	mov	r9, r2
    33b2:	98 18       	sub	r9, r8
    33b4:	44 fe       	sbrs	r4, 4
    33b6:	91 c0       	rjmp	.+290    	; 0x34da <vfprintf+0x388>
    33b8:	b7 01       	movw	r22, r14
    33ba:	80 e3       	ldi	r24, 0x30	; 48
    33bc:	90 e0       	ldi	r25, 0x00	; 0
    33be:	0e 94 9c 1a 	call	0x3538	; 0x3538 <fputc>
    33c2:	42 fe       	sbrs	r4, 2
    33c4:	09 c0       	rjmp	.+18     	; 0x33d8 <vfprintf+0x286>
    33c6:	88 e7       	ldi	r24, 0x78	; 120
    33c8:	90 e0       	ldi	r25, 0x00	; 0
    33ca:	41 fe       	sbrs	r4, 1
    33cc:	02 c0       	rjmp	.+4      	; 0x33d2 <vfprintf+0x280>
    33ce:	88 e5       	ldi	r24, 0x58	; 88
    33d0:	90 e0       	ldi	r25, 0x00	; 0
    33d2:	b7 01       	movw	r22, r14
    33d4:	0e 94 9c 1a 	call	0x3538	; 0x3538 <fputc>
    33d8:	c9 14       	cp	r12, r9
    33da:	08 f4       	brcc	.+2      	; 0x33de <vfprintf+0x28c>
    33dc:	8a c0       	rjmp	.+276    	; 0x34f2 <vfprintf+0x3a0>
    33de:	ca 94       	dec	r12
    33e0:	d1 2c       	mov	r13, r1
    33e2:	9f ef       	ldi	r25, 0xFF	; 255
    33e4:	c9 1a       	sub	r12, r25
    33e6:	d9 0a       	sbc	r13, r25
    33e8:	ca 0c       	add	r12, r10
    33ea:	db 1c       	adc	r13, r11
    33ec:	f6 01       	movw	r30, r12
    33ee:	82 91       	ld	r24, -Z
    33f0:	6f 01       	movw	r12, r30
    33f2:	b7 01       	movw	r22, r14
    33f4:	90 e0       	ldi	r25, 0x00	; 0
    33f6:	0e 94 9c 1a 	call	0x3538	; 0x3538 <fputc>
    33fa:	ac 14       	cp	r10, r12
    33fc:	bd 04       	cpc	r11, r13
    33fe:	b1 f7       	brne	.-20     	; 0x33ec <vfprintf+0x29a>
    3400:	4f cf       	rjmp	.-354    	; 0x32a0 <vfprintf+0x14e>
    3402:	60 81       	ld	r22, Z
    3404:	71 81       	ldd	r23, Z+1	; 0x01
    3406:	07 2e       	mov	r0, r23
    3408:	00 0c       	add	r0, r0
    340a:	88 0b       	sbc	r24, r24
    340c:	99 0b       	sbc	r25, r25
    340e:	0e 5f       	subi	r16, 0xFE	; 254
    3410:	1f 4f       	sbci	r17, 0xFF	; 255
    3412:	92 cf       	rjmp	.-220    	; 0x3338 <vfprintf+0x1e6>
    3414:	d3 2c       	mov	r13, r3
    3416:	e8 94       	clt
    3418:	d4 f8       	bld	r13, 4
    341a:	2a e0       	ldi	r18, 0x0A	; 10
    341c:	30 e0       	ldi	r19, 0x00	; 0
    341e:	85 37       	cpi	r24, 0x75	; 117
    3420:	39 f1       	breq	.+78     	; 0x3470 <vfprintf+0x31e>
    3422:	23 2d       	mov	r18, r3
    3424:	29 7f       	andi	r18, 0xF9	; 249
    3426:	d2 2e       	mov	r13, r18
    3428:	8f 36       	cpi	r24, 0x6F	; 111
    342a:	01 f1       	breq	.+64     	; 0x346c <vfprintf+0x31a>
    342c:	48 f4       	brcc	.+18     	; 0x3440 <vfprintf+0x2ee>
    342e:	88 35       	cpi	r24, 0x58	; 88
    3430:	a9 f0       	breq	.+42     	; 0x345c <vfprintf+0x30a>
    3432:	f7 01       	movw	r30, r14
    3434:	86 81       	ldd	r24, Z+6	; 0x06
    3436:	97 81       	ldd	r25, Z+7	; 0x07
    3438:	2b 96       	adiw	r28, 0x0b	; 11
    343a:	e2 e1       	ldi	r30, 0x12	; 18
    343c:	0c 94 b7 1b 	jmp	0x376e	; 0x376e <__epilogue_restores__>
    3440:	80 37       	cpi	r24, 0x70	; 112
    3442:	49 f0       	breq	.+18     	; 0x3456 <vfprintf+0x304>
    3444:	88 37       	cpi	r24, 0x78	; 120
    3446:	a9 f7       	brne	.-22     	; 0x3432 <vfprintf+0x2e0>
    3448:	d4 fe       	sbrs	r13, 4
    344a:	02 c0       	rjmp	.+4      	; 0x3450 <vfprintf+0x2fe>
    344c:	68 94       	set
    344e:	d2 f8       	bld	r13, 2
    3450:	20 e1       	ldi	r18, 0x10	; 16
    3452:	30 e0       	ldi	r19, 0x00	; 0
    3454:	0d c0       	rjmp	.+26     	; 0x3470 <vfprintf+0x31e>
    3456:	68 94       	set
    3458:	d4 f8       	bld	r13, 4
    345a:	f6 cf       	rjmp	.-20     	; 0x3448 <vfprintf+0x2f6>
    345c:	34 fe       	sbrs	r3, 4
    345e:	03 c0       	rjmp	.+6      	; 0x3466 <vfprintf+0x314>
    3460:	82 2f       	mov	r24, r18
    3462:	86 60       	ori	r24, 0x06	; 6
    3464:	d8 2e       	mov	r13, r24
    3466:	20 e1       	ldi	r18, 0x10	; 16
    3468:	32 e0       	ldi	r19, 0x02	; 2
    346a:	02 c0       	rjmp	.+4      	; 0x3470 <vfprintf+0x31e>
    346c:	28 e0       	ldi	r18, 0x08	; 8
    346e:	30 e0       	ldi	r19, 0x00	; 0
    3470:	f8 01       	movw	r30, r16
    3472:	d7 fe       	sbrs	r13, 7
    3474:	0f c0       	rjmp	.+30     	; 0x3494 <vfprintf+0x342>
    3476:	60 81       	ld	r22, Z
    3478:	71 81       	ldd	r23, Z+1	; 0x01
    347a:	82 81       	ldd	r24, Z+2	; 0x02
    347c:	93 81       	ldd	r25, Z+3	; 0x03
    347e:	0c 5f       	subi	r16, 0xFC	; 252
    3480:	1f 4f       	sbci	r17, 0xFF	; 255
    3482:	a5 01       	movw	r20, r10
    3484:	0e 94 cc 1a 	call	0x3598	; 0x3598 <__ultoa_invert>
    3488:	c8 2e       	mov	r12, r24
    348a:	ca 18       	sub	r12, r10
    348c:	3d 2c       	mov	r3, r13
    348e:	e8 94       	clt
    3490:	37 f8       	bld	r3, 7
    3492:	67 cf       	rjmp	.-306    	; 0x3362 <vfprintf+0x210>
    3494:	60 81       	ld	r22, Z
    3496:	71 81       	ldd	r23, Z+1	; 0x01
    3498:	90 e0       	ldi	r25, 0x00	; 0
    349a:	80 e0       	ldi	r24, 0x00	; 0
    349c:	0e 5f       	subi	r16, 0xFE	; 254
    349e:	1f 4f       	sbci	r17, 0xFF	; 255
    34a0:	f0 cf       	rjmp	.-32     	; 0x3482 <vfprintf+0x330>
    34a2:	42 fc       	sbrc	r4, 2
    34a4:	02 c0       	rjmp	.+4      	; 0x34aa <vfprintf+0x358>
    34a6:	83 94       	inc	r8
    34a8:	78 cf       	rjmp	.-272    	; 0x339a <vfprintf+0x248>
    34aa:	83 94       	inc	r8
    34ac:	83 94       	inc	r8
    34ae:	75 cf       	rjmp	.-278    	; 0x339a <vfprintf+0x248>
    34b0:	84 2d       	mov	r24, r4
    34b2:	86 78       	andi	r24, 0x86	; 134
    34b4:	09 f4       	brne	.+2      	; 0x34b8 <vfprintf+0x366>
    34b6:	71 cf       	rjmp	.-286    	; 0x339a <vfprintf+0x248>
    34b8:	f6 cf       	rjmp	.-20     	; 0x34a6 <vfprintf+0x354>
    34ba:	b7 01       	movw	r22, r14
    34bc:	80 e2       	ldi	r24, 0x20	; 32
    34be:	90 e0       	ldi	r25, 0x00	; 0
    34c0:	0e 94 9c 1a 	call	0x3538	; 0x3538 <fputc>
    34c4:	83 94       	inc	r8
    34c6:	82 14       	cp	r8, r2
    34c8:	c0 f3       	brcs	.-16     	; 0x34ba <vfprintf+0x368>
    34ca:	51 2c       	mov	r5, r1
    34cc:	73 cf       	rjmp	.-282    	; 0x33b4 <vfprintf+0x262>
    34ce:	52 2c       	mov	r5, r2
    34d0:	58 18       	sub	r5, r8
    34d2:	82 14       	cp	r8, r2
    34d4:	08 f4       	brcc	.+2      	; 0x34d8 <vfprintf+0x386>
    34d6:	6e cf       	rjmp	.-292    	; 0x33b4 <vfprintf+0x262>
    34d8:	f8 cf       	rjmp	.-16     	; 0x34ca <vfprintf+0x378>
    34da:	84 2d       	mov	r24, r4
    34dc:	86 78       	andi	r24, 0x86	; 134
    34de:	09 f4       	brne	.+2      	; 0x34e2 <vfprintf+0x390>
    34e0:	7b cf       	rjmp	.-266    	; 0x33d8 <vfprintf+0x286>
    34e2:	8b e2       	ldi	r24, 0x2B	; 43
    34e4:	41 fe       	sbrs	r4, 1
    34e6:	80 e2       	ldi	r24, 0x20	; 32
    34e8:	47 fc       	sbrc	r4, 7
    34ea:	8d e2       	ldi	r24, 0x2D	; 45
    34ec:	b7 01       	movw	r22, r14
    34ee:	90 e0       	ldi	r25, 0x00	; 0
    34f0:	71 cf       	rjmp	.-286    	; 0x33d4 <vfprintf+0x282>
    34f2:	b7 01       	movw	r22, r14
    34f4:	80 e3       	ldi	r24, 0x30	; 48
    34f6:	90 e0       	ldi	r25, 0x00	; 0
    34f8:	0e 94 9c 1a 	call	0x3538	; 0x3538 <fputc>
    34fc:	9a 94       	dec	r9
    34fe:	6c cf       	rjmp	.-296    	; 0x33d8 <vfprintf+0x286>
    3500:	8f ef       	ldi	r24, 0xFF	; 255
    3502:	9f ef       	ldi	r25, 0xFF	; 255
    3504:	99 cf       	rjmp	.-206    	; 0x3438 <vfprintf+0x2e6>

00003506 <__ctype_isfalse>:
__ctype_isfalse():
    3506:	99 27       	eor	r25, r25
    3508:	88 27       	eor	r24, r24

0000350a <__ctype_istrue>:
__ctype_istrue():
    350a:	08 95       	ret

0000350c <strnlen_P>:
strnlen_P():
    350c:	fc 01       	movw	r30, r24
    350e:	05 90       	lpm	r0, Z+
    3510:	61 50       	subi	r22, 0x01	; 1
    3512:	70 40       	sbci	r23, 0x00	; 0
    3514:	01 10       	cpse	r0, r1
    3516:	d8 f7       	brcc	.-10     	; 0x350e <strnlen_P+0x2>
    3518:	80 95       	com	r24
    351a:	90 95       	com	r25
    351c:	8e 0f       	add	r24, r30
    351e:	9f 1f       	adc	r25, r31
    3520:	08 95       	ret

00003522 <strnlen>:
strnlen():
    3522:	fc 01       	movw	r30, r24
    3524:	61 50       	subi	r22, 0x01	; 1
    3526:	70 40       	sbci	r23, 0x00	; 0
    3528:	01 90       	ld	r0, Z+
    352a:	01 10       	cpse	r0, r1
    352c:	d8 f7       	brcc	.-10     	; 0x3524 <strnlen+0x2>
    352e:	80 95       	com	r24
    3530:	90 95       	com	r25
    3532:	8e 0f       	add	r24, r30
    3534:	9f 1f       	adc	r25, r31
    3536:	08 95       	ret

00003538 <fputc>:
fputc():
    3538:	0f 93       	push	r16
    353a:	1f 93       	push	r17
    353c:	cf 93       	push	r28
    353e:	df 93       	push	r29
    3540:	18 2f       	mov	r17, r24
    3542:	09 2f       	mov	r16, r25
    3544:	eb 01       	movw	r28, r22
    3546:	8b 81       	ldd	r24, Y+3	; 0x03
    3548:	81 fd       	sbrc	r24, 1
    354a:	09 c0       	rjmp	.+18     	; 0x355e <fputc+0x26>
    354c:	1f ef       	ldi	r17, 0xFF	; 255
    354e:	0f ef       	ldi	r16, 0xFF	; 255
    3550:	81 2f       	mov	r24, r17
    3552:	90 2f       	mov	r25, r16
    3554:	df 91       	pop	r29
    3556:	cf 91       	pop	r28
    3558:	1f 91       	pop	r17
    355a:	0f 91       	pop	r16
    355c:	08 95       	ret
    355e:	82 ff       	sbrs	r24, 2
    3560:	14 c0       	rjmp	.+40     	; 0x358a <fputc+0x52>
    3562:	2e 81       	ldd	r18, Y+6	; 0x06
    3564:	3f 81       	ldd	r19, Y+7	; 0x07
    3566:	8c 81       	ldd	r24, Y+4	; 0x04
    3568:	9d 81       	ldd	r25, Y+5	; 0x05
    356a:	28 17       	cp	r18, r24
    356c:	39 07       	cpc	r19, r25
    356e:	3c f4       	brge	.+14     	; 0x357e <fputc+0x46>
    3570:	e8 81       	ld	r30, Y
    3572:	f9 81       	ldd	r31, Y+1	; 0x01
    3574:	cf 01       	movw	r24, r30
    3576:	01 96       	adiw	r24, 0x01	; 1
    3578:	99 83       	std	Y+1, r25	; 0x01
    357a:	88 83       	st	Y, r24
    357c:	10 83       	st	Z, r17
    357e:	8e 81       	ldd	r24, Y+6	; 0x06
    3580:	9f 81       	ldd	r25, Y+7	; 0x07
    3582:	01 96       	adiw	r24, 0x01	; 1
    3584:	9f 83       	std	Y+7, r25	; 0x07
    3586:	8e 83       	std	Y+6, r24	; 0x06
    3588:	e3 cf       	rjmp	.-58     	; 0x3550 <fputc+0x18>
    358a:	e8 85       	ldd	r30, Y+8	; 0x08
    358c:	f9 85       	ldd	r31, Y+9	; 0x09
    358e:	81 2f       	mov	r24, r17
    3590:	09 95       	icall
    3592:	89 2b       	or	r24, r25
    3594:	a1 f3       	breq	.-24     	; 0x357e <fputc+0x46>
    3596:	da cf       	rjmp	.-76     	; 0x354c <fputc+0x14>

00003598 <__ultoa_invert>:
__ultoa_invert():
    3598:	fa 01       	movw	r30, r20
    359a:	aa 27       	eor	r26, r26
    359c:	28 30       	cpi	r18, 0x08	; 8
    359e:	51 f1       	breq	.+84     	; 0x35f4 <__ultoa_invert+0x5c>
    35a0:	20 31       	cpi	r18, 0x10	; 16
    35a2:	81 f1       	breq	.+96     	; 0x3604 <__ultoa_invert+0x6c>
    35a4:	e8 94       	clt
    35a6:	6f 93       	push	r22
    35a8:	6e 7f       	andi	r22, 0xFE	; 254
    35aa:	6e 5f       	subi	r22, 0xFE	; 254
    35ac:	7f 4f       	sbci	r23, 0xFF	; 255
    35ae:	8f 4f       	sbci	r24, 0xFF	; 255
    35b0:	9f 4f       	sbci	r25, 0xFF	; 255
    35b2:	af 4f       	sbci	r26, 0xFF	; 255
    35b4:	b1 e0       	ldi	r27, 0x01	; 1
    35b6:	3e d0       	rcall	.+124    	; 0x3634 <__ultoa_invert+0x9c>
    35b8:	b4 e0       	ldi	r27, 0x04	; 4
    35ba:	3c d0       	rcall	.+120    	; 0x3634 <__ultoa_invert+0x9c>
    35bc:	67 0f       	add	r22, r23
    35be:	78 1f       	adc	r23, r24
    35c0:	89 1f       	adc	r24, r25
    35c2:	9a 1f       	adc	r25, r26
    35c4:	a1 1d       	adc	r26, r1
    35c6:	68 0f       	add	r22, r24
    35c8:	79 1f       	adc	r23, r25
    35ca:	8a 1f       	adc	r24, r26
    35cc:	91 1d       	adc	r25, r1
    35ce:	a1 1d       	adc	r26, r1
    35d0:	6a 0f       	add	r22, r26
    35d2:	71 1d       	adc	r23, r1
    35d4:	81 1d       	adc	r24, r1
    35d6:	91 1d       	adc	r25, r1
    35d8:	a1 1d       	adc	r26, r1
    35da:	20 d0       	rcall	.+64     	; 0x361c <__ultoa_invert+0x84>
    35dc:	09 f4       	brne	.+2      	; 0x35e0 <__ultoa_invert+0x48>
    35de:	68 94       	set
    35e0:	3f 91       	pop	r19
    35e2:	2a e0       	ldi	r18, 0x0A	; 10
    35e4:	26 9f       	mul	r18, r22
    35e6:	11 24       	eor	r1, r1
    35e8:	30 19       	sub	r19, r0
    35ea:	30 5d       	subi	r19, 0xD0	; 208
    35ec:	31 93       	st	Z+, r19
    35ee:	de f6       	brtc	.-74     	; 0x35a6 <__ultoa_invert+0xe>
    35f0:	cf 01       	movw	r24, r30
    35f2:	08 95       	ret
    35f4:	46 2f       	mov	r20, r22
    35f6:	47 70       	andi	r20, 0x07	; 7
    35f8:	40 5d       	subi	r20, 0xD0	; 208
    35fa:	41 93       	st	Z+, r20
    35fc:	b3 e0       	ldi	r27, 0x03	; 3
    35fe:	0f d0       	rcall	.+30     	; 0x361e <__ultoa_invert+0x86>
    3600:	c9 f7       	brne	.-14     	; 0x35f4 <__ultoa_invert+0x5c>
    3602:	f6 cf       	rjmp	.-20     	; 0x35f0 <__ultoa_invert+0x58>
    3604:	46 2f       	mov	r20, r22
    3606:	4f 70       	andi	r20, 0x0F	; 15
    3608:	40 5d       	subi	r20, 0xD0	; 208
    360a:	4a 33       	cpi	r20, 0x3A	; 58
    360c:	18 f0       	brcs	.+6      	; 0x3614 <__ultoa_invert+0x7c>
    360e:	49 5d       	subi	r20, 0xD9	; 217
    3610:	31 fd       	sbrc	r19, 1
    3612:	40 52       	subi	r20, 0x20	; 32
    3614:	41 93       	st	Z+, r20
    3616:	02 d0       	rcall	.+4      	; 0x361c <__ultoa_invert+0x84>
    3618:	a9 f7       	brne	.-22     	; 0x3604 <__ultoa_invert+0x6c>
    361a:	ea cf       	rjmp	.-44     	; 0x35f0 <__ultoa_invert+0x58>
    361c:	b4 e0       	ldi	r27, 0x04	; 4
    361e:	a6 95       	lsr	r26
    3620:	97 95       	ror	r25
    3622:	87 95       	ror	r24
    3624:	77 95       	ror	r23
    3626:	67 95       	ror	r22
    3628:	ba 95       	dec	r27
    362a:	c9 f7       	brne	.-14     	; 0x361e <__ultoa_invert+0x86>
    362c:	00 97       	sbiw	r24, 0x00	; 0
    362e:	61 05       	cpc	r22, r1
    3630:	71 05       	cpc	r23, r1
    3632:	08 95       	ret
    3634:	9b 01       	movw	r18, r22
    3636:	ac 01       	movw	r20, r24
    3638:	0a 2e       	mov	r0, r26
    363a:	06 94       	lsr	r0
    363c:	57 95       	ror	r21
    363e:	47 95       	ror	r20
    3640:	37 95       	ror	r19
    3642:	27 95       	ror	r18
    3644:	ba 95       	dec	r27
    3646:	c9 f7       	brne	.-14     	; 0x363a <__ultoa_invert+0xa2>
    3648:	62 0f       	add	r22, r18
    364a:	73 1f       	adc	r23, r19
    364c:	84 1f       	adc	r24, r20
    364e:	95 1f       	adc	r25, r21
    3650:	a0 1d       	adc	r26, r0
    3652:	08 95       	ret

00003654 <__fp_inf>:
__fp_inf():
    3654:	97 f9       	bld	r25, 7
    3656:	9f 67       	ori	r25, 0x7F	; 127
    3658:	80 e8       	ldi	r24, 0x80	; 128
    365a:	70 e0       	ldi	r23, 0x00	; 0
    365c:	60 e0       	ldi	r22, 0x00	; 0
    365e:	08 95       	ret

00003660 <__fp_nan>:
__fp_nan():
    3660:	9f ef       	ldi	r25, 0xFF	; 255
    3662:	80 ec       	ldi	r24, 0xC0	; 192
    3664:	08 95       	ret

00003666 <__fp_pscA>:
__fp_pscA():
    3666:	00 24       	eor	r0, r0
    3668:	0a 94       	dec	r0
    366a:	16 16       	cp	r1, r22
    366c:	17 06       	cpc	r1, r23
    366e:	18 06       	cpc	r1, r24
    3670:	09 06       	cpc	r0, r25
    3672:	08 95       	ret

00003674 <__fp_pscB>:
__fp_pscB():
    3674:	00 24       	eor	r0, r0
    3676:	0a 94       	dec	r0
    3678:	12 16       	cp	r1, r18
    367a:	13 06       	cpc	r1, r19
    367c:	14 06       	cpc	r1, r20
    367e:	05 06       	cpc	r0, r21
    3680:	08 95       	ret

00003682 <__fp_round>:
__fp_round():
    3682:	09 2e       	mov	r0, r25
    3684:	03 94       	inc	r0
    3686:	00 0c       	add	r0, r0
    3688:	11 f4       	brne	.+4      	; 0x368e <__fp_round+0xc>
    368a:	88 23       	and	r24, r24
    368c:	52 f0       	brmi	.+20     	; 0x36a2 <__fp_round+0x20>
    368e:	bb 0f       	add	r27, r27
    3690:	40 f4       	brcc	.+16     	; 0x36a2 <__fp_round+0x20>
    3692:	bf 2b       	or	r27, r31
    3694:	11 f4       	brne	.+4      	; 0x369a <__fp_round+0x18>
    3696:	60 ff       	sbrs	r22, 0
    3698:	04 c0       	rjmp	.+8      	; 0x36a2 <__fp_round+0x20>
    369a:	6f 5f       	subi	r22, 0xFF	; 255
    369c:	7f 4f       	sbci	r23, 0xFF	; 255
    369e:	8f 4f       	sbci	r24, 0xFF	; 255
    36a0:	9f 4f       	sbci	r25, 0xFF	; 255
    36a2:	08 95       	ret

000036a4 <__fp_split3>:
__fp_split3():
    36a4:	57 fd       	sbrc	r21, 7
    36a6:	90 58       	subi	r25, 0x80	; 128
    36a8:	44 0f       	add	r20, r20
    36aa:	55 1f       	adc	r21, r21
    36ac:	59 f0       	breq	.+22     	; 0x36c4 <__fp_splitA+0x10>
    36ae:	5f 3f       	cpi	r21, 0xFF	; 255
    36b0:	71 f0       	breq	.+28     	; 0x36ce <__fp_splitA+0x1a>
    36b2:	47 95       	ror	r20

000036b4 <__fp_splitA>:
    36b4:	88 0f       	add	r24, r24
    36b6:	97 fb       	bst	r25, 7
    36b8:	99 1f       	adc	r25, r25
    36ba:	61 f0       	breq	.+24     	; 0x36d4 <__fp_splitA+0x20>
    36bc:	9f 3f       	cpi	r25, 0xFF	; 255
    36be:	79 f0       	breq	.+30     	; 0x36de <__fp_splitA+0x2a>
    36c0:	87 95       	ror	r24
    36c2:	08 95       	ret
    36c4:	12 16       	cp	r1, r18
    36c6:	13 06       	cpc	r1, r19
    36c8:	14 06       	cpc	r1, r20
    36ca:	55 1f       	adc	r21, r21
    36cc:	f2 cf       	rjmp	.-28     	; 0x36b2 <__fp_split3+0xe>
    36ce:	46 95       	lsr	r20
    36d0:	f1 df       	rcall	.-30     	; 0x36b4 <__fp_splitA>
    36d2:	08 c0       	rjmp	.+16     	; 0x36e4 <__fp_splitA+0x30>
    36d4:	16 16       	cp	r1, r22
    36d6:	17 06       	cpc	r1, r23
    36d8:	18 06       	cpc	r1, r24
    36da:	99 1f       	adc	r25, r25
    36dc:	f1 cf       	rjmp	.-30     	; 0x36c0 <__fp_splitA+0xc>
    36de:	86 95       	lsr	r24
    36e0:	71 05       	cpc	r23, r1
    36e2:	61 05       	cpc	r22, r1
    36e4:	08 94       	sec
    36e6:	08 95       	ret

000036e8 <__fp_zero>:
__fp_zero():
    36e8:	e8 94       	clt

000036ea <__fp_szero>:
    36ea:	bb 27       	eor	r27, r27
    36ec:	66 27       	eor	r22, r22
    36ee:	77 27       	eor	r23, r23
    36f0:	cb 01       	movw	r24, r22
    36f2:	97 f9       	bld	r25, 7
    36f4:	08 95       	ret

000036f6 <eeprom_read_byte>:
eeprom_read_byte():
    36f6:	e1 99       	sbic	0x1c, 1	; 28
    36f8:	fe cf       	rjmp	.-4      	; 0x36f6 <eeprom_read_byte>
    36fa:	9f bb       	out	0x1f, r25	; 31
    36fc:	8e bb       	out	0x1e, r24	; 30
    36fe:	e0 9a       	sbi	0x1c, 0	; 28
    3700:	99 27       	eor	r25, r25
    3702:	8d b3       	in	r24, 0x1d	; 29
    3704:	08 95       	ret

00003706 <eeprom_write_byte>:
eeprom_write_byte():
    3706:	26 2f       	mov	r18, r22

00003708 <eeprom_write_r18>:
    3708:	e1 99       	sbic	0x1c, 1	; 28
    370a:	fe cf       	rjmp	.-4      	; 0x3708 <eeprom_write_r18>
    370c:	9f bb       	out	0x1f, r25	; 31
    370e:	8e bb       	out	0x1e, r24	; 30
    3710:	2d bb       	out	0x1d, r18	; 29
    3712:	0f b6       	in	r0, 0x3f	; 63
    3714:	f8 94       	cli
    3716:	e2 9a       	sbi	0x1c, 2	; 28
    3718:	e1 9a       	sbi	0x1c, 1	; 28
    371a:	0f be       	out	0x3f, r0	; 63
    371c:	01 96       	adiw	r24, 0x01	; 1
    371e:	08 95       	ret

00003720 <__muluhisi3>:
__muluhisi3():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:626
    3720:	0e 94 d2 1b 	call	0x37a4	; 0x37a4 <__umulhisi3>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:627
    3724:	a5 9f       	mul	r26, r21
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:628
    3726:	90 0d       	add	r25, r0
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:629
    3728:	b4 9f       	mul	r27, r20
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:630
    372a:	90 0d       	add	r25, r0
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:631
    372c:	a4 9f       	mul	r26, r20
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:632
    372e:	80 0d       	add	r24, r0
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:633
    3730:	91 1d       	adc	r25, r1
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:634
    3732:	11 24       	eor	r1, r1
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:635
    3734:	08 95       	ret

00003736 <__prologue_saves__>:
__prologue_saves__():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2169
    3736:	2f 92       	push	r2
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2170
    3738:	3f 92       	push	r3
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2171
    373a:	4f 92       	push	r4
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2172
    373c:	5f 92       	push	r5
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2173
    373e:	6f 92       	push	r6
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2174
    3740:	7f 92       	push	r7
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2175
    3742:	8f 92       	push	r8
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2176
    3744:	9f 92       	push	r9
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2177
    3746:	af 92       	push	r10
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2178
    3748:	bf 92       	push	r11
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2179
    374a:	cf 92       	push	r12
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2180
    374c:	df 92       	push	r13
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2181
    374e:	ef 92       	push	r14
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2182
    3750:	ff 92       	push	r15
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2183
    3752:	0f 93       	push	r16
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2184
    3754:	1f 93       	push	r17
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2185
    3756:	cf 93       	push	r28
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2186
    3758:	df 93       	push	r29
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2200
    375a:	cd b7       	in	r28, 0x3d	; 61
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2201
    375c:	de b7       	in	r29, 0x3e	; 62
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2202
    375e:	ca 1b       	sub	r28, r26
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2203
    3760:	db 0b       	sbc	r29, r27
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2204
    3762:	0f b6       	in	r0, 0x3f	; 63
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2205
    3764:	f8 94       	cli
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2206
    3766:	de bf       	out	0x3e, r29	; 62
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2207
    3768:	0f be       	out	0x3f, r0	; 63
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2208
    376a:	cd bf       	out	0x3d, r28	; 61
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2211
    376c:	09 94       	ijmp

0000376e <__epilogue_restores__>:
__epilogue_restores__():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2222
    376e:	2a 88       	ldd	r2, Y+18	; 0x12
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2223
    3770:	39 88       	ldd	r3, Y+17	; 0x11
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2224
    3772:	48 88       	ldd	r4, Y+16	; 0x10
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2225
    3774:	5f 84       	ldd	r5, Y+15	; 0x0f
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2226
    3776:	6e 84       	ldd	r6, Y+14	; 0x0e
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2227
    3778:	7d 84       	ldd	r7, Y+13	; 0x0d
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2228
    377a:	8c 84       	ldd	r8, Y+12	; 0x0c
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2229
    377c:	9b 84       	ldd	r9, Y+11	; 0x0b
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2230
    377e:	aa 84       	ldd	r10, Y+10	; 0x0a
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2231
    3780:	b9 84       	ldd	r11, Y+9	; 0x09
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2232
    3782:	c8 84       	ldd	r12, Y+8	; 0x08
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2233
    3784:	df 80       	ldd	r13, Y+7	; 0x07
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2234
    3786:	ee 80       	ldd	r14, Y+6	; 0x06
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2235
    3788:	fd 80       	ldd	r15, Y+5	; 0x05
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2236
    378a:	0c 81       	ldd	r16, Y+4	; 0x04
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2237
    378c:	1b 81       	ldd	r17, Y+3	; 0x03
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2238
    378e:	aa 81       	ldd	r26, Y+2	; 0x02
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2252
    3790:	b9 81       	ldd	r27, Y+1	; 0x01
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2253
    3792:	ce 0f       	add	r28, r30
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2254
    3794:	d1 1d       	adc	r29, r1
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2255
    3796:	0f b6       	in	r0, 0x3f	; 63
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2256
    3798:	f8 94       	cli
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2257
    379a:	de bf       	out	0x3e, r29	; 62
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2258
    379c:	0f be       	out	0x3f, r0	; 63
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2259
    379e:	cd bf       	out	0x3d, r28	; 61
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2260
    37a0:	ed 01       	movw	r28, r26
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2263
    37a2:	08 95       	ret

000037a4 <__umulhisi3>:
__umulhisi3():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:564
    37a4:	a2 9f       	mul	r26, r18
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:565
    37a6:	b0 01       	movw	r22, r0
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:566
    37a8:	b3 9f       	mul	r27, r19
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:567
    37aa:	c0 01       	movw	r24, r0
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:568
    37ac:	a3 9f       	mul	r26, r19
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:573
    37ae:	70 0d       	add	r23, r0
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:574
    37b0:	81 1d       	adc	r24, r1
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:575
    37b2:	11 24       	eor	r1, r1
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:576
    37b4:	91 1d       	adc	r25, r1
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:580
    37b6:	b2 9f       	mul	r27, r18
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:581
    37b8:	70 0d       	add	r23, r0
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:582
    37ba:	81 1d       	adc	r24, r1
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:583
    37bc:	11 24       	eor	r1, r1
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:584
    37be:	91 1d       	adc	r25, r1
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:585
    37c0:	08 95       	ret

000037c2 <__subsf3>:
__subsf3():
    37c2:	50 58       	subi	r21, 0x80	; 128

000037c4 <__addsf3>:
    37c4:	bb 27       	eor	r27, r27
    37c6:	aa 27       	eor	r26, r26
    37c8:	0e 94 f9 1b 	call	0x37f2	; 0x37f2 <__addsf3x>
    37cc:	0c 94 41 1b 	jmp	0x3682	; 0x3682 <__fp_round>
__addsf3():
    37d0:	0e 94 33 1b 	call	0x3666	; 0x3666 <__fp_pscA>
    37d4:	38 f0       	brcs	.+14     	; 0x37e4 <__addsf3+0x20>
    37d6:	0e 94 3a 1b 	call	0x3674	; 0x3674 <__fp_pscB>
    37da:	20 f0       	brcs	.+8      	; 0x37e4 <__addsf3+0x20>
    37dc:	39 f4       	brne	.+14     	; 0x37ec <__addsf3+0x28>
    37de:	9f 3f       	cpi	r25, 0xFF	; 255
    37e0:	19 f4       	brne	.+6      	; 0x37e8 <__addsf3+0x24>
    37e2:	26 f4       	brtc	.+8      	; 0x37ec <__addsf3+0x28>
    37e4:	0c 94 30 1b 	jmp	0x3660	; 0x3660 <__fp_nan>
    37e8:	0e f4       	brtc	.+2      	; 0x37ec <__addsf3+0x28>
    37ea:	e0 95       	com	r30
    37ec:	e7 fb       	bst	r30, 7
    37ee:	0c 94 2a 1b 	jmp	0x3654	; 0x3654 <__fp_inf>

000037f2 <__addsf3x>:
__addsf3x():
    37f2:	e9 2f       	mov	r30, r25
    37f4:	0e 94 52 1b 	call	0x36a4	; 0x36a4 <__fp_split3>
    37f8:	58 f3       	brcs	.-42     	; 0x37d0 <__addsf3+0xc>
    37fa:	ba 17       	cp	r27, r26
    37fc:	62 07       	cpc	r22, r18
    37fe:	73 07       	cpc	r23, r19
    3800:	84 07       	cpc	r24, r20
    3802:	95 07       	cpc	r25, r21
    3804:	20 f0       	brcs	.+8      	; 0x380e <__addsf3x+0x1c>
    3806:	79 f4       	brne	.+30     	; 0x3826 <__addsf3x+0x34>
    3808:	a6 f5       	brtc	.+104    	; 0x3872 <__addsf3x+0x80>
    380a:	0c 94 74 1b 	jmp	0x36e8	; 0x36e8 <__fp_zero>
    380e:	0e f4       	brtc	.+2      	; 0x3812 <__addsf3x+0x20>
    3810:	e0 95       	com	r30
    3812:	0b 2e       	mov	r0, r27
    3814:	ba 2f       	mov	r27, r26
    3816:	a0 2d       	mov	r26, r0
    3818:	0b 01       	movw	r0, r22
    381a:	b9 01       	movw	r22, r18
    381c:	90 01       	movw	r18, r0
    381e:	0c 01       	movw	r0, r24
    3820:	ca 01       	movw	r24, r20
    3822:	a0 01       	movw	r20, r0
    3824:	11 24       	eor	r1, r1
    3826:	ff 27       	eor	r31, r31
    3828:	59 1b       	sub	r21, r25
    382a:	99 f0       	breq	.+38     	; 0x3852 <__addsf3x+0x60>
    382c:	59 3f       	cpi	r21, 0xF9	; 249
    382e:	50 f4       	brcc	.+20     	; 0x3844 <__addsf3x+0x52>
    3830:	50 3e       	cpi	r21, 0xE0	; 224
    3832:	68 f1       	brcs	.+90     	; 0x388e <__addsf3x+0x9c>
    3834:	1a 16       	cp	r1, r26
    3836:	f0 40       	sbci	r31, 0x00	; 0
    3838:	a2 2f       	mov	r26, r18
    383a:	23 2f       	mov	r18, r19
    383c:	34 2f       	mov	r19, r20
    383e:	44 27       	eor	r20, r20
    3840:	58 5f       	subi	r21, 0xF8	; 248
    3842:	f3 cf       	rjmp	.-26     	; 0x382a <__addsf3x+0x38>
    3844:	46 95       	lsr	r20
    3846:	37 95       	ror	r19
    3848:	27 95       	ror	r18
    384a:	a7 95       	ror	r26
    384c:	f0 40       	sbci	r31, 0x00	; 0
    384e:	53 95       	inc	r21
    3850:	c9 f7       	brne	.-14     	; 0x3844 <__addsf3x+0x52>
    3852:	7e f4       	brtc	.+30     	; 0x3872 <__addsf3x+0x80>
    3854:	1f 16       	cp	r1, r31
    3856:	ba 0b       	sbc	r27, r26
    3858:	62 0b       	sbc	r22, r18
    385a:	73 0b       	sbc	r23, r19
    385c:	84 0b       	sbc	r24, r20
    385e:	ba f0       	brmi	.+46     	; 0x388e <__addsf3x+0x9c>
    3860:	91 50       	subi	r25, 0x01	; 1
    3862:	a1 f0       	breq	.+40     	; 0x388c <__addsf3x+0x9a>
    3864:	ff 0f       	add	r31, r31
    3866:	bb 1f       	adc	r27, r27
    3868:	66 1f       	adc	r22, r22
    386a:	77 1f       	adc	r23, r23
    386c:	88 1f       	adc	r24, r24
    386e:	c2 f7       	brpl	.-16     	; 0x3860 <__addsf3x+0x6e>
    3870:	0e c0       	rjmp	.+28     	; 0x388e <__addsf3x+0x9c>
    3872:	ba 0f       	add	r27, r26
    3874:	62 1f       	adc	r22, r18
    3876:	73 1f       	adc	r23, r19
    3878:	84 1f       	adc	r24, r20
    387a:	48 f4       	brcc	.+18     	; 0x388e <__addsf3x+0x9c>
    387c:	87 95       	ror	r24
    387e:	77 95       	ror	r23
    3880:	67 95       	ror	r22
    3882:	b7 95       	ror	r27
    3884:	f7 95       	ror	r31
    3886:	9e 3f       	cpi	r25, 0xFE	; 254
    3888:	08 f0       	brcs	.+2      	; 0x388c <__addsf3x+0x9a>
    388a:	b0 cf       	rjmp	.-160    	; 0x37ec <__addsf3+0x28>
    388c:	93 95       	inc	r25
    388e:	88 0f       	add	r24, r24
    3890:	08 f0       	brcs	.+2      	; 0x3894 <__addsf3x+0xa2>
    3892:	99 27       	eor	r25, r25
    3894:	ee 0f       	add	r30, r30
    3896:	97 95       	ror	r25
    3898:	87 95       	ror	r24
    389a:	08 95       	ret

0000389c <__divsf3>:
    389c:	0e 94 62 1c 	call	0x38c4	; 0x38c4 <__divsf3x>
    38a0:	0c 94 41 1b 	jmp	0x3682	; 0x3682 <__fp_round>
    38a4:	0e 94 3a 1b 	call	0x3674	; 0x3674 <__fp_pscB>
    38a8:	58 f0       	brcs	.+22     	; 0x38c0 <__divsf3+0x24>
    38aa:	0e 94 33 1b 	call	0x3666	; 0x3666 <__fp_pscA>
    38ae:	40 f0       	brcs	.+16     	; 0x38c0 <__divsf3+0x24>
    38b0:	29 f4       	brne	.+10     	; 0x38bc <__divsf3+0x20>
    38b2:	5f 3f       	cpi	r21, 0xFF	; 255
    38b4:	29 f0       	breq	.+10     	; 0x38c0 <__divsf3+0x24>
    38b6:	0c 94 2a 1b 	jmp	0x3654	; 0x3654 <__fp_inf>
    38ba:	51 11       	cpse	r21, r1
    38bc:	0c 94 75 1b 	jmp	0x36ea	; 0x36ea <__fp_szero>
__divsf3():
    38c0:	0c 94 30 1b 	jmp	0x3660	; 0x3660 <__fp_nan>

000038c4 <__divsf3x>:
__divsf3x():
    38c4:	0e 94 52 1b 	call	0x36a4	; 0x36a4 <__fp_split3>
    38c8:	68 f3       	brcs	.-38     	; 0x38a4 <__divsf3+0x8>

000038ca <__divsf3_pse>:
    38ca:	99 23       	and	r25, r25
    38cc:	b1 f3       	breq	.-20     	; 0x38ba <__divsf3+0x1e>
    38ce:	55 23       	and	r21, r21
    38d0:	91 f3       	breq	.-28     	; 0x38b6 <__divsf3+0x1a>
    38d2:	95 1b       	sub	r25, r21
    38d4:	55 0b       	sbc	r21, r21
    38d6:	bb 27       	eor	r27, r27
    38d8:	aa 27       	eor	r26, r26
    38da:	62 17       	cp	r22, r18
    38dc:	73 07       	cpc	r23, r19
    38de:	84 07       	cpc	r24, r20
    38e0:	38 f0       	brcs	.+14     	; 0x38f0 <__divsf3_pse+0x26>
    38e2:	9f 5f       	subi	r25, 0xFF	; 255
    38e4:	5f 4f       	sbci	r21, 0xFF	; 255
    38e6:	22 0f       	add	r18, r18
    38e8:	33 1f       	adc	r19, r19
    38ea:	44 1f       	adc	r20, r20
    38ec:	aa 1f       	adc	r26, r26
    38ee:	a9 f3       	breq	.-22     	; 0x38da <__divsf3_pse+0x10>
    38f0:	35 d0       	rcall	.+106    	; 0x395c <__divsf3_pse+0x92>
    38f2:	0e 2e       	mov	r0, r30
    38f4:	3a f0       	brmi	.+14     	; 0x3904 <__divsf3_pse+0x3a>
    38f6:	e0 e8       	ldi	r30, 0x80	; 128
    38f8:	32 d0       	rcall	.+100    	; 0x395e <__divsf3_pse+0x94>
    38fa:	91 50       	subi	r25, 0x01	; 1
    38fc:	50 40       	sbci	r21, 0x00	; 0
    38fe:	e6 95       	lsr	r30
    3900:	00 1c       	adc	r0, r0
    3902:	ca f7       	brpl	.-14     	; 0x38f6 <__divsf3_pse+0x2c>
    3904:	2b d0       	rcall	.+86     	; 0x395c <__divsf3_pse+0x92>
    3906:	fe 2f       	mov	r31, r30
    3908:	29 d0       	rcall	.+82     	; 0x395c <__divsf3_pse+0x92>
    390a:	66 0f       	add	r22, r22
    390c:	77 1f       	adc	r23, r23
    390e:	88 1f       	adc	r24, r24
    3910:	bb 1f       	adc	r27, r27
    3912:	26 17       	cp	r18, r22
    3914:	37 07       	cpc	r19, r23
    3916:	48 07       	cpc	r20, r24
    3918:	ab 07       	cpc	r26, r27
    391a:	b0 e8       	ldi	r27, 0x80	; 128
    391c:	09 f0       	breq	.+2      	; 0x3920 <__divsf3_pse+0x56>
    391e:	bb 0b       	sbc	r27, r27
    3920:	80 2d       	mov	r24, r0
    3922:	bf 01       	movw	r22, r30
    3924:	ff 27       	eor	r31, r31
    3926:	93 58       	subi	r25, 0x83	; 131
    3928:	5f 4f       	sbci	r21, 0xFF	; 255
    392a:	3a f0       	brmi	.+14     	; 0x393a <__divsf3_pse+0x70>
    392c:	9e 3f       	cpi	r25, 0xFE	; 254
    392e:	51 05       	cpc	r21, r1
    3930:	78 f0       	brcs	.+30     	; 0x3950 <__divsf3_pse+0x86>
    3932:	0c 94 2a 1b 	jmp	0x3654	; 0x3654 <__fp_inf>
    3936:	0c 94 75 1b 	jmp	0x36ea	; 0x36ea <__fp_szero>
    393a:	5f 3f       	cpi	r21, 0xFF	; 255
    393c:	e4 f3       	brlt	.-8      	; 0x3936 <__divsf3_pse+0x6c>
    393e:	98 3e       	cpi	r25, 0xE8	; 232
    3940:	d4 f3       	brlt	.-12     	; 0x3936 <__divsf3_pse+0x6c>
    3942:	86 95       	lsr	r24
    3944:	77 95       	ror	r23
    3946:	67 95       	ror	r22
    3948:	b7 95       	ror	r27
    394a:	f7 95       	ror	r31
    394c:	9f 5f       	subi	r25, 0xFF	; 255
    394e:	c9 f7       	brne	.-14     	; 0x3942 <__divsf3_pse+0x78>
    3950:	88 0f       	add	r24, r24
    3952:	91 1d       	adc	r25, r1
    3954:	96 95       	lsr	r25
    3956:	87 95       	ror	r24
    3958:	97 f9       	bld	r25, 7
    395a:	08 95       	ret
    395c:	e1 e0       	ldi	r30, 0x01	; 1
    395e:	66 0f       	add	r22, r22
    3960:	77 1f       	adc	r23, r23
    3962:	88 1f       	adc	r24, r24
    3964:	bb 1f       	adc	r27, r27
    3966:	62 17       	cp	r22, r18
    3968:	73 07       	cpc	r23, r19
    396a:	84 07       	cpc	r24, r20
    396c:	ba 07       	cpc	r27, r26
    396e:	20 f0       	brcs	.+8      	; 0x3978 <__divsf3_pse+0xae>
    3970:	62 1b       	sub	r22, r18
    3972:	73 0b       	sbc	r23, r19
    3974:	84 0b       	sbc	r24, r20
    3976:	ba 0b       	sbc	r27, r26
    3978:	ee 1f       	adc	r30, r30
    397a:	88 f7       	brcc	.-30     	; 0x395e <__divsf3_pse+0x94>
    397c:	e0 95       	com	r30
    397e:	08 95       	ret

00003980 <__fixunssfsi>:
    3980:	0e 94 5a 1b 	call	0x36b4	; 0x36b4 <__fp_splitA>
    3984:	88 f0       	brcs	.+34     	; 0x39a8 <__fixunssfsi+0x28>
    3986:	9f 57       	subi	r25, 0x7F	; 127
    3988:	98 f0       	brcs	.+38     	; 0x39b0 <__fixunssfsi+0x30>
    398a:	b9 2f       	mov	r27, r25
    398c:	99 27       	eor	r25, r25
    398e:	b7 51       	subi	r27, 0x17	; 23
    3990:	b0 f0       	brcs	.+44     	; 0x39be <__fixunssfsi+0x3e>
    3992:	e1 f0       	breq	.+56     	; 0x39cc <__fixunssfsi+0x4c>
    3994:	66 0f       	add	r22, r22
    3996:	77 1f       	adc	r23, r23
    3998:	88 1f       	adc	r24, r24
    399a:	99 1f       	adc	r25, r25
    399c:	1a f0       	brmi	.+6      	; 0x39a4 <__fixunssfsi+0x24>
    399e:	ba 95       	dec	r27
__fixunssfsi():
    39a0:	c9 f7       	brne	.-14     	; 0x3994 <__fixunssfsi+0x14>
    39a2:	14 c0       	rjmp	.+40     	; 0x39cc <__fixunssfsi+0x4c>
    39a4:	b1 30       	cpi	r27, 0x01	; 1
    39a6:	91 f0       	breq	.+36     	; 0x39cc <__fixunssfsi+0x4c>
    39a8:	0e 94 74 1b 	call	0x36e8	; 0x36e8 <__fp_zero>
    39ac:	b1 e0       	ldi	r27, 0x01	; 1
    39ae:	08 95       	ret
    39b0:	0c 94 74 1b 	jmp	0x36e8	; 0x36e8 <__fp_zero>
    39b4:	67 2f       	mov	r22, r23
    39b6:	78 2f       	mov	r23, r24
    39b8:	88 27       	eor	r24, r24
    39ba:	b8 5f       	subi	r27, 0xF8	; 248
    39bc:	39 f0       	breq	.+14     	; 0x39cc <__fixunssfsi+0x4c>
    39be:	b9 3f       	cpi	r27, 0xF9	; 249
    39c0:	cc f3       	brlt	.-14     	; 0x39b4 <__fixunssfsi+0x34>
    39c2:	86 95       	lsr	r24
    39c4:	77 95       	ror	r23
    39c6:	67 95       	ror	r22
    39c8:	b3 95       	inc	r27
    39ca:	d9 f7       	brne	.-10     	; 0x39c2 <__fixunssfsi+0x42>
    39cc:	3e f4       	brtc	.+14     	; 0x39dc <__fixunssfsi+0x5c>
    39ce:	90 95       	com	r25
    39d0:	80 95       	com	r24
    39d2:	70 95       	com	r23
    39d4:	61 95       	neg	r22
    39d6:	7f 4f       	sbci	r23, 0xFF	; 255
    39d8:	8f 4f       	sbci	r24, 0xFF	; 255
    39da:	9f 4f       	sbci	r25, 0xFF	; 255
    39dc:	08 95       	ret

000039de <__gesf2>:
__gesf2():
    39de:	0e 94 18 18 	call	0x3030	; 0x3030 <__fp_cmp>
    39e2:	08 f4       	brcc	.+2      	; 0x39e6 <__gesf2+0x8>
    39e4:	8f ef       	ldi	r24, 0xFF	; 255
    39e6:	08 95       	ret

000039e8 <pow>:
pow():
    39e8:	fa 01       	movw	r30, r20
    39ea:	ee 0f       	add	r30, r30
    39ec:	ff 1f       	adc	r31, r31
    39ee:	30 96       	adiw	r30, 0x00	; 0
    39f0:	21 05       	cpc	r18, r1
    39f2:	31 05       	cpc	r19, r1
    39f4:	a1 f1       	breq	.+104    	; 0x3a5e <pow+0x76>
    39f6:	61 15       	cp	r22, r1
    39f8:	71 05       	cpc	r23, r1
    39fa:	61 f4       	brne	.+24     	; 0x3a14 <pow+0x2c>
    39fc:	80 38       	cpi	r24, 0x80	; 128
    39fe:	bf e3       	ldi	r27, 0x3F	; 63
    3a00:	9b 07       	cpc	r25, r27
    3a02:	49 f1       	breq	.+82     	; 0x3a56 <pow+0x6e>
    3a04:	68 94       	set
    3a06:	90 38       	cpi	r25, 0x80	; 128
    3a08:	81 05       	cpc	r24, r1
    3a0a:	61 f0       	breq	.+24     	; 0x3a24 <pow+0x3c>
    3a0c:	80 38       	cpi	r24, 0x80	; 128
    3a0e:	bf ef       	ldi	r27, 0xFF	; 255
    3a10:	9b 07       	cpc	r25, r27
    3a12:	41 f0       	breq	.+16     	; 0x3a24 <pow+0x3c>
    3a14:	99 23       	and	r25, r25
    3a16:	4a f5       	brpl	.+82     	; 0x3a6a <pow+0x82>
    3a18:	ff 3f       	cpi	r31, 0xFF	; 255
    3a1a:	e1 05       	cpc	r30, r1
    3a1c:	31 05       	cpc	r19, r1
    3a1e:	21 05       	cpc	r18, r1
    3a20:	19 f1       	breq	.+70     	; 0x3a68 <pow+0x80>
    3a22:	e8 94       	clt
    3a24:	08 94       	sec
    3a26:	e7 95       	ror	r30
    3a28:	d9 01       	movw	r26, r18
    3a2a:	aa 23       	and	r26, r26
    3a2c:	29 f4       	brne	.+10     	; 0x3a38 <pow+0x50>
    3a2e:	ab 2f       	mov	r26, r27
    3a30:	be 2f       	mov	r27, r30
    3a32:	f8 5f       	subi	r31, 0xF8	; 248
    3a34:	d0 f3       	brcs	.-12     	; 0x3a2a <pow+0x42>
    3a36:	10 c0       	rjmp	.+32     	; 0x3a58 <pow+0x70>
    3a38:	ff 5f       	subi	r31, 0xFF	; 255
    3a3a:	70 f4       	brcc	.+28     	; 0x3a58 <pow+0x70>
    3a3c:	a6 95       	lsr	r26
    3a3e:	e0 f7       	brcc	.-8      	; 0x3a38 <pow+0x50>
    3a40:	f7 39       	cpi	r31, 0x97	; 151
    3a42:	50 f0       	brcs	.+20     	; 0x3a58 <pow+0x70>
    3a44:	19 f0       	breq	.+6      	; 0x3a4c <pow+0x64>
    3a46:	ff 3a       	cpi	r31, 0xAF	; 175
    3a48:	38 f4       	brcc	.+14     	; 0x3a58 <pow+0x70>
    3a4a:	9f 77       	andi	r25, 0x7F	; 127
    3a4c:	9f 93       	push	r25
    3a4e:	0d d0       	rcall	.+26     	; 0x3a6a <pow+0x82>
    3a50:	0f 90       	pop	r0
    3a52:	07 fc       	sbrc	r0, 7
    3a54:	90 58       	subi	r25, 0x80	; 128
    3a56:	08 95       	ret
    3a58:	46 f0       	brts	.+16     	; 0x3a6a <pow+0x82>
    3a5a:	0c 94 30 1b 	jmp	0x3660	; 0x3660 <__fp_nan>
    3a5e:	60 e0       	ldi	r22, 0x00	; 0
    3a60:	70 e0       	ldi	r23, 0x00	; 0
    3a62:	80 e8       	ldi	r24, 0x80	; 128
    3a64:	9f e3       	ldi	r25, 0x3F	; 63
    3a66:	08 95       	ret
    3a68:	4f e7       	ldi	r20, 0x7F	; 127
    3a6a:	9f 77       	andi	r25, 0x7F	; 127
    3a6c:	5f 93       	push	r21
    3a6e:	4f 93       	push	r20
    3a70:	3f 93       	push	r19
    3a72:	2f 93       	push	r18
    3a74:	0e 94 4f 1e 	call	0x3c9e	; 0x3c9e <log>
    3a78:	2f 91       	pop	r18
    3a7a:	3f 91       	pop	r19
    3a7c:	4f 91       	pop	r20
    3a7e:	5f 91       	pop	r21
    3a80:	0e 94 3c 18 	call	0x3078	; 0x3078 <__mulsf3>
    3a84:	0c 94 97 1d 	jmp	0x3b2e	; 0x3b2e <exp>
    3a88:	19 f4       	brne	.+6      	; 0x3a90 <pow+0xa8>
    3a8a:	16 f4       	brtc	.+4      	; 0x3a90 <pow+0xa8>
    3a8c:	0c 94 30 1b 	jmp	0x3660	; 0x3660 <__fp_nan>
    3a90:	0c 94 c9 1d 	jmp	0x3b92	; 0x3b92 <__fp_mpack>

00003a94 <sqrt>:
sqrt():
    3a94:	0e 94 5a 1b 	call	0x36b4	; 0x36b4 <__fp_splitA>
    3a98:	b8 f3       	brcs	.-18     	; 0x3a88 <pow+0xa0>
    3a9a:	99 23       	and	r25, r25
    3a9c:	c9 f3       	breq	.-14     	; 0x3a90 <pow+0xa8>
    3a9e:	b6 f3       	brts	.-20     	; 0x3a8c <pow+0xa4>
    3aa0:	9f 57       	subi	r25, 0x7F	; 127
    3aa2:	55 0b       	sbc	r21, r21
    3aa4:	87 ff       	sbrs	r24, 7
    3aa6:	0e 94 d7 1d 	call	0x3bae	; 0x3bae <__fp_norm2>
    3aaa:	00 24       	eor	r0, r0
    3aac:	a0 e6       	ldi	r26, 0x60	; 96
    3aae:	40 ea       	ldi	r20, 0xA0	; 160
    3ab0:	90 01       	movw	r18, r0
    3ab2:	80 58       	subi	r24, 0x80	; 128
    3ab4:	56 95       	lsr	r21
    3ab6:	97 95       	ror	r25
    3ab8:	28 f4       	brcc	.+10     	; 0x3ac4 <sqrt+0x30>
    3aba:	80 5c       	subi	r24, 0xC0	; 192
    3abc:	66 0f       	add	r22, r22
    3abe:	77 1f       	adc	r23, r23
    3ac0:	88 1f       	adc	r24, r24
    3ac2:	20 f0       	brcs	.+8      	; 0x3acc <sqrt+0x38>
    3ac4:	26 17       	cp	r18, r22
    3ac6:	37 07       	cpc	r19, r23
    3ac8:	48 07       	cpc	r20, r24
    3aca:	30 f4       	brcc	.+12     	; 0x3ad8 <sqrt+0x44>
    3acc:	62 1b       	sub	r22, r18
    3ace:	73 0b       	sbc	r23, r19
    3ad0:	84 0b       	sbc	r24, r20
    3ad2:	20 29       	or	r18, r0
    3ad4:	31 29       	or	r19, r1
    3ad6:	4a 2b       	or	r20, r26
    3ad8:	a6 95       	lsr	r26
    3ada:	17 94       	ror	r1
    3adc:	07 94       	ror	r0
    3ade:	20 25       	eor	r18, r0
    3ae0:	31 25       	eor	r19, r1
    3ae2:	4a 27       	eor	r20, r26
    3ae4:	58 f7       	brcc	.-42     	; 0x3abc <sqrt+0x28>
    3ae6:	66 0f       	add	r22, r22
    3ae8:	77 1f       	adc	r23, r23
    3aea:	88 1f       	adc	r24, r24
    3aec:	20 f0       	brcs	.+8      	; 0x3af6 <sqrt+0x62>
    3aee:	26 17       	cp	r18, r22
    3af0:	37 07       	cpc	r19, r23
    3af2:	48 07       	cpc	r20, r24
    3af4:	30 f4       	brcc	.+12     	; 0x3b02 <sqrt+0x6e>
    3af6:	62 0b       	sbc	r22, r18
    3af8:	73 0b       	sbc	r23, r19
    3afa:	84 0b       	sbc	r24, r20
    3afc:	20 0d       	add	r18, r0
    3afe:	31 1d       	adc	r19, r1
    3b00:	41 1d       	adc	r20, r1
    3b02:	a0 95       	com	r26
    3b04:	81 f7       	brne	.-32     	; 0x3ae6 <sqrt+0x52>
    3b06:	b9 01       	movw	r22, r18
    3b08:	84 2f       	mov	r24, r20
    3b0a:	91 58       	subi	r25, 0x81	; 129
    3b0c:	88 0f       	add	r24, r24
    3b0e:	96 95       	lsr	r25
    3b10:	87 95       	ror	r24
    3b12:	08 95       	ret

00003b14 <__unordsf2>:
    3b14:	0e 94 18 18 	call	0x3030	; 0x3030 <__fp_cmp>
    3b18:	88 0b       	sbc	r24, r24
    3b1a:	99 0b       	sbc	r25, r25
    3b1c:	08 95       	ret
    3b1e:	29 f4       	brne	.+10     	; 0x3b2a <__unordsf2+0x16>
__unordsf2():
    3b20:	16 f0       	brts	.+4      	; 0x3b26 <__unordsf2+0x12>
    3b22:	0c 94 2a 1b 	jmp	0x3654	; 0x3654 <__fp_inf>
    3b26:	0c 94 74 1b 	jmp	0x36e8	; 0x36e8 <__fp_zero>
    3b2a:	0c 94 30 1b 	jmp	0x3660	; 0x3660 <__fp_nan>

00003b2e <exp>:
exp():
    3b2e:	0e 94 5a 1b 	call	0x36b4	; 0x36b4 <__fp_splitA>
    3b32:	a8 f3       	brcs	.-22     	; 0x3b1e <__unordsf2+0xa>
    3b34:	96 38       	cpi	r25, 0x86	; 134
    3b36:	a0 f7       	brcc	.-24     	; 0x3b20 <__unordsf2+0xc>
    3b38:	07 f8       	bld	r0, 7
    3b3a:	0f 92       	push	r0
    3b3c:	e8 94       	clt
    3b3e:	2b e3       	ldi	r18, 0x3B	; 59
    3b40:	3a ea       	ldi	r19, 0xAA	; 170
    3b42:	48 eb       	ldi	r20, 0xB8	; 184
    3b44:	5f e7       	ldi	r21, 0x7F	; 127
    3b46:	0e 94 52 18 	call	0x30a4	; 0x30a4 <__mulsf3_pse>
    3b4a:	0f 92       	push	r0
    3b4c:	0f 92       	push	r0
    3b4e:	0f 92       	push	r0
    3b50:	4d b7       	in	r20, 0x3d	; 61
    3b52:	5e b7       	in	r21, 0x3e	; 62
    3b54:	0f 92       	push	r0
    3b56:	0e 94 97 1e 	call	0x3d2e	; 0x3d2e <modf>
    3b5a:	e4 e5       	ldi	r30, 0x54	; 84
    3b5c:	f0 e0       	ldi	r31, 0x00	; 0
    3b5e:	0e 94 de 1d 	call	0x3bbc	; 0x3bbc <__fp_powser>
    3b62:	4f 91       	pop	r20
    3b64:	5f 91       	pop	r21
    3b66:	ef 91       	pop	r30
    3b68:	ff 91       	pop	r31
    3b6a:	e5 95       	asr	r30
    3b6c:	ee 1f       	adc	r30, r30
    3b6e:	ff 1f       	adc	r31, r31
    3b70:	49 f0       	breq	.+18     	; 0x3b84 <exp+0x56>
    3b72:	fe 57       	subi	r31, 0x7E	; 126
    3b74:	e0 68       	ori	r30, 0x80	; 128
    3b76:	44 27       	eor	r20, r20
    3b78:	ee 0f       	add	r30, r30
    3b7a:	44 1f       	adc	r20, r20
    3b7c:	fa 95       	dec	r31
    3b7e:	e1 f7       	brne	.-8      	; 0x3b78 <exp+0x4a>
    3b80:	41 95       	neg	r20
    3b82:	55 0b       	sbc	r21, r21
    3b84:	0e 94 11 1e 	call	0x3c22	; 0x3c22 <ldexp>
    3b88:	0f 90       	pop	r0
    3b8a:	07 fe       	sbrs	r0, 7
    3b8c:	0c 94 05 1e 	jmp	0x3c0a	; 0x3c0a <inverse>
    3b90:	08 95       	ret

00003b92 <__fp_mpack>:
    3b92:	9f 3f       	cpi	r25, 0xFF	; 255
    3b94:	31 f0       	breq	.+12     	; 0x3ba2 <__fp_mpack_finite+0xc>

00003b96 <__fp_mpack_finite>:
    3b96:	91 50       	subi	r25, 0x01	; 1
    3b98:	20 f4       	brcc	.+8      	; 0x3ba2 <__fp_mpack_finite+0xc>
    3b9a:	87 95       	ror	r24
    3b9c:	77 95       	ror	r23
    3b9e:	67 95       	ror	r22
    3ba0:	b7 95       	ror	r27
__fp_mpack_finite():
    3ba2:	88 0f       	add	r24, r24
    3ba4:	91 1d       	adc	r25, r1
    3ba6:	96 95       	lsr	r25
    3ba8:	87 95       	ror	r24
    3baa:	97 f9       	bld	r25, 7
    3bac:	08 95       	ret

00003bae <__fp_norm2>:
__fp_norm2():
    3bae:	91 50       	subi	r25, 0x01	; 1
    3bb0:	50 40       	sbci	r21, 0x00	; 0
    3bb2:	66 0f       	add	r22, r22
    3bb4:	77 1f       	adc	r23, r23
    3bb6:	88 1f       	adc	r24, r24
    3bb8:	d2 f7       	brpl	.-12     	; 0x3bae <__fp_norm2>
    3bba:	08 95       	ret

00003bbc <__fp_powser>:
__fp_powser():
    3bbc:	df 93       	push	r29
    3bbe:	cf 93       	push	r28
    3bc0:	1f 93       	push	r17
    3bc2:	0f 93       	push	r16
    3bc4:	ff 92       	push	r15
    3bc6:	ef 92       	push	r14
    3bc8:	df 92       	push	r13
    3bca:	7b 01       	movw	r14, r22
    3bcc:	8c 01       	movw	r16, r24
    3bce:	68 94       	set
    3bd0:	06 c0       	rjmp	.+12     	; 0x3bde <__fp_powser+0x22>
    3bd2:	da 2e       	mov	r13, r26
    3bd4:	ef 01       	movw	r28, r30
    3bd6:	0e 94 4f 18 	call	0x309e	; 0x309e <__mulsf3x>
    3bda:	fe 01       	movw	r30, r28
    3bdc:	e8 94       	clt
    3bde:	a5 91       	lpm	r26, Z+
    3be0:	25 91       	lpm	r18, Z+
    3be2:	35 91       	lpm	r19, Z+
    3be4:	45 91       	lpm	r20, Z+
    3be6:	55 91       	lpm	r21, Z+
    3be8:	a6 f3       	brts	.-24     	; 0x3bd2 <__fp_powser+0x16>
    3bea:	ef 01       	movw	r28, r30
    3bec:	0e 94 f9 1b 	call	0x37f2	; 0x37f2 <__addsf3x>
    3bf0:	fe 01       	movw	r30, r28
    3bf2:	97 01       	movw	r18, r14
    3bf4:	a8 01       	movw	r20, r16
    3bf6:	da 94       	dec	r13
    3bf8:	69 f7       	brne	.-38     	; 0x3bd4 <__fp_powser+0x18>
    3bfa:	df 90       	pop	r13
    3bfc:	ef 90       	pop	r14
    3bfe:	ff 90       	pop	r15
    3c00:	0f 91       	pop	r16
    3c02:	1f 91       	pop	r17
    3c04:	cf 91       	pop	r28
    3c06:	df 91       	pop	r29
    3c08:	08 95       	ret

00003c0a <inverse>:
inverse():
    3c0a:	9b 01       	movw	r18, r22
    3c0c:	ac 01       	movw	r20, r24
    3c0e:	60 e0       	ldi	r22, 0x00	; 0
    3c10:	70 e0       	ldi	r23, 0x00	; 0
    3c12:	80 e8       	ldi	r24, 0x80	; 128
    3c14:	9f e3       	ldi	r25, 0x3F	; 63
    3c16:	0c 94 4e 1c 	jmp	0x389c	; 0x389c <__divsf3>
    3c1a:	0c 94 2a 1b 	jmp	0x3654	; 0x3654 <__fp_inf>
    3c1e:	0c 94 c9 1d 	jmp	0x3b92	; 0x3b92 <__fp_mpack>

00003c22 <ldexp>:
ldexp():
    3c22:	0e 94 5a 1b 	call	0x36b4	; 0x36b4 <__fp_splitA>
    3c26:	d8 f3       	brcs	.-10     	; 0x3c1e <inverse+0x14>
    3c28:	99 23       	and	r25, r25
    3c2a:	c9 f3       	breq	.-14     	; 0x3c1e <inverse+0x14>
    3c2c:	94 0f       	add	r25, r20
    3c2e:	51 1d       	adc	r21, r1
    3c30:	a3 f3       	brvs	.-24     	; 0x3c1a <inverse+0x10>
    3c32:	91 50       	subi	r25, 0x01	; 1
    3c34:	50 40       	sbci	r21, 0x00	; 0
    3c36:	94 f0       	brlt	.+36     	; 0x3c5c <ldexp+0x3a>
    3c38:	59 f0       	breq	.+22     	; 0x3c50 <ldexp+0x2e>
    3c3a:	88 23       	and	r24, r24
    3c3c:	32 f0       	brmi	.+12     	; 0x3c4a <ldexp+0x28>
    3c3e:	66 0f       	add	r22, r22
    3c40:	77 1f       	adc	r23, r23
    3c42:	88 1f       	adc	r24, r24
    3c44:	91 50       	subi	r25, 0x01	; 1
    3c46:	50 40       	sbci	r21, 0x00	; 0
    3c48:	c1 f7       	brne	.-16     	; 0x3c3a <ldexp+0x18>
    3c4a:	9e 3f       	cpi	r25, 0xFE	; 254
    3c4c:	51 05       	cpc	r21, r1
    3c4e:	2c f7       	brge	.-54     	; 0x3c1a <inverse+0x10>
    3c50:	88 0f       	add	r24, r24
    3c52:	91 1d       	adc	r25, r1
    3c54:	96 95       	lsr	r25
    3c56:	87 95       	ror	r24
    3c58:	97 f9       	bld	r25, 7
    3c5a:	08 95       	ret
    3c5c:	5f 3f       	cpi	r21, 0xFF	; 255
    3c5e:	ac f0       	brlt	.+42     	; 0x3c8a <ldexp+0x68>
    3c60:	98 3e       	cpi	r25, 0xE8	; 232
    3c62:	9c f0       	brlt	.+38     	; 0x3c8a <ldexp+0x68>
    3c64:	bb 27       	eor	r27, r27
    3c66:	86 95       	lsr	r24
    3c68:	77 95       	ror	r23
    3c6a:	67 95       	ror	r22
    3c6c:	b7 95       	ror	r27
    3c6e:	08 f4       	brcc	.+2      	; 0x3c72 <ldexp+0x50>
    3c70:	b1 60       	ori	r27, 0x01	; 1
    3c72:	93 95       	inc	r25
    3c74:	c1 f7       	brne	.-16     	; 0x3c66 <ldexp+0x44>
    3c76:	bb 0f       	add	r27, r27
    3c78:	58 f7       	brcc	.-42     	; 0x3c50 <ldexp+0x2e>
    3c7a:	11 f4       	brne	.+4      	; 0x3c80 <ldexp+0x5e>
    3c7c:	60 ff       	sbrs	r22, 0
    3c7e:	e8 cf       	rjmp	.-48     	; 0x3c50 <ldexp+0x2e>
    3c80:	6f 5f       	subi	r22, 0xFF	; 255
    3c82:	7f 4f       	sbci	r23, 0xFF	; 255
    3c84:	8f 4f       	sbci	r24, 0xFF	; 255
    3c86:	9f 4f       	sbci	r25, 0xFF	; 255
    3c88:	e3 cf       	rjmp	.-58     	; 0x3c50 <ldexp+0x2e>
    3c8a:	0c 94 75 1b 	jmp	0x36ea	; 0x36ea <__fp_szero>
    3c8e:	16 f0       	brts	.+4      	; 0x3c94 <ldexp+0x72>
    3c90:	0c 94 c9 1d 	jmp	0x3b92	; 0x3b92 <__fp_mpack>
    3c94:	0c 94 30 1b 	jmp	0x3660	; 0x3660 <__fp_nan>
    3c98:	68 94       	set
    3c9a:	0c 94 2a 1b 	jmp	0x3654	; 0x3654 <__fp_inf>

00003c9e <log>:
log():
    3c9e:	0e 94 5a 1b 	call	0x36b4	; 0x36b4 <__fp_splitA>
    3ca2:	a8 f3       	brcs	.-22     	; 0x3c8e <ldexp+0x6c>
    3ca4:	99 23       	and	r25, r25
    3ca6:	c1 f3       	breq	.-16     	; 0x3c98 <ldexp+0x76>
    3ca8:	ae f3       	brts	.-22     	; 0x3c94 <ldexp+0x72>
    3caa:	df 93       	push	r29
    3cac:	cf 93       	push	r28
    3cae:	1f 93       	push	r17
    3cb0:	0f 93       	push	r16
    3cb2:	ff 92       	push	r15
    3cb4:	c9 2f       	mov	r28, r25
    3cb6:	dd 27       	eor	r29, r29
    3cb8:	88 23       	and	r24, r24
    3cba:	2a f0       	brmi	.+10     	; 0x3cc6 <log+0x28>
    3cbc:	21 97       	sbiw	r28, 0x01	; 1
    3cbe:	66 0f       	add	r22, r22
    3cc0:	77 1f       	adc	r23, r23
    3cc2:	88 1f       	adc	r24, r24
    3cc4:	da f7       	brpl	.-10     	; 0x3cbc <log+0x1e>
    3cc6:	20 e0       	ldi	r18, 0x00	; 0
    3cc8:	30 e0       	ldi	r19, 0x00	; 0
    3cca:	40 e8       	ldi	r20, 0x80	; 128
    3ccc:	5f eb       	ldi	r21, 0xBF	; 191
    3cce:	9f e3       	ldi	r25, 0x3F	; 63
    3cd0:	88 39       	cpi	r24, 0x98	; 152
    3cd2:	20 f0       	brcs	.+8      	; 0x3cdc <log+0x3e>
    3cd4:	80 3e       	cpi	r24, 0xE0	; 224
    3cd6:	38 f0       	brcs	.+14     	; 0x3ce6 <log+0x48>
    3cd8:	21 96       	adiw	r28, 0x01	; 1
    3cda:	8f 77       	andi	r24, 0x7F	; 127
    3cdc:	0e 94 e2 1b 	call	0x37c4	; 0x37c4 <__addsf3>
    3ce0:	ec e7       	ldi	r30, 0x7C	; 124
    3ce2:	f0 e0       	ldi	r31, 0x00	; 0
    3ce4:	04 c0       	rjmp	.+8      	; 0x3cee <log+0x50>
    3ce6:	0e 94 e2 1b 	call	0x37c4	; 0x37c4 <__addsf3>
    3cea:	e9 ea       	ldi	r30, 0xA9	; 169
    3cec:	f0 e0       	ldi	r31, 0x00	; 0
    3cee:	0e 94 de 1d 	call	0x3bbc	; 0x3bbc <__fp_powser>
    3cf2:	8b 01       	movw	r16, r22
    3cf4:	be 01       	movw	r22, r28
    3cf6:	ec 01       	movw	r28, r24
    3cf8:	fb 2e       	mov	r15, r27
    3cfa:	6f 57       	subi	r22, 0x7F	; 127
    3cfc:	71 09       	sbc	r23, r1
    3cfe:	75 95       	asr	r23
    3d00:	77 1f       	adc	r23, r23
    3d02:	88 0b       	sbc	r24, r24
    3d04:	99 0b       	sbc	r25, r25
    3d06:	0e 94 dd 17 	call	0x2fba	; 0x2fba <__floatsisf>
    3d0a:	28 e1       	ldi	r18, 0x18	; 24
    3d0c:	32 e7       	ldi	r19, 0x72	; 114
    3d0e:	41 e3       	ldi	r20, 0x31	; 49
    3d10:	5f e3       	ldi	r21, 0x3F	; 63
    3d12:	0e 94 4f 18 	call	0x309e	; 0x309e <__mulsf3x>
    3d16:	af 2d       	mov	r26, r15
    3d18:	98 01       	movw	r18, r16
    3d1a:	ae 01       	movw	r20, r28
    3d1c:	ff 90       	pop	r15
    3d1e:	0f 91       	pop	r16
    3d20:	1f 91       	pop	r17
    3d22:	cf 91       	pop	r28
    3d24:	df 91       	pop	r29
    3d26:	0e 94 f9 1b 	call	0x37f2	; 0x37f2 <__addsf3x>
    3d2a:	0c 94 41 1b 	jmp	0x3682	; 0x3682 <__fp_round>

00003d2e <modf>:
    3d2e:	fa 01       	movw	r30, r20
    3d30:	dc 01       	movw	r26, r24
    3d32:	aa 0f       	add	r26, r26
    3d34:	bb 1f       	adc	r27, r27
    3d36:	9b 01       	movw	r18, r22
    3d38:	ac 01       	movw	r20, r24
    3d3a:	bf 57       	subi	r27, 0x7F	; 127
    3d3c:	28 f4       	brcc	.+10     	; 0x3d48 <modf+0x1a>
modf():
    3d3e:	22 27       	eor	r18, r18
    3d40:	33 27       	eor	r19, r19
    3d42:	44 27       	eor	r20, r20
    3d44:	50 78       	andi	r21, 0x80	; 128
    3d46:	20 c0       	rjmp	.+64     	; 0x3d88 <modf+0x5a>
    3d48:	b7 51       	subi	r27, 0x17	; 23
    3d4a:	90 f4       	brcc	.+36     	; 0x3d70 <modf+0x42>
    3d4c:	ab 2f       	mov	r26, r27
    3d4e:	00 24       	eor	r0, r0
    3d50:	46 95       	lsr	r20
    3d52:	37 95       	ror	r19
    3d54:	27 95       	ror	r18
    3d56:	01 1c       	adc	r0, r1
    3d58:	a3 95       	inc	r26
    3d5a:	d2 f3       	brmi	.-12     	; 0x3d50 <modf+0x22>
    3d5c:	00 20       	and	r0, r0
    3d5e:	71 f0       	breq	.+28     	; 0x3d7c <modf+0x4e>
    3d60:	22 0f       	add	r18, r18
    3d62:	33 1f       	adc	r19, r19
    3d64:	44 1f       	adc	r20, r20
    3d66:	b3 95       	inc	r27
    3d68:	da f3       	brmi	.-10     	; 0x3d60 <modf+0x32>
    3d6a:	0e d0       	rcall	.+28     	; 0x3d88 <modf+0x5a>
    3d6c:	0c 94 e1 1b 	jmp	0x37c2	; 0x37c2 <__subsf3>
    3d70:	61 30       	cpi	r22, 0x01	; 1
    3d72:	71 05       	cpc	r23, r1
    3d74:	a0 e8       	ldi	r26, 0x80	; 128
    3d76:	8a 07       	cpc	r24, r26
    3d78:	b9 46       	sbci	r27, 0x69	; 105
    3d7a:	30 f4       	brcc	.+12     	; 0x3d88 <modf+0x5a>
    3d7c:	9b 01       	movw	r18, r22
    3d7e:	ac 01       	movw	r20, r24
    3d80:	66 27       	eor	r22, r22
    3d82:	77 27       	eor	r23, r23
    3d84:	88 27       	eor	r24, r24
    3d86:	90 78       	andi	r25, 0x80	; 128
    3d88:	30 96       	adiw	r30, 0x00	; 0
    3d8a:	21 f0       	breq	.+8      	; 0x3d94 <modf+0x66>
    3d8c:	20 83       	st	Z, r18
    3d8e:	31 83       	std	Z+1, r19	; 0x01
    3d90:	42 83       	std	Z+2, r20	; 0x02
    3d92:	53 83       	std	Z+3, r21	; 0x03
    3d94:	08 95       	ret

00003d96 <__udivmodhi4>:
__udivmodhi4():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1408
    3d96:	aa 1b       	sub	r26, r26
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1409
    3d98:	bb 1b       	sub	r27, r27
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1410
    3d9a:	51 e1       	ldi	r21, 0x11	; 17
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1411
    3d9c:	07 c0       	rjmp	.+14     	; 0x3dac <__udivmodhi4_ep>

00003d9e <__udivmodhi4_loop>:
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1413
    3d9e:	aa 1f       	adc	r26, r26
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1414
    3da0:	bb 1f       	adc	r27, r27
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1415
    3da2:	a6 17       	cp	r26, r22
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1416
    3da4:	b7 07       	cpc	r27, r23
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1417
    3da6:	10 f0       	brcs	.+4      	; 0x3dac <__udivmodhi4_ep>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1418
    3da8:	a6 1b       	sub	r26, r22
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1419
    3daa:	b7 0b       	sbc	r27, r23

00003dac <__udivmodhi4_ep>:
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1421
    3dac:	88 1f       	adc	r24, r24
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1422
    3dae:	99 1f       	adc	r25, r25
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1423
    3db0:	5a 95       	dec	r21
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1424
    3db2:	a9 f7       	brne	.-22     	; 0x3d9e <__udivmodhi4_loop>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1425
    3db4:	80 95       	com	r24
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1426
    3db6:	90 95       	com	r25
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1428
    3db8:	bc 01       	movw	r22, r24
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1430
    3dba:	cd 01       	movw	r24, r26
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1432
    3dbc:	08 95       	ret

00003dbe <__udivmodsi4>:
__udivmodsi4():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1638
    3dbe:	a1 e2       	ldi	r26, 0x21	; 33
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1639
    3dc0:	1a 2e       	mov	r1, r26
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1640
    3dc2:	aa 1b       	sub	r26, r26
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1641
    3dc4:	bb 1b       	sub	r27, r27
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1642
    3dc6:	fd 01       	movw	r30, r26
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1644
    3dc8:	0d c0       	rjmp	.+26     	; 0x3de4 <__udivmodsi4_ep>

00003dca <__udivmodsi4_loop>:
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1646
    3dca:	aa 1f       	adc	r26, r26
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1647
    3dcc:	bb 1f       	adc	r27, r27
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1648
    3dce:	ee 1f       	adc	r30, r30
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1649
    3dd0:	ff 1f       	adc	r31, r31
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1650
    3dd2:	a2 17       	cp	r26, r18
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1651
    3dd4:	b3 07       	cpc	r27, r19
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1652
    3dd6:	e4 07       	cpc	r30, r20
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1653
    3dd8:	f5 07       	cpc	r31, r21
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1654
    3dda:	20 f0       	brcs	.+8      	; 0x3de4 <__udivmodsi4_ep>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1655
    3ddc:	a2 1b       	sub	r26, r18
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1656
    3dde:	b3 0b       	sbc	r27, r19
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1657
    3de0:	e4 0b       	sbc	r30, r20
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1658
    3de2:	f5 0b       	sbc	r31, r21

00003de4 <__udivmodsi4_ep>:
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1660
    3de4:	66 1f       	adc	r22, r22
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1661
    3de6:	77 1f       	adc	r23, r23
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1662
    3de8:	88 1f       	adc	r24, r24
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1663
    3dea:	99 1f       	adc	r25, r25
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1664
    3dec:	1a 94       	dec	r1
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1665
    3dee:	69 f7       	brne	.-38     	; 0x3dca <__udivmodsi4_loop>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1667
    3df0:	60 95       	com	r22
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1668
    3df2:	70 95       	com	r23
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1669
    3df4:	80 95       	com	r24
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1670
    3df6:	90 95       	com	r25
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1672
    3df8:	9b 01       	movw	r18, r22
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1674
    3dfa:	ac 01       	movw	r20, r24
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1676
    3dfc:	bd 01       	movw	r22, r26
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1678
    3dfe:	cf 01       	movw	r24, r30
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1680
    3e00:	08 95       	ret

00003e02 <__tablejump2__>:
__tablejump2__():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2296
    3e02:	ee 0f       	add	r30, r30
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2297
    3e04:	ff 1f       	adc	r31, r31
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2328
    3e06:	05 90       	lpm	r0, Z+
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2329
    3e08:	f4 91       	lpm	r31, Z
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2330
    3e0a:	e0 2d       	mov	r30, r0
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2331
    3e0c:	09 94       	ijmp

00003e0e <realloc>:
realloc():
    3e0e:	b0 e0       	ldi	r27, 0x00	; 0
    3e10:	a0 e0       	ldi	r26, 0x00	; 0
    3e12:	ed e0       	ldi	r30, 0x0D	; 13
    3e14:	ff e1       	ldi	r31, 0x1F	; 31
    3e16:	0c 94 9d 1b 	jmp	0x373a	; 0x373a <__prologue_saves__+0x4>
    3e1a:	8c 01       	movw	r16, r24
    3e1c:	00 97       	sbiw	r24, 0x00	; 0
    3e1e:	51 f4       	brne	.+20     	; 0x3e34 <realloc+0x26>
    3e20:	cb 01       	movw	r24, r22
    3e22:	0e 94 40 15 	call	0x2a80	; 0x2a80 <malloc>
    3e26:	8c 01       	movw	r16, r24
    3e28:	c8 01       	movw	r24, r16
    3e2a:	cd b7       	in	r28, 0x3d	; 61
    3e2c:	de b7       	in	r29, 0x3e	; 62
    3e2e:	e0 e1       	ldi	r30, 0x10	; 16
    3e30:	0c 94 b9 1b 	jmp	0x3772	; 0x3772 <__epilogue_restores__+0x4>
    3e34:	fc 01       	movw	r30, r24
    3e36:	e6 0f       	add	r30, r22
    3e38:	f7 1f       	adc	r31, r23
    3e3a:	9c 01       	movw	r18, r24
    3e3c:	22 50       	subi	r18, 0x02	; 2
    3e3e:	31 09       	sbc	r19, r1
    3e40:	e2 17       	cp	r30, r18
    3e42:	f3 07       	cpc	r31, r19
    3e44:	08 f4       	brcc	.+2      	; 0x3e48 <realloc+0x3a>
    3e46:	9d c0       	rjmp	.+314    	; 0x3f82 <realloc+0x174>
    3e48:	d9 01       	movw	r26, r18
    3e4a:	cd 91       	ld	r28, X+
    3e4c:	dc 91       	ld	r29, X
    3e4e:	11 97       	sbiw	r26, 0x01	; 1
    3e50:	c6 17       	cp	r28, r22
    3e52:	d7 07       	cpc	r29, r23
    3e54:	98 f0       	brcs	.+38     	; 0x3e7c <realloc+0x6e>
    3e56:	c5 30       	cpi	r28, 0x05	; 5
    3e58:	d1 05       	cpc	r29, r1
    3e5a:	30 f3       	brcs	.-52     	; 0x3e28 <realloc+0x1a>
    3e5c:	ce 01       	movw	r24, r28
    3e5e:	04 97       	sbiw	r24, 0x04	; 4
    3e60:	86 17       	cp	r24, r22
    3e62:	97 07       	cpc	r25, r23
    3e64:	08 f3       	brcs	.-62     	; 0x3e28 <realloc+0x1a>
    3e66:	c6 1b       	sub	r28, r22
    3e68:	d7 0b       	sbc	r29, r23
    3e6a:	22 97       	sbiw	r28, 0x02	; 2
    3e6c:	c1 93       	st	Z+, r28
    3e6e:	d1 93       	st	Z+, r29
    3e70:	6d 93       	st	X+, r22
    3e72:	7c 93       	st	X, r23
    3e74:	cf 01       	movw	r24, r30
    3e76:	0e 94 dc 15 	call	0x2bb8	; 0x2bb8 <free>
    3e7a:	d6 cf       	rjmp	.-84     	; 0x3e28 <realloc+0x1a>
    3e7c:	5b 01       	movw	r10, r22
    3e7e:	ac 1a       	sub	r10, r28
    3e80:	bd 0a       	sbc	r11, r29
    3e82:	4c 01       	movw	r8, r24
    3e84:	8c 0e       	add	r8, r28
    3e86:	9d 1e       	adc	r9, r29
    3e88:	a0 91 e3 02 	lds	r26, 0x02E3	; 0x8002e3 <__flp>
    3e8c:	b0 91 e4 02 	lds	r27, 0x02E4	; 0x8002e4 <__flp+0x1>
    3e90:	51 2c       	mov	r5, r1
    3e92:	41 2c       	mov	r4, r1
    3e94:	f1 2c       	mov	r15, r1
    3e96:	e1 2c       	mov	r14, r1
    3e98:	10 97       	sbiw	r26, 0x00	; 0
    3e9a:	31 f5       	brne	.+76     	; 0x3ee8 <realloc+0xda>
    3e9c:	80 91 e1 02 	lds	r24, 0x02E1	; 0x8002e1 <__brkval>
    3ea0:	90 91 e2 02 	lds	r25, 0x02E2	; 0x8002e2 <__brkval+0x1>
    3ea4:	88 15       	cp	r24, r8
    3ea6:	99 05       	cpc	r25, r9
    3ea8:	09 f0       	breq	.+2      	; 0x3eac <realloc+0x9e>
    3eaa:	5c c0       	rjmp	.+184    	; 0x3f64 <realloc+0x156>
    3eac:	46 16       	cp	r4, r22
    3eae:	57 06       	cpc	r5, r23
    3eb0:	08 f0       	brcs	.+2      	; 0x3eb4 <realloc+0xa6>
    3eb2:	58 c0       	rjmp	.+176    	; 0x3f64 <realloc+0x156>
    3eb4:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
    3eb8:	90 91 61 00 	lds	r25, 0x0061	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
    3ebc:	00 97       	sbiw	r24, 0x00	; 0
    3ebe:	41 f4       	brne	.+16     	; 0x3ed0 <realloc+0xc2>
    3ec0:	8d b7       	in	r24, 0x3d	; 61
    3ec2:	9e b7       	in	r25, 0x3e	; 62
    3ec4:	40 91 64 00 	lds	r20, 0x0064	; 0x800064 <__malloc_margin>
    3ec8:	50 91 65 00 	lds	r21, 0x0065	; 0x800065 <__malloc_margin+0x1>
    3ecc:	84 1b       	sub	r24, r20
    3ece:	95 0b       	sbc	r25, r21
    3ed0:	e8 17       	cp	r30, r24
    3ed2:	f9 07       	cpc	r31, r25
    3ed4:	08 f0       	brcs	.+2      	; 0x3ed8 <realloc+0xca>
    3ed6:	55 c0       	rjmp	.+170    	; 0x3f82 <realloc+0x174>
    3ed8:	f0 93 e2 02 	sts	0x02E2, r31	; 0x8002e2 <__brkval+0x1>
    3edc:	e0 93 e1 02 	sts	0x02E1, r30	; 0x8002e1 <__brkval>
    3ee0:	f9 01       	movw	r30, r18
    3ee2:	71 83       	std	Z+1, r23	; 0x01
    3ee4:	60 83       	st	Z, r22
    3ee6:	a0 cf       	rjmp	.-192    	; 0x3e28 <realloc+0x1a>
    3ee8:	8d 91       	ld	r24, X+
    3eea:	9c 91       	ld	r25, X
    3eec:	11 97       	sbiw	r26, 0x01	; 1
    3eee:	12 96       	adiw	r26, 0x02	; 2
    3ef0:	6c 90       	ld	r6, X
    3ef2:	12 97       	sbiw	r26, 0x02	; 2
    3ef4:	13 96       	adiw	r26, 0x03	; 3
    3ef6:	7c 90       	ld	r7, X
    3ef8:	13 97       	sbiw	r26, 0x03	; 3
    3efa:	a8 15       	cp	r26, r8
    3efc:	b9 05       	cpc	r27, r9
    3efe:	59 f5       	brne	.+86     	; 0x3f56 <realloc+0x148>
    3f00:	6c 01       	movw	r12, r24
    3f02:	42 e0       	ldi	r20, 0x02	; 2
    3f04:	c4 0e       	add	r12, r20
    3f06:	d1 1c       	adc	r13, r1
    3f08:	ca 14       	cp	r12, r10
    3f0a:	db 04       	cpc	r13, r11
    3f0c:	20 f1       	brcs	.+72     	; 0x3f56 <realloc+0x148>
    3f0e:	ac 01       	movw	r20, r24
    3f10:	4a 19       	sub	r20, r10
    3f12:	5b 09       	sbc	r21, r11
    3f14:	da 01       	movw	r26, r20
    3f16:	12 96       	adiw	r26, 0x02	; 2
    3f18:	15 97       	sbiw	r26, 0x05	; 5
    3f1a:	80 f0       	brcs	.+32     	; 0x3f3c <realloc+0x12e>
    3f1c:	62 82       	std	Z+2, r6	; 0x02
    3f1e:	73 82       	std	Z+3, r7	; 0x03
    3f20:	51 83       	std	Z+1, r21	; 0x01
    3f22:	40 83       	st	Z, r20
    3f24:	d9 01       	movw	r26, r18
    3f26:	6d 93       	st	X+, r22
    3f28:	7c 93       	st	X, r23
    3f2a:	e1 14       	cp	r14, r1
    3f2c:	f1 04       	cpc	r15, r1
    3f2e:	71 f0       	breq	.+28     	; 0x3f4c <realloc+0x13e>
    3f30:	d7 01       	movw	r26, r14
    3f32:	13 96       	adiw	r26, 0x03	; 3
    3f34:	fc 93       	st	X, r31
    3f36:	ee 93       	st	-X, r30
    3f38:	12 97       	sbiw	r26, 0x02	; 2
    3f3a:	76 cf       	rjmp	.-276    	; 0x3e28 <realloc+0x1a>
    3f3c:	22 96       	adiw	r28, 0x02	; 2
    3f3e:	8c 0f       	add	r24, r28
    3f40:	9d 1f       	adc	r25, r29
    3f42:	f9 01       	movw	r30, r18
    3f44:	91 83       	std	Z+1, r25	; 0x01
    3f46:	80 83       	st	Z, r24
    3f48:	f3 01       	movw	r30, r6
    3f4a:	ef cf       	rjmp	.-34     	; 0x3f2a <realloc+0x11c>
    3f4c:	f0 93 e4 02 	sts	0x02E4, r31	; 0x8002e4 <__flp+0x1>
    3f50:	e0 93 e3 02 	sts	0x02E3, r30	; 0x8002e3 <__flp>
    3f54:	69 cf       	rjmp	.-302    	; 0x3e28 <realloc+0x1a>
    3f56:	48 16       	cp	r4, r24
    3f58:	59 06       	cpc	r5, r25
    3f5a:	08 f4       	brcc	.+2      	; 0x3f5e <realloc+0x150>
    3f5c:	2c 01       	movw	r4, r24
    3f5e:	7d 01       	movw	r14, r26
    3f60:	d3 01       	movw	r26, r6
    3f62:	9a cf       	rjmp	.-204    	; 0x3e98 <realloc+0x8a>
    3f64:	cb 01       	movw	r24, r22
    3f66:	0e 94 40 15 	call	0x2a80	; 0x2a80 <malloc>
    3f6a:	7c 01       	movw	r14, r24
    3f6c:	00 97       	sbiw	r24, 0x00	; 0
    3f6e:	49 f0       	breq	.+18     	; 0x3f82 <realloc+0x174>
    3f70:	ae 01       	movw	r20, r28
    3f72:	b8 01       	movw	r22, r16
    3f74:	0e 94 d4 1f 	call	0x3fa8	; 0x3fa8 <memcpy>
    3f78:	c8 01       	movw	r24, r16
    3f7a:	0e 94 dc 15 	call	0x2bb8	; 0x2bb8 <free>
    3f7e:	87 01       	movw	r16, r14
    3f80:	53 cf       	rjmp	.-346    	; 0x3e28 <realloc+0x1a>
    3f82:	10 e0       	ldi	r17, 0x00	; 0
    3f84:	00 e0       	ldi	r16, 0x00	; 0
    3f86:	50 cf       	rjmp	.-352    	; 0x3e28 <realloc+0x1a>

00003f88 <tolower>:
tolower():
    3f88:	91 11       	cpse	r25, r1
    3f8a:	08 95       	ret
    3f8c:	81 54       	subi	r24, 0x41	; 65
    3f8e:	8a 51       	subi	r24, 0x1A	; 26
    3f90:	08 f4       	brcc	.+2      	; 0x3f94 <tolower+0xc>
    3f92:	80 5e       	subi	r24, 0xE0	; 224
    3f94:	85 5a       	subi	r24, 0xA5	; 165
    3f96:	08 95       	ret

00003f98 <toupper>:
toupper():
    3f98:	91 11       	cpse	r25, r1
    3f9a:	08 95       	ret
    3f9c:	81 56       	subi	r24, 0x61	; 97
    3f9e:	8a 51       	subi	r24, 0x1A	; 26
    3fa0:	08 f4       	brcc	.+2      	; 0x3fa4 <toupper+0xc>
    3fa2:	80 52       	subi	r24, 0x20	; 32
    3fa4:	85 58       	subi	r24, 0x85	; 133
    3fa6:	08 95       	ret

00003fa8 <memcpy>:
memcpy():
    3fa8:	fb 01       	movw	r30, r22
    3faa:	dc 01       	movw	r26, r24
    3fac:	02 c0       	rjmp	.+4      	; 0x3fb2 <memcpy+0xa>
    3fae:	01 90       	ld	r0, Z+
    3fb0:	0d 92       	st	X+, r0
    3fb2:	41 50       	subi	r20, 0x01	; 1
    3fb4:	50 40       	sbci	r21, 0x00	; 0
    3fb6:	d8 f7       	brcc	.-10     	; 0x3fae <memcpy+0x6>
    3fb8:	08 95       	ret

00003fba <strcmp>:
strcmp():
    3fba:	fb 01       	movw	r30, r22
    3fbc:	dc 01       	movw	r26, r24
    3fbe:	8d 91       	ld	r24, X+
    3fc0:	01 90       	ld	r0, Z+
    3fc2:	80 19       	sub	r24, r0
    3fc4:	01 10       	cpse	r0, r1
    3fc6:	d9 f3       	breq	.-10     	; 0x3fbe <strcmp+0x4>
    3fc8:	99 0b       	sbc	r25, r25
    3fca:	08 95       	ret

00003fcc <strcpy>:
strcpy():
    3fcc:	fb 01       	movw	r30, r22
    3fce:	dc 01       	movw	r26, r24
    3fd0:	01 90       	ld	r0, Z+
    3fd2:	0d 92       	st	X+, r0
    3fd4:	00 20       	and	r0, r0
    3fd6:	e1 f7       	brne	.-8      	; 0x3fd0 <strcpy+0x4>
    3fd8:	08 95       	ret

00003fda <strncmp>:
strncmp():
    3fda:	fb 01       	movw	r30, r22
    3fdc:	dc 01       	movw	r26, r24
    3fde:	41 50       	subi	r20, 0x01	; 1
    3fe0:	50 40       	sbci	r21, 0x00	; 0
    3fe2:	30 f0       	brcs	.+12     	; 0x3ff0 <strncmp+0x16>
    3fe4:	8d 91       	ld	r24, X+
    3fe6:	01 90       	ld	r0, Z+
    3fe8:	80 19       	sub	r24, r0
    3fea:	19 f4       	brne	.+6      	; 0x3ff2 <strncmp+0x18>
    3fec:	00 20       	and	r0, r0
    3fee:	b9 f7       	brne	.-18     	; 0x3fde <strncmp+0x4>
    3ff0:	88 1b       	sub	r24, r24
    3ff2:	99 0b       	sbc	r25, r25
    3ff4:	08 95       	ret

00003ff6 <sprintf>:
sprintf():
    3ff6:	ae e0       	ldi	r26, 0x0E	; 14
    3ff8:	b0 e0       	ldi	r27, 0x00	; 0
    3ffa:	e1 e0       	ldi	r30, 0x01	; 1
    3ffc:	f0 e2       	ldi	r31, 0x20	; 32
    3ffe:	0c 94 a9 1b 	jmp	0x3752	; 0x3752 <__prologue_saves__+0x1c>
    4002:	0d 89       	ldd	r16, Y+21	; 0x15
    4004:	1e 89       	ldd	r17, Y+22	; 0x16
    4006:	86 e0       	ldi	r24, 0x06	; 6
    4008:	8c 83       	std	Y+4, r24	; 0x04
    400a:	1a 83       	std	Y+2, r17	; 0x02
    400c:	09 83       	std	Y+1, r16	; 0x01
    400e:	8f ef       	ldi	r24, 0xFF	; 255
    4010:	9f e7       	ldi	r25, 0x7F	; 127
    4012:	9e 83       	std	Y+6, r25	; 0x06
    4014:	8d 83       	std	Y+5, r24	; 0x05
    4016:	ae 01       	movw	r20, r28
    4018:	47 5e       	subi	r20, 0xE7	; 231
    401a:	5f 4f       	sbci	r21, 0xFF	; 255
    401c:	6f 89       	ldd	r22, Y+23	; 0x17
    401e:	78 8d       	ldd	r23, Y+24	; 0x18
    4020:	ce 01       	movw	r24, r28
    4022:	01 96       	adiw	r24, 0x01	; 1
    4024:	0e 94 a9 18 	call	0x3152	; 0x3152 <vfprintf>
    4028:	2f 81       	ldd	r18, Y+7	; 0x07
    402a:	38 85       	ldd	r19, Y+8	; 0x08
    402c:	02 0f       	add	r16, r18
    402e:	13 1f       	adc	r17, r19
    4030:	f8 01       	movw	r30, r16
    4032:	10 82       	st	Z, r1
    4034:	2e 96       	adiw	r28, 0x0e	; 14
    4036:	e4 e0       	ldi	r30, 0x04	; 4
    4038:	0c 94 c5 1b 	jmp	0x378a	; 0x378a <__epilogue_restores__+0x1c>

0000403c <sscanf>:
sscanf():
    403c:	ae e0       	ldi	r26, 0x0E	; 14
    403e:	b0 e0       	ldi	r27, 0x00	; 0
    4040:	e4 e2       	ldi	r30, 0x24	; 36
    4042:	f0 e2       	ldi	r31, 0x20	; 32
    4044:	0c 94 ab 1b 	jmp	0x3756	; 0x3756 <__prologue_saves__+0x20>
    4048:	85 e0       	ldi	r24, 0x05	; 5
    404a:	8c 83       	std	Y+4, r24	; 0x04
    404c:	8b 89       	ldd	r24, Y+19	; 0x13
    404e:	9c 89       	ldd	r25, Y+20	; 0x14
    4050:	9a 83       	std	Y+2, r25	; 0x02
    4052:	89 83       	std	Y+1, r24	; 0x01
    4054:	ae 01       	movw	r20, r28
    4056:	49 5e       	subi	r20, 0xE9	; 233
    4058:	5f 4f       	sbci	r21, 0xFF	; 255
    405a:	6d 89       	ldd	r22, Y+21	; 0x15
    405c:	7e 89       	ldd	r23, Y+22	; 0x16
    405e:	ce 01       	movw	r24, r28
    4060:	01 96       	adiw	r24, 0x01	; 1
    4062:	0e 94 c2 21 	call	0x4384	; 0x4384 <vfscanf>
    4066:	2e 96       	adiw	r28, 0x0e	; 14
    4068:	e2 e0       	ldi	r30, 0x02	; 2
    406a:	0c 94 c7 1b 	jmp	0x378e	; 0x378e <__epilogue_restores__+0x20>

0000406e <putval>:
putval():
    406e:	20 fd       	sbrc	r18, 0
    4070:	09 c0       	rjmp	.+18     	; 0x4084 <putval+0x16>
    4072:	fc 01       	movw	r30, r24
    4074:	23 fd       	sbrc	r18, 3
    4076:	05 c0       	rjmp	.+10     	; 0x4082 <putval+0x14>
    4078:	22 ff       	sbrs	r18, 2
    407a:	02 c0       	rjmp	.+4      	; 0x4080 <putval+0x12>
    407c:	73 83       	std	Z+3, r23	; 0x03
    407e:	62 83       	std	Z+2, r22	; 0x02
    4080:	51 83       	std	Z+1, r21	; 0x01
    4082:	40 83       	st	Z, r20
    4084:	08 95       	ret

00004086 <mulacc>:
mulacc():
    4086:	44 fd       	sbrc	r20, 4
    4088:	17 c0       	rjmp	.+46     	; 0x40b8 <mulacc+0x32>
    408a:	46 fd       	sbrc	r20, 6
    408c:	1d c0       	rjmp	.+58     	; 0x40c8 <mulacc+0x42>
    408e:	db 01       	movw	r26, r22
    4090:	fc 01       	movw	r30, r24
    4092:	aa 0f       	add	r26, r26
    4094:	bb 1f       	adc	r27, r27
    4096:	ee 1f       	adc	r30, r30
    4098:	ff 1f       	adc	r31, r31
    409a:	10 94       	com	r1
    409c:	d1 f7       	brne	.-12     	; 0x4092 <mulacc+0xc>
    409e:	6a 0f       	add	r22, r26
    40a0:	7b 1f       	adc	r23, r27
    40a2:	8e 1f       	adc	r24, r30
    40a4:	9f 1f       	adc	r25, r31
    40a6:	66 0f       	add	r22, r22
    40a8:	77 1f       	adc	r23, r23
    40aa:	88 1f       	adc	r24, r24
    40ac:	99 1f       	adc	r25, r25
    40ae:	62 0f       	add	r22, r18
    40b0:	71 1d       	adc	r23, r1
    40b2:	81 1d       	adc	r24, r1
    40b4:	91 1d       	adc	r25, r1
    40b6:	08 95       	ret
    40b8:	33 e0       	ldi	r19, 0x03	; 3
    40ba:	66 0f       	add	r22, r22
    40bc:	77 1f       	adc	r23, r23
    40be:	88 1f       	adc	r24, r24
    40c0:	99 1f       	adc	r25, r25
    40c2:	31 50       	subi	r19, 0x01	; 1
    40c4:	d1 f7       	brne	.-12     	; 0x40ba <mulacc+0x34>
    40c6:	f3 cf       	rjmp	.-26     	; 0x40ae <mulacc+0x28>
    40c8:	34 e0       	ldi	r19, 0x04	; 4
    40ca:	f7 cf       	rjmp	.-18     	; 0x40ba <mulacc+0x34>

000040cc <skip_spaces>:
skip_spaces():
    40cc:	0f 93       	push	r16
    40ce:	1f 93       	push	r17
    40d0:	cf 93       	push	r28
    40d2:	df 93       	push	r29
    40d4:	8c 01       	movw	r16, r24
    40d6:	c8 01       	movw	r24, r16
    40d8:	0e 94 d2 22 	call	0x45a4	; 0x45a4 <fgetc>
    40dc:	ec 01       	movw	r28, r24
    40de:	97 fd       	sbrc	r25, 7
    40e0:	08 c0       	rjmp	.+16     	; 0x40f2 <skip_spaces+0x26>
    40e2:	0e 94 b5 17 	call	0x2f6a	; 0x2f6a <isspace>
    40e6:	89 2b       	or	r24, r25
    40e8:	b1 f7       	brne	.-20     	; 0x40d6 <skip_spaces+0xa>
    40ea:	b8 01       	movw	r22, r16
    40ec:	ce 01       	movw	r24, r28
    40ee:	0e 94 0e 23 	call	0x461c	; 0x461c <ungetc>
    40f2:	ce 01       	movw	r24, r28
    40f4:	df 91       	pop	r29
    40f6:	cf 91       	pop	r28
    40f8:	1f 91       	pop	r17
    40fa:	0f 91       	pop	r16
    40fc:	08 95       	ret

000040fe <conv_int>:
conv_int():
    40fe:	8f 92       	push	r8
    4100:	9f 92       	push	r9
    4102:	af 92       	push	r10
    4104:	bf 92       	push	r11
    4106:	ef 92       	push	r14
    4108:	ff 92       	push	r15
    410a:	0f 93       	push	r16
    410c:	1f 93       	push	r17
    410e:	cf 93       	push	r28
    4110:	df 93       	push	r29
    4112:	8c 01       	movw	r16, r24
    4114:	d6 2f       	mov	r29, r22
    4116:	7a 01       	movw	r14, r20
    4118:	b2 2e       	mov	r11, r18
    411a:	0e 94 d2 22 	call	0x45a4	; 0x45a4 <fgetc>
    411e:	9c 01       	movw	r18, r24
    4120:	33 27       	eor	r19, r19
    4122:	2b 32       	cpi	r18, 0x2B	; 43
    4124:	31 05       	cpc	r19, r1
    4126:	29 f0       	breq	.+10     	; 0x4132 <conv_int+0x34>
    4128:	2d 32       	cpi	r18, 0x2D	; 45
    412a:	31 05       	cpc	r19, r1
    412c:	a9 f4       	brne	.+42     	; 0x4158 <conv_int+0x5a>
    412e:	68 94       	set
    4130:	b7 f8       	bld	r11, 7
    4132:	d1 50       	subi	r29, 0x01	; 1
    4134:	61 f4       	brne	.+24     	; 0x414e <conv_int+0x50>
    4136:	80 e0       	ldi	r24, 0x00	; 0
    4138:	df 91       	pop	r29
    413a:	cf 91       	pop	r28
    413c:	1f 91       	pop	r17
    413e:	0f 91       	pop	r16
    4140:	ff 90       	pop	r15
    4142:	ef 90       	pop	r14
    4144:	bf 90       	pop	r11
    4146:	af 90       	pop	r10
    4148:	9f 90       	pop	r9
    414a:	8f 90       	pop	r8
    414c:	08 95       	ret
    414e:	c8 01       	movw	r24, r16
    4150:	0e 94 d2 22 	call	0x45a4	; 0x45a4 <fgetc>
    4154:	97 fd       	sbrc	r25, 7
    4156:	ef cf       	rjmp	.-34     	; 0x4136 <conv_int+0x38>
    4158:	cb 2d       	mov	r28, r11
    415a:	cd 7f       	andi	r28, 0xFD	; 253
    415c:	2b 2d       	mov	r18, r11
    415e:	20 73       	andi	r18, 0x30	; 48
    4160:	f9 f4       	brne	.+62     	; 0x41a0 <conv_int+0xa2>
    4162:	80 33       	cpi	r24, 0x30	; 48
    4164:	e9 f4       	brne	.+58     	; 0x41a0 <conv_int+0xa2>
    4166:	aa 24       	eor	r10, r10
    4168:	aa 94       	dec	r10
    416a:	ad 0e       	add	r10, r29
    416c:	89 f0       	breq	.+34     	; 0x4190 <conv_int+0x92>
    416e:	c8 01       	movw	r24, r16
    4170:	0e 94 d2 22 	call	0x45a4	; 0x45a4 <fgetc>
    4174:	97 fd       	sbrc	r25, 7
    4176:	0c c0       	rjmp	.+24     	; 0x4190 <conv_int+0x92>
    4178:	28 2f       	mov	r18, r24
    417a:	2f 7d       	andi	r18, 0xDF	; 223
    417c:	28 35       	cpi	r18, 0x58	; 88
    417e:	61 f4       	brne	.+24     	; 0x4198 <conv_int+0x9a>
    4180:	c2 64       	ori	r28, 0x42	; 66
    4182:	d2 50       	subi	r29, 0x02	; 2
    4184:	29 f0       	breq	.+10     	; 0x4190 <conv_int+0x92>
    4186:	c8 01       	movw	r24, r16
    4188:	0e 94 d2 22 	call	0x45a4	; 0x45a4 <fgetc>
    418c:	97 ff       	sbrs	r25, 7
    418e:	08 c0       	rjmp	.+16     	; 0x41a0 <conv_int+0xa2>
    4190:	81 2c       	mov	r8, r1
    4192:	91 2c       	mov	r9, r1
    4194:	54 01       	movw	r10, r8
    4196:	1b c0       	rjmp	.+54     	; 0x41ce <conv_int+0xd0>
    4198:	b6 fe       	sbrs	r11, 6
    419a:	2b c0       	rjmp	.+86     	; 0x41f2 <conv_int+0xf4>
    419c:	c2 60       	ori	r28, 0x02	; 2
    419e:	da 2d       	mov	r29, r10
    41a0:	81 2c       	mov	r8, r1
    41a2:	91 2c       	mov	r9, r1
    41a4:	54 01       	movw	r10, r8
    41a6:	20 ed       	ldi	r18, 0xD0	; 208
    41a8:	28 0f       	add	r18, r24
    41aa:	28 30       	cpi	r18, 0x08	; 8
    41ac:	28 f1       	brcs	.+74     	; 0x41f8 <conv_int+0xfa>
    41ae:	c4 fd       	sbrc	r28, 4
    41b0:	09 c0       	rjmp	.+18     	; 0x41c4 <conv_int+0xc6>
    41b2:	2a 30       	cpi	r18, 0x0A	; 10
    41b4:	08 f1       	brcs	.+66     	; 0x41f8 <conv_int+0xfa>
    41b6:	c6 ff       	sbrs	r28, 6
    41b8:	05 c0       	rjmp	.+10     	; 0x41c4 <conv_int+0xc6>
    41ba:	2f 7d       	andi	r18, 0xDF	; 223
    41bc:	3f ee       	ldi	r19, 0xEF	; 239
    41be:	32 0f       	add	r19, r18
    41c0:	36 30       	cpi	r19, 0x06	; 6
    41c2:	c8 f0       	brcs	.+50     	; 0x41f6 <conv_int+0xf8>
    41c4:	b8 01       	movw	r22, r16
    41c6:	0e 94 0e 23 	call	0x461c	; 0x461c <ungetc>
    41ca:	c1 ff       	sbrs	r28, 1
    41cc:	b4 cf       	rjmp	.-152    	; 0x4136 <conv_int+0x38>
    41ce:	c7 ff       	sbrs	r28, 7
    41d0:	08 c0       	rjmp	.+16     	; 0x41e2 <conv_int+0xe4>
    41d2:	b0 94       	com	r11
    41d4:	a0 94       	com	r10
    41d6:	90 94       	com	r9
    41d8:	80 94       	com	r8
    41da:	81 1c       	adc	r8, r1
    41dc:	91 1c       	adc	r9, r1
    41de:	a1 1c       	adc	r10, r1
    41e0:	b1 1c       	adc	r11, r1
    41e2:	2c 2f       	mov	r18, r28
    41e4:	b5 01       	movw	r22, r10
    41e6:	a4 01       	movw	r20, r8
    41e8:	c7 01       	movw	r24, r14
    41ea:	0e 94 37 20 	call	0x406e	; 0x406e <putval>
    41ee:	81 e0       	ldi	r24, 0x01	; 1
    41f0:	a3 cf       	rjmp	.-186    	; 0x4138 <conv_int+0x3a>
    41f2:	c2 61       	ori	r28, 0x12	; 18
    41f4:	d4 cf       	rjmp	.-88     	; 0x419e <conv_int+0xa0>
    41f6:	27 50       	subi	r18, 0x07	; 7
    41f8:	4c 2f       	mov	r20, r28
    41fa:	c5 01       	movw	r24, r10
    41fc:	b4 01       	movw	r22, r8
    41fe:	0e 94 43 20 	call	0x4086	; 0x4086 <mulacc>
    4202:	4b 01       	movw	r8, r22
    4204:	5c 01       	movw	r10, r24
    4206:	c2 60       	ori	r28, 0x02	; 2
    4208:	d1 50       	subi	r29, 0x01	; 1
    420a:	09 f3       	breq	.-62     	; 0x41ce <conv_int+0xd0>
    420c:	c8 01       	movw	r24, r16
    420e:	0e 94 d2 22 	call	0x45a4	; 0x45a4 <fgetc>
    4212:	97 ff       	sbrs	r25, 7
    4214:	c8 cf       	rjmp	.-112    	; 0x41a6 <conv_int+0xa8>
    4216:	d9 cf       	rjmp	.-78     	; 0x41ca <conv_int+0xcc>

00004218 <conv_brk>:
conv_brk():
    4218:	a0 e2       	ldi	r26, 0x20	; 32
    421a:	b0 e0       	ldi	r27, 0x00	; 0
    421c:	e2 e1       	ldi	r30, 0x12	; 18
    421e:	f1 e2       	ldi	r31, 0x21	; 33
    4220:	0c 94 a0 1b 	jmp	0x3740	; 0x3740 <__prologue_saves__+0xa>
    4224:	5c 01       	movw	r10, r24
    4226:	96 2e       	mov	r9, r22
    4228:	7a 01       	movw	r14, r20
    422a:	ce 01       	movw	r24, r28
    422c:	01 96       	adiw	r24, 0x01	; 1
    422e:	6c 01       	movw	r12, r24
    4230:	80 e2       	ldi	r24, 0x20	; 32
    4232:	f6 01       	movw	r30, r12
    4234:	11 92       	st	Z+, r1
    4236:	8a 95       	dec	r24
    4238:	e9 f7       	brne	.-6      	; 0x4234 <conv_brk+0x1c>
    423a:	f5 01       	movw	r30, r10
    423c:	b3 81       	ldd	r27, Z+3	; 0x03
    423e:	89 01       	movw	r16, r18
    4240:	30 e0       	ldi	r19, 0x00	; 0
    4242:	20 e0       	ldi	r18, 0x00	; 0
    4244:	71 2c       	mov	r7, r1
    4246:	81 2c       	mov	r8, r1
    4248:	a0 e0       	ldi	r26, 0x00	; 0
    424a:	41 e0       	ldi	r20, 0x01	; 1
    424c:	50 e0       	ldi	r21, 0x00	; 0
    424e:	f8 01       	movw	r30, r16
    4250:	b3 fd       	sbrc	r27, 3
    4252:	85 91       	lpm	r24, Z+
    4254:	b3 ff       	sbrs	r27, 3
    4256:	81 91       	ld	r24, Z+
    4258:	98 2f       	mov	r25, r24
    425a:	8f 01       	movw	r16, r30
    425c:	81 11       	cpse	r24, r1
    425e:	07 c0       	rjmp	.+14     	; 0x426e <conv_brk+0x56>
    4260:	10 e0       	ldi	r17, 0x00	; 0
    4262:	00 e0       	ldi	r16, 0x00	; 0
    4264:	c8 01       	movw	r24, r16
    4266:	a0 96       	adiw	r28, 0x20	; 32
    4268:	ed e0       	ldi	r30, 0x0D	; 13
    426a:	0c 94 bc 1b 	jmp	0x3778	; 0x3778 <__epilogue_restores__+0xa>
    426e:	8e 35       	cpi	r24, 0x5E	; 94
    4270:	19 f4       	brne	.+6      	; 0x4278 <conv_brk+0x60>
    4272:	21 15       	cp	r18, r1
    4274:	31 05       	cpc	r19, r1
    4276:	41 f1       	breq	.+80     	; 0x42c8 <conv_brk+0xb0>
    4278:	a2 17       	cp	r26, r18
    427a:	13 06       	cpc	r1, r19
    427c:	4c f4       	brge	.+18     	; 0x4290 <conv_brk+0x78>
    427e:	8d 35       	cpi	r24, 0x5D	; 93
    4280:	49 f1       	breq	.+82     	; 0x42d4 <conv_brk+0xbc>
    4282:	8d 32       	cpi	r24, 0x2D	; 45
    4284:	29 f4       	brne	.+10     	; 0x4290 <conv_brk+0x78>
    4286:	81 10       	cpse	r8, r1
    4288:	06 c0       	rjmp	.+12     	; 0x4296 <conv_brk+0x7e>
    428a:	88 24       	eor	r8, r8
    428c:	83 94       	inc	r8
    428e:	1d c0       	rjmp	.+58     	; 0x42ca <conv_brk+0xb2>
    4290:	88 20       	and	r8, r8
    4292:	09 f4       	brne	.+2      	; 0x4296 <conv_brk+0x7e>
    4294:	64 c0       	rjmp	.+200    	; 0x435e <conv_brk+0x146>
    4296:	e9 2f       	mov	r30, r25
    4298:	e6 95       	lsr	r30
    429a:	e6 95       	lsr	r30
    429c:	e6 95       	lsr	r30
    429e:	ec 0d       	add	r30, r12
    42a0:	fd 2d       	mov	r31, r13
    42a2:	f1 1d       	adc	r31, r1
    42a4:	89 2f       	mov	r24, r25
    42a6:	87 70       	andi	r24, 0x07	; 7
    42a8:	ba 01       	movw	r22, r20
    42aa:	01 c0       	rjmp	.+2      	; 0x42ae <conv_brk+0x96>
    42ac:	66 0f       	add	r22, r22
    42ae:	8a 95       	dec	r24
    42b0:	ea f7       	brpl	.-6      	; 0x42ac <conv_brk+0x94>
    42b2:	80 81       	ld	r24, Z
    42b4:	68 2b       	or	r22, r24
    42b6:	60 83       	st	Z, r22
    42b8:	79 16       	cp	r7, r25
    42ba:	51 f0       	breq	.+20     	; 0x42d0 <conv_brk+0xb8>
    42bc:	97 15       	cp	r25, r7
    42be:	10 f4       	brcc	.+4      	; 0x42c4 <conv_brk+0xac>
    42c0:	9f 5f       	subi	r25, 0xFF	; 255
    42c2:	e9 cf       	rjmp	.-46     	; 0x4296 <conv_brk+0x7e>
    42c4:	91 50       	subi	r25, 0x01	; 1
    42c6:	e7 cf       	rjmp	.-50     	; 0x4296 <conv_brk+0x7e>
    42c8:	a1 e0       	ldi	r26, 0x01	; 1
    42ca:	2f 5f       	subi	r18, 0xFF	; 255
    42cc:	3f 4f       	sbci	r19, 0xFF	; 255
    42ce:	bf cf       	rjmp	.-130    	; 0x424e <conv_brk+0x36>
    42d0:	81 2c       	mov	r8, r1
    42d2:	fb cf       	rjmp	.-10     	; 0x42ca <conv_brk+0xb2>
    42d4:	88 20       	and	r8, r8
    42d6:	19 f0       	breq	.+6      	; 0x42de <conv_brk+0xc6>
    42d8:	8e 81       	ldd	r24, Y+6	; 0x06
    42da:	80 62       	ori	r24, 0x20	; 32
    42dc:	8e 83       	std	Y+6, r24	; 0x06
    42de:	aa 23       	and	r26, r26
    42e0:	59 f0       	breq	.+22     	; 0x42f8 <conv_brk+0xe0>
    42e2:	f6 01       	movw	r30, r12
    42e4:	9e 01       	movw	r18, r28
    42e6:	2f 5d       	subi	r18, 0xDF	; 223
    42e8:	3f 4f       	sbci	r19, 0xFF	; 255
    42ea:	80 81       	ld	r24, Z
    42ec:	80 95       	com	r24
    42ee:	80 83       	st	Z, r24
    42f0:	31 96       	adiw	r30, 0x01	; 1
    42f2:	e2 17       	cp	r30, r18
    42f4:	f3 07       	cpc	r31, r19
    42f6:	c9 f7       	brne	.-14     	; 0x42ea <conv_brk+0xd2>
    42f8:	88 24       	eor	r8, r8
    42fa:	83 94       	inc	r8
    42fc:	c5 01       	movw	r24, r10
    42fe:	0e 94 d2 22 	call	0x45a4	; 0x45a4 <fgetc>
    4302:	97 fd       	sbrc	r25, 7
    4304:	16 c0       	rjmp	.+44     	; 0x4332 <conv_brk+0x11a>
    4306:	e8 2f       	mov	r30, r24
    4308:	e6 95       	lsr	r30
    430a:	e6 95       	lsr	r30
    430c:	e6 95       	lsr	r30
    430e:	ec 0d       	add	r30, r12
    4310:	fd 2d       	mov	r31, r13
    4312:	f1 1d       	adc	r31, r1
    4314:	20 81       	ld	r18, Z
    4316:	30 e0       	ldi	r19, 0x00	; 0
    4318:	ac 01       	movw	r20, r24
    431a:	47 70       	andi	r20, 0x07	; 7
    431c:	55 27       	eor	r21, r21
    431e:	02 c0       	rjmp	.+4      	; 0x4324 <conv_brk+0x10c>
    4320:	35 95       	asr	r19
    4322:	27 95       	ror	r18
    4324:	4a 95       	dec	r20
    4326:	e2 f7       	brpl	.-8      	; 0x4320 <conv_brk+0x108>
    4328:	20 fd       	sbrc	r18, 0
    432a:	06 c0       	rjmp	.+12     	; 0x4338 <conv_brk+0x120>
    432c:	b5 01       	movw	r22, r10
    432e:	0e 94 0e 23 	call	0x461c	; 0x461c <ungetc>
    4332:	88 20       	and	r8, r8
    4334:	69 f0       	breq	.+26     	; 0x4350 <conv_brk+0x138>
    4336:	94 cf       	rjmp	.-216    	; 0x4260 <conv_brk+0x48>
    4338:	e1 14       	cp	r14, r1
    433a:	f1 04       	cpc	r15, r1
    433c:	29 f0       	breq	.+10     	; 0x4348 <conv_brk+0x130>
    433e:	f7 01       	movw	r30, r14
    4340:	80 83       	st	Z, r24
    4342:	c7 01       	movw	r24, r14
    4344:	01 96       	adiw	r24, 0x01	; 1
    4346:	7c 01       	movw	r14, r24
    4348:	9a 94       	dec	r9
    434a:	81 2c       	mov	r8, r1
    434c:	91 10       	cpse	r9, r1
    434e:	d6 cf       	rjmp	.-84     	; 0x42fc <conv_brk+0xe4>
    4350:	e1 14       	cp	r14, r1
    4352:	f1 04       	cpc	r15, r1
    4354:	09 f4       	brne	.+2      	; 0x4358 <conv_brk+0x140>
    4356:	86 cf       	rjmp	.-244    	; 0x4264 <conv_brk+0x4c>
    4358:	f7 01       	movw	r30, r14
    435a:	10 82       	st	Z, r1
    435c:	83 cf       	rjmp	.-250    	; 0x4264 <conv_brk+0x4c>
    435e:	e8 2f       	mov	r30, r24
    4360:	e6 95       	lsr	r30
    4362:	e6 95       	lsr	r30
    4364:	e6 95       	lsr	r30
    4366:	ec 0d       	add	r30, r12
    4368:	fd 2d       	mov	r31, r13
    436a:	f1 1d       	adc	r31, r1
    436c:	98 2f       	mov	r25, r24
    436e:	97 70       	andi	r25, 0x07	; 7
    4370:	ba 01       	movw	r22, r20
    4372:	01 c0       	rjmp	.+2      	; 0x4376 <conv_brk+0x15e>
    4374:	66 0f       	add	r22, r22
    4376:	9a 95       	dec	r25
    4378:	ea f7       	brpl	.-6      	; 0x4374 <conv_brk+0x15c>
    437a:	90 81       	ld	r25, Z
    437c:	69 2b       	or	r22, r25
    437e:	60 83       	st	Z, r22
    4380:	78 2e       	mov	r7, r24
    4382:	a3 cf       	rjmp	.-186    	; 0x42ca <conv_brk+0xb2>

00004384 <vfscanf>:
vfscanf():
    4384:	b0 e0       	ldi	r27, 0x00	; 0
    4386:	a0 e0       	ldi	r26, 0x00	; 0
    4388:	e8 ec       	ldi	r30, 0xC8	; 200
    438a:	f1 e2       	ldi	r31, 0x21	; 33
    438c:	0c 94 9e 1b 	jmp	0x373c	; 0x373c <__prologue_saves__+0x6>
    4390:	6c 01       	movw	r12, r24
    4392:	eb 01       	movw	r28, r22
    4394:	5a 01       	movw	r10, r20
    4396:	fc 01       	movw	r30, r24
    4398:	17 82       	std	Z+7, r1	; 0x07
    439a:	16 82       	std	Z+6, r1	; 0x06
    439c:	51 2c       	mov	r5, r1
    439e:	f6 01       	movw	r30, r12
    43a0:	e3 80       	ldd	r14, Z+3	; 0x03
    43a2:	fe 01       	movw	r30, r28
    43a4:	e3 fc       	sbrc	r14, 3
    43a6:	85 91       	lpm	r24, Z+
    43a8:	e3 fe       	sbrs	r14, 3
    43aa:	81 91       	ld	r24, Z+
    43ac:	18 2f       	mov	r17, r24
    43ae:	ef 01       	movw	r28, r30
    43b0:	88 23       	and	r24, r24
    43b2:	e9 f0       	breq	.+58     	; 0x43ee <vfscanf+0x6a>
    43b4:	90 e0       	ldi	r25, 0x00	; 0
    43b6:	0e 94 b5 17 	call	0x2f6a	; 0x2f6a <isspace>
    43ba:	89 2b       	or	r24, r25
    43bc:	21 f0       	breq	.+8      	; 0x43c6 <vfscanf+0x42>
    43be:	c6 01       	movw	r24, r12
    43c0:	0e 94 66 20 	call	0x40cc	; 0x40cc <skip_spaces>
    43c4:	ec cf       	rjmp	.-40     	; 0x439e <vfscanf+0x1a>
    43c6:	15 32       	cpi	r17, 0x25	; 37
    43c8:	41 f4       	brne	.+16     	; 0x43da <vfscanf+0x56>
    43ca:	fe 01       	movw	r30, r28
    43cc:	e3 fc       	sbrc	r14, 3
    43ce:	15 91       	lpm	r17, Z+
    43d0:	e3 fe       	sbrs	r14, 3
    43d2:	11 91       	ld	r17, Z+
    43d4:	ef 01       	movw	r28, r30
    43d6:	15 32       	cpi	r17, 0x25	; 37
    43d8:	69 f4       	brne	.+26     	; 0x43f4 <vfscanf+0x70>
    43da:	c6 01       	movw	r24, r12
    43dc:	0e 94 d2 22 	call	0x45a4	; 0x45a4 <fgetc>
    43e0:	97 fd       	sbrc	r25, 7
    43e2:	8e c0       	rjmp	.+284    	; 0x4500 <vfscanf+0x17c>
    43e4:	18 17       	cp	r17, r24
    43e6:	d9 f2       	breq	.-74     	; 0x439e <vfscanf+0x1a>
    43e8:	b6 01       	movw	r22, r12
    43ea:	0e 94 0e 23 	call	0x461c	; 0x461c <ungetc>
    43ee:	85 2d       	mov	r24, r5
    43f0:	90 e0       	ldi	r25, 0x00	; 0
    43f2:	8a c0       	rjmp	.+276    	; 0x4508 <vfscanf+0x184>
    43f4:	00 e0       	ldi	r16, 0x00	; 0
    43f6:	1a 32       	cpi	r17, 0x2A	; 42
    43f8:	31 f4       	brne	.+12     	; 0x4406 <vfscanf+0x82>
    43fa:	e3 fc       	sbrc	r14, 3
    43fc:	15 91       	lpm	r17, Z+
    43fe:	e3 fe       	sbrs	r14, 3
    4400:	11 91       	ld	r17, Z+
    4402:	ef 01       	movw	r28, r30
    4404:	01 e0       	ldi	r16, 0x01	; 1
    4406:	f1 2c       	mov	r15, r1
    4408:	20 ed       	ldi	r18, 0xD0	; 208
    440a:	21 0f       	add	r18, r17
    440c:	2a 30       	cpi	r18, 0x0A	; 10
    440e:	48 f1       	brcs	.+82     	; 0x4462 <vfscanf+0xde>
    4410:	01 ff       	sbrs	r16, 1
    4412:	37 c0       	rjmp	.+110    	; 0x4482 <vfscanf+0xfe>
    4414:	ff 20       	and	r15, r15
    4416:	59 f3       	breq	.-42     	; 0x43ee <vfscanf+0x6a>
    4418:	18 36       	cpi	r17, 0x68	; 104
    441a:	b1 f1       	breq	.+108    	; 0x4488 <vfscanf+0x104>
    441c:	1c 36       	cpi	r17, 0x6C	; 108
    441e:	09 f4       	brne	.+2      	; 0x4422 <vfscanf+0x9e>
    4420:	3d c0       	rjmp	.+122    	; 0x449c <vfscanf+0x118>
    4422:	11 23       	and	r17, r17
    4424:	21 f3       	breq	.-56     	; 0x43ee <vfscanf+0x6a>
    4426:	61 2f       	mov	r22, r17
    4428:	70 e0       	ldi	r23, 0x00	; 0
    442a:	81 e1       	ldi	r24, 0x11	; 17
    442c:	91 e0       	ldi	r25, 0x01	; 1
    442e:	0e 94 c7 22 	call	0x458e	; 0x458e <strchr_P>
    4432:	89 2b       	or	r24, r25
    4434:	e1 f2       	breq	.-72     	; 0x43ee <vfscanf+0x6a>
    4436:	91 2c       	mov	r9, r1
    4438:	81 2c       	mov	r8, r1
    443a:	00 fd       	sbrc	r16, 0
    443c:	06 c0       	rjmp	.+12     	; 0x444a <vfscanf+0xc6>
    443e:	f5 01       	movw	r30, r10
    4440:	80 80       	ld	r8, Z
    4442:	91 80       	ldd	r9, Z+1	; 0x01
    4444:	c5 01       	movw	r24, r10
    4446:	02 96       	adiw	r24, 0x02	; 2
    4448:	5c 01       	movw	r10, r24
    444a:	1e 36       	cpi	r17, 0x6E	; 110
    444c:	79 f5       	brne	.+94     	; 0x44ac <vfscanf+0x128>
    444e:	f6 01       	movw	r30, r12
    4450:	46 81       	ldd	r20, Z+6	; 0x06
    4452:	57 81       	ldd	r21, Z+7	; 0x07
    4454:	70 e0       	ldi	r23, 0x00	; 0
    4456:	60 e0       	ldi	r22, 0x00	; 0
    4458:	20 2f       	mov	r18, r16
    445a:	c4 01       	movw	r24, r8
    445c:	0e 94 37 20 	call	0x406e	; 0x406e <putval>
    4460:	9e cf       	rjmp	.-196    	; 0x439e <vfscanf+0x1a>
    4462:	02 60       	ori	r16, 0x02	; 2
    4464:	6f 2d       	mov	r22, r15
    4466:	70 e0       	ldi	r23, 0x00	; 0
    4468:	90 e0       	ldi	r25, 0x00	; 0
    446a:	80 e0       	ldi	r24, 0x00	; 0
    446c:	40 e2       	ldi	r20, 0x20	; 32
    446e:	0e 94 43 20 	call	0x4086	; 0x4086 <mulacc>
    4472:	f6 2e       	mov	r15, r22
    4474:	fe 01       	movw	r30, r28
    4476:	e3 fc       	sbrc	r14, 3
    4478:	15 91       	lpm	r17, Z+
    447a:	e3 fe       	sbrs	r14, 3
    447c:	11 91       	ld	r17, Z+
    447e:	ef 01       	movw	r28, r30
    4480:	c3 cf       	rjmp	.-122    	; 0x4408 <vfscanf+0x84>
    4482:	ff 24       	eor	r15, r15
    4484:	fa 94       	dec	r15
    4486:	c8 cf       	rjmp	.-112    	; 0x4418 <vfscanf+0x94>
    4488:	fe 01       	movw	r30, r28
    448a:	e3 fc       	sbrc	r14, 3
    448c:	15 91       	lpm	r17, Z+
    448e:	e3 fe       	sbrs	r14, 3
    4490:	11 91       	ld	r17, Z+
    4492:	ef 01       	movw	r28, r30
    4494:	18 36       	cpi	r17, 0x68	; 104
    4496:	09 f0       	breq	.+2      	; 0x449a <vfscanf+0x116>
    4498:	c4 cf       	rjmp	.-120    	; 0x4422 <vfscanf+0x9e>
    449a:	08 60       	ori	r16, 0x08	; 8
    449c:	04 60       	ori	r16, 0x04	; 4
    449e:	fe 01       	movw	r30, r28
    44a0:	e3 fc       	sbrc	r14, 3
    44a2:	15 91       	lpm	r17, Z+
    44a4:	e3 fe       	sbrs	r14, 3
    44a6:	11 91       	ld	r17, Z+
    44a8:	ef 01       	movw	r28, r30
    44aa:	bb cf       	rjmp	.-138    	; 0x4422 <vfscanf+0x9e>
    44ac:	13 36       	cpi	r17, 0x63	; 99
    44ae:	c1 f4       	brne	.+48     	; 0x44e0 <vfscanf+0x15c>
    44b0:	01 fd       	sbrc	r16, 1
    44b2:	02 c0       	rjmp	.+4      	; 0x44b8 <vfscanf+0x134>
    44b4:	ff 24       	eor	r15, r15
    44b6:	f3 94       	inc	r15
    44b8:	c6 01       	movw	r24, r12
    44ba:	0e 94 d2 22 	call	0x45a4	; 0x45a4 <fgetc>
    44be:	97 fd       	sbrc	r25, 7
    44c0:	1f c0       	rjmp	.+62     	; 0x4500 <vfscanf+0x17c>
    44c2:	81 14       	cp	r8, r1
    44c4:	91 04       	cpc	r9, r1
    44c6:	29 f0       	breq	.+10     	; 0x44d2 <vfscanf+0x14e>
    44c8:	f4 01       	movw	r30, r8
    44ca:	80 83       	st	Z, r24
    44cc:	c4 01       	movw	r24, r8
    44ce:	01 96       	adiw	r24, 0x01	; 1
    44d0:	4c 01       	movw	r8, r24
    44d2:	fa 94       	dec	r15
    44d4:	f1 10       	cpse	r15, r1
    44d6:	f0 cf       	rjmp	.-32     	; 0x44b8 <vfscanf+0x134>
    44d8:	00 fd       	sbrc	r16, 0
    44da:	61 cf       	rjmp	.-318    	; 0x439e <vfscanf+0x1a>
    44dc:	53 94       	inc	r5
    44de:	5f cf       	rjmp	.-322    	; 0x439e <vfscanf+0x1a>
    44e0:	1b 35       	cpi	r17, 0x5B	; 91
    44e2:	b9 f4       	brne	.+46     	; 0x4512 <vfscanf+0x18e>
    44e4:	9e 01       	movw	r18, r28
    44e6:	a4 01       	movw	r20, r8
    44e8:	6f 2d       	mov	r22, r15
    44ea:	c6 01       	movw	r24, r12
    44ec:	0e 94 0c 21 	call	0x4218	; 0x4218 <conv_brk>
    44f0:	ec 01       	movw	r28, r24
    44f2:	89 2b       	or	r24, r25
    44f4:	89 f7       	brne	.-30     	; 0x44d8 <vfscanf+0x154>
    44f6:	f6 01       	movw	r30, r12
    44f8:	83 81       	ldd	r24, Z+3	; 0x03
    44fa:	80 73       	andi	r24, 0x30	; 48
    44fc:	09 f4       	brne	.+2      	; 0x4500 <vfscanf+0x17c>
    44fe:	77 cf       	rjmp	.-274    	; 0x43ee <vfscanf+0x6a>
    4500:	8f ef       	ldi	r24, 0xFF	; 255
    4502:	9f ef       	ldi	r25, 0xFF	; 255
    4504:	51 10       	cpse	r5, r1
    4506:	73 cf       	rjmp	.-282    	; 0x43ee <vfscanf+0x6a>
    4508:	cd b7       	in	r28, 0x3d	; 61
    450a:	de b7       	in	r29, 0x3e	; 62
    450c:	ef e0       	ldi	r30, 0x0F	; 15
    450e:	0c 94 ba 1b 	jmp	0x3774	; 0x3774 <__epilogue_restores__+0x6>
    4512:	c6 01       	movw	r24, r12
    4514:	0e 94 66 20 	call	0x40cc	; 0x40cc <skip_spaces>
    4518:	97 fd       	sbrc	r25, 7
    451a:	f2 cf       	rjmp	.-28     	; 0x4500 <vfscanf+0x17c>
    451c:	1f 36       	cpi	r17, 0x6F	; 111
    451e:	a9 f1       	breq	.+106    	; 0x458a <vfscanf+0x206>
    4520:	30 f4       	brcc	.+12     	; 0x452e <vfscanf+0x1aa>
    4522:	14 36       	cpi	r17, 0x64	; 100
    4524:	41 f0       	breq	.+16     	; 0x4536 <vfscanf+0x1b2>
    4526:	19 36       	cpi	r17, 0x69	; 105
    4528:	39 f0       	breq	.+14     	; 0x4538 <vfscanf+0x1b4>
    452a:	00 64       	ori	r16, 0x40	; 64
    452c:	05 c0       	rjmp	.+10     	; 0x4538 <vfscanf+0x1b4>
    452e:	13 37       	cpi	r17, 0x73	; 115
    4530:	b9 f0       	breq	.+46     	; 0x4560 <vfscanf+0x1dc>
    4532:	15 37       	cpi	r17, 0x75	; 117
    4534:	d1 f7       	brne	.-12     	; 0x452a <vfscanf+0x1a6>
    4536:	00 62       	ori	r16, 0x20	; 32
    4538:	20 2f       	mov	r18, r16
    453a:	a4 01       	movw	r20, r8
    453c:	6f 2d       	mov	r22, r15
    453e:	c6 01       	movw	r24, r12
    4540:	0e 94 7f 20 	call	0x40fe	; 0x40fe <conv_int>
    4544:	81 11       	cpse	r24, r1
    4546:	c8 cf       	rjmp	.-112    	; 0x44d8 <vfscanf+0x154>
    4548:	d6 cf       	rjmp	.-84     	; 0x44f6 <vfscanf+0x172>
    454a:	81 14       	cp	r8, r1
    454c:	91 04       	cpc	r9, r1
    454e:	29 f0       	breq	.+10     	; 0x455a <vfscanf+0x1d6>
    4550:	f4 01       	movw	r30, r8
    4552:	60 82       	st	Z, r6
    4554:	c4 01       	movw	r24, r8
    4556:	01 96       	adiw	r24, 0x01	; 1
    4558:	4c 01       	movw	r8, r24
    455a:	fa 94       	dec	r15
    455c:	ff 20       	and	r15, r15
    455e:	71 f0       	breq	.+28     	; 0x457c <vfscanf+0x1f8>
    4560:	c6 01       	movw	r24, r12
    4562:	0e 94 d2 22 	call	0x45a4	; 0x45a4 <fgetc>
    4566:	3c 01       	movw	r6, r24
    4568:	97 fd       	sbrc	r25, 7
    456a:	08 c0       	rjmp	.+16     	; 0x457c <vfscanf+0x1f8>
    456c:	0e 94 b5 17 	call	0x2f6a	; 0x2f6a <isspace>
    4570:	89 2b       	or	r24, r25
    4572:	59 f3       	breq	.-42     	; 0x454a <vfscanf+0x1c6>
    4574:	b6 01       	movw	r22, r12
    4576:	c3 01       	movw	r24, r6
    4578:	0e 94 0e 23 	call	0x461c	; 0x461c <ungetc>
    457c:	81 14       	cp	r8, r1
    457e:	91 04       	cpc	r9, r1
    4580:	09 f4       	brne	.+2      	; 0x4584 <vfscanf+0x200>
    4582:	aa cf       	rjmp	.-172    	; 0x44d8 <vfscanf+0x154>
    4584:	f4 01       	movw	r30, r8
    4586:	10 82       	st	Z, r1
    4588:	a7 cf       	rjmp	.-178    	; 0x44d8 <vfscanf+0x154>
    458a:	00 61       	ori	r16, 0x10	; 16
    458c:	d5 cf       	rjmp	.-86     	; 0x4538 <vfscanf+0x1b4>

0000458e <strchr_P>:
strchr_P():
    458e:	fc 01       	movw	r30, r24
    4590:	05 90       	lpm	r0, Z+
    4592:	06 16       	cp	r0, r22
    4594:	21 f0       	breq	.+8      	; 0x459e <strchr_P+0x10>
    4596:	00 20       	and	r0, r0
    4598:	d9 f7       	brne	.-10     	; 0x4590 <strchr_P+0x2>
    459a:	c0 01       	movw	r24, r0
    459c:	08 95       	ret
    459e:	31 97       	sbiw	r30, 0x01	; 1
    45a0:	cf 01       	movw	r24, r30
    45a2:	08 95       	ret

000045a4 <fgetc>:
fgetc():
    45a4:	cf 93       	push	r28
    45a6:	df 93       	push	r29
    45a8:	ec 01       	movw	r28, r24
    45aa:	2b 81       	ldd	r18, Y+3	; 0x03
    45ac:	20 ff       	sbrs	r18, 0
    45ae:	1a c0       	rjmp	.+52     	; 0x45e4 <fgetc+0x40>
    45b0:	26 ff       	sbrs	r18, 6
    45b2:	0c c0       	rjmp	.+24     	; 0x45cc <fgetc+0x28>
    45b4:	2f 7b       	andi	r18, 0xBF	; 191
    45b6:	2b 83       	std	Y+3, r18	; 0x03
    45b8:	8e 81       	ldd	r24, Y+6	; 0x06
    45ba:	9f 81       	ldd	r25, Y+7	; 0x07
    45bc:	01 96       	adiw	r24, 0x01	; 1
    45be:	9f 83       	std	Y+7, r25	; 0x07
    45c0:	8e 83       	std	Y+6, r24	; 0x06
    45c2:	8a 81       	ldd	r24, Y+2	; 0x02
    45c4:	90 e0       	ldi	r25, 0x00	; 0
    45c6:	df 91       	pop	r29
    45c8:	cf 91       	pop	r28
    45ca:	08 95       	ret
    45cc:	22 ff       	sbrs	r18, 2
    45ce:	18 c0       	rjmp	.+48     	; 0x4600 <fgetc+0x5c>
    45d0:	e8 81       	ld	r30, Y
    45d2:	f9 81       	ldd	r31, Y+1	; 0x01
    45d4:	80 81       	ld	r24, Z
    45d6:	08 2e       	mov	r0, r24
    45d8:	00 0c       	add	r0, r0
    45da:	99 0b       	sbc	r25, r25
    45dc:	00 97       	sbiw	r24, 0x00	; 0
    45de:	29 f4       	brne	.+10     	; 0x45ea <fgetc+0x46>
    45e0:	20 62       	ori	r18, 0x20	; 32
    45e2:	2b 83       	std	Y+3, r18	; 0x03
    45e4:	8f ef       	ldi	r24, 0xFF	; 255
    45e6:	9f ef       	ldi	r25, 0xFF	; 255
    45e8:	ee cf       	rjmp	.-36     	; 0x45c6 <fgetc+0x22>
    45ea:	31 96       	adiw	r30, 0x01	; 1
    45ec:	f9 83       	std	Y+1, r31	; 0x01
    45ee:	e8 83       	st	Y, r30
    45f0:	2e 81       	ldd	r18, Y+6	; 0x06
    45f2:	3f 81       	ldd	r19, Y+7	; 0x07
    45f4:	2f 5f       	subi	r18, 0xFF	; 255
    45f6:	3f 4f       	sbci	r19, 0xFF	; 255
    45f8:	3f 83       	std	Y+7, r19	; 0x07
    45fa:	2e 83       	std	Y+6, r18	; 0x06
    45fc:	99 27       	eor	r25, r25
    45fe:	e3 cf       	rjmp	.-58     	; 0x45c6 <fgetc+0x22>
    4600:	ea 85       	ldd	r30, Y+10	; 0x0a
    4602:	fb 85       	ldd	r31, Y+11	; 0x0b
    4604:	09 95       	icall
    4606:	97 ff       	sbrs	r25, 7
    4608:	f3 cf       	rjmp	.-26     	; 0x45f0 <fgetc+0x4c>
    460a:	2b 81       	ldd	r18, Y+3	; 0x03
    460c:	01 96       	adiw	r24, 0x01	; 1
    460e:	21 f0       	breq	.+8      	; 0x4618 <fgetc+0x74>
    4610:	80 e2       	ldi	r24, 0x20	; 32
    4612:	82 2b       	or	r24, r18
    4614:	8b 83       	std	Y+3, r24	; 0x03
    4616:	e6 cf       	rjmp	.-52     	; 0x45e4 <fgetc+0x40>
    4618:	80 e1       	ldi	r24, 0x10	; 16
    461a:	fb cf       	rjmp	.-10     	; 0x4612 <fgetc+0x6e>

0000461c <ungetc>:
ungetc():
    461c:	fb 01       	movw	r30, r22
    461e:	23 81       	ldd	r18, Z+3	; 0x03
    4620:	20 ff       	sbrs	r18, 0
    4622:	11 c0       	rjmp	.+34     	; 0x4646 <ungetc+0x2a>
    4624:	26 fd       	sbrc	r18, 6
    4626:	0f c0       	rjmp	.+30     	; 0x4646 <ungetc+0x2a>
    4628:	8f 3f       	cpi	r24, 0xFF	; 255
    462a:	98 07       	cpc	r25, r24
    462c:	71 f0       	breq	.+28     	; 0x464a <ungetc+0x2e>
    462e:	82 83       	std	Z+2, r24	; 0x02
    4630:	2f 7d       	andi	r18, 0xDF	; 223
    4632:	20 64       	ori	r18, 0x40	; 64
    4634:	23 83       	std	Z+3, r18	; 0x03
    4636:	26 81       	ldd	r18, Z+6	; 0x06
    4638:	37 81       	ldd	r19, Z+7	; 0x07
    463a:	21 50       	subi	r18, 0x01	; 1
    463c:	31 09       	sbc	r19, r1
    463e:	37 83       	std	Z+7, r19	; 0x07
    4640:	26 83       	std	Z+6, r18	; 0x06
    4642:	99 27       	eor	r25, r25
    4644:	08 95       	ret
    4646:	8f ef       	ldi	r24, 0xFF	; 255
    4648:	9f ef       	ldi	r25, 0xFF	; 255
    464a:	08 95       	ret

0000464c <__do_global_dtors>:
__do_global_dtors():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2496
    464c:	18 e0       	ldi	r17, 0x08	; 8
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2497
    464e:	c9 e6       	ldi	r28, 0x69	; 105
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2498
    4650:	d8 e0       	ldi	r29, 0x08	; 8
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2502
    4652:	04 c0       	rjmp	.+8      	; 0x465c <__do_global_dtors+0x10>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2508
    4654:	fe 01       	movw	r30, r28
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2509
    4656:	0e 94 01 1f 	call	0x3e02	; 0x3e02 <__tablejump2__>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2510
    465a:	21 96       	adiw	r28, 0x01	; 1
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2515
    465c:	ca 36       	cpi	r28, 0x6A	; 106
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2516
    465e:	d1 07       	cpc	r29, r17
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2521
    4660:	c9 f7       	brne	.-14     	; 0x4654 <__do_global_dtors+0x8>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2278
    4662:	f8 94       	cli

00004664 <__stop_program>:
__stop_program():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2280
    4664:	ff cf       	rjmp	.-2      	; 0x4664 <__stop_program>
